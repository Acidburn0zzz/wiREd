!global.traceur && (0,eval)(require('fs').readFileSync(__dirname+'/../deps/traceur-compiler/bin/traceur.js', 'utf8'));
var $__toObject = function(value) {
  if (value == null) throw TypeError();
  return Object(value);
}, $__spread = function() {
  var rv = [], k = 0;
  for (var i = 0; i < arguments.length; i++) {
    var value = $__toObject(traceur.runtime.elementGet(arguments, i));
    for (var j = 0; j < value.length; j++) {
      traceur.runtime.elementSet(rv, k++, traceur.runtime.elementGet(value, j));
    }
  }
  return rv;
};
var $__0 = Object.freeze(Object.defineProperties(["00:Eb Gb;Ev Gv;Gb Eb;Gv Ev;AL Ib;rAX Iz"], {raw: {value: Object.freeze(["00:Eb Gb;Ev Gv;Gb Eb;Gv Ev;AL Ib;rAX Iz"])}})), $__1 = Object.freeze(Object.defineProperties(["06:ES"], {raw: {value: Object.freeze(["06:ES"])}})), $__2 = Object.freeze(Object.defineProperties(["07:ES"], {raw: {value: Object.freeze(["07:ES"])}})), $__3 = Object.freeze(Object.defineProperties(["08:Eb Gb;Ev Gv;Gb Eb;Gv Ev;AL Ib;rAX Iz"], {raw: {value: Object.freeze(["08:Eb Gb;Ev Gv;Gb Eb;Gv Ev;AL Ib;rAX Iz"])}})), $__4 = Object.freeze(Object.defineProperties(["0E:CS"], {raw: {value: Object.freeze(["0E:CS"])}})), $__5 = Object.freeze(Object.defineProperties(["10:Eb Gb;Ev Gv;Gb Eb;Gv Ev;AL Ib;rAX Iz"], {raw: {value: Object.freeze(["10:Eb Gb;Ev Gv;Gb Eb;Gv Ev;AL Ib;rAX Iz"])}})), $__6 = Object.freeze(Object.defineProperties(["16:SS"], {raw: {value: Object.freeze(["16:SS"])}})), $__7 = Object.freeze(Object.defineProperties(["17:SS"], {raw: {value: Object.freeze(["17:SS"])}})), $__8 = Object.freeze(Object.defineProperties(["18:Eb Gb;Ev Gv;Gb Eb;Gv Ev;AL Ib;rAX Iz"], {raw: {value: Object.freeze(["18:Eb Gb;Ev Gv;Gb Eb;Gv Ev;AL Ib;rAX Iz"])}})), $__9 = Object.freeze(Object.defineProperties(["1E:DS"], {raw: {value: Object.freeze(["1E:DS"])}})), $__10 = Object.freeze(Object.defineProperties(["1F:DS"], {raw: {value: Object.freeze(["1F:DS"])}})), $__11 = Object.freeze(Object.defineProperties(["20:Eb Gb;Ev Gv;Gb Eb;Gv Ev;AL Ib;rAX Iz"], {raw: {value: Object.freeze(["20:Eb Gb;Ev Gv;Gb Eb;Gv Ev;AL Ib;rAX Iz"])}})), $__12 = Object.freeze(Object.defineProperties(["28:Eb Gb;Ev Gv;Gb Eb;Gv Ev;AL Ib;rAX Iz"], {raw: {value: Object.freeze(["28:Eb Gb;Ev Gv;Gb Eb;Gv Ev;AL Ib;rAX Iz"])}})), $__13 = Object.freeze(Object.defineProperties(["30:Eb Gb;Ev Gv;Gb Eb;Gv Ev;AL Ib;rAX Iz"], {raw: {value: Object.freeze(["30:Eb Gb;Ev Gv;Gb Eb;Gv Ev;AL Ib;rAX Iz"])}})), $__14 = Object.freeze(Object.defineProperties(["38:Eb Gb;Ev Gv;Gb Eb;Gv Ev;AL Ib;rAX Iz"], {raw: {value: Object.freeze(["38:Eb Gb;Ev Gv;Gb Eb;Gv Ev;AL Ib;rAX Iz"])}})), $__15 = Object.freeze(Object.defineProperties(["40:eAX;eCX;eDX;eBX;eSP;eBP;eSI;eDI"], {raw: {value: Object.freeze(["40:eAX;eCX;eDX;eBX;eSP;eBP;eSI;eDI"])}})), $__16 = Object.freeze(Object.defineProperties(["48:eAX;eCX;eDX;eBX;eSP;eBP;eSI;eDI"], {raw: {value: Object.freeze(["48:eAX;eCX;eDX;eBX;eSP;eBP;eSI;eDI"])}})), $__17 = Object.freeze(Object.defineProperties(["50:eAX;eCX;eDX;eBX;eSP;eBP;eSI;eDI"], {raw: {value: Object.freeze(["50:eAX;eCX;eDX;eBX;eSP;eBP;eSI;eDI"])}})), $__18 = Object.freeze(Object.defineProperties(["58:eAX;eCX;eDX;eBX;eSP;eBP;eSI;eDI"], {raw: {value: Object.freeze(["58:eAX;eCX;eDX;eBX;eSP;eBP;eSI;eDI"])}})), $__19 = Object.freeze(Object.defineProperties(["68:Iz"], {raw: {value: Object.freeze(["68:Iz"])}})), $__20 = Object.freeze(Object.defineProperties(["6A:Ib"], {raw: {value: Object.freeze(["6A:Ib"])}})), $__21 = Object.freeze(Object.defineProperties(["Jb"], {raw: {value: Object.freeze(["Jb"])}})), $__22 = Object.freeze(Object.defineProperties(["80:reg=", ":Eb Ib;Ev Iz;Eb Ib;Ev Ib"], {raw: {value: Object.freeze(["80:reg=", ":Eb Ib;Ev Iz;Eb Ib;Ev Ib"])}})), $__23 = Object.freeze(Object.defineProperties(["84:Eb Gb;Ev Gv"], {raw: {value: Object.freeze(["84:Eb Gb;Ev Gv"])}})), $__24 = Object.freeze(Object.defineProperties(["86:Eb Gb;Ev Gv"], {raw: {value: Object.freeze(["86:Eb Gb;Ev Gv"])}})), $__25 = Object.freeze(Object.defineProperties(["88:Eb Gb;Ev Gv;Gb Eb;Gv Ev"], {raw: {value: Object.freeze(["88:Eb Gb;Ev Gv;Gb Eb;Gv Ev"])}})), $__26 = Object.freeze(Object.defineProperties(["8C:Ev Sw"], {raw: {value: Object.freeze(["8C:Ev Sw"])}})), $__27 = Object.freeze(Object.defineProperties(["8D:Gv M"], {raw: {value: Object.freeze(["8D:Gv M"])}})), $__28 = Object.freeze(Object.defineProperties(["8E:Sw Ew"], {raw: {value: Object.freeze(["8E:Sw Ew"])}})), $__29 = Object.freeze(Object.defineProperties(["8F:reg=0:Ev"], {raw: {value: Object.freeze(["8F:reg=0:Ev"])}})), $__30 = Object.freeze(Object.defineProperties(["90:"], {raw: {value: Object.freeze(["90:"])}})), $__31 = Object.freeze(Object.defineProperties(["91:rAX rCX;rAX rDX;rAX rBX;rAX rSP;rAX rBP;rAX rSI;rAX rDI"], {raw: {value: Object.freeze(["91:rAX rCX;rAX rDX;rAX rBX;rAX rSP;rAX rBP;rAX rSI;rAX rDI"])}})), $__32 = Object.freeze(Object.defineProperties(["9C:Fv"], {raw: {value: Object.freeze(["9C:Fv"])}})), $__33 = Object.freeze(Object.defineProperties(["A0:AL Ob;rAX Ov;Ob AL;Ov rAX"], {raw: {value: Object.freeze(["A0:AL Ob;rAX Ov;Ob AL;Ov rAX"])}})), $__34 = Object.freeze(Object.defineProperties(["A8:AL Ib;rAX Iz"], {raw: {value: Object.freeze(["A8:AL Ib;rAX Iz"])}})), $__35 = Object.freeze(Object.defineProperties(["AA:Yb AL;Yv rAX"], {raw: {value: Object.freeze(["AA:Yb AL;Yv rAX"])}})), $__36 = Object.freeze(Object.defineProperties(["AC:AL Xb;rAX Xv"], {raw: {value: Object.freeze(["AC:AL Xb;rAX Xv"])}})), $__37 = Object.freeze(Object.defineProperties(["B0:AL Ib;CL Ib;DL Ib;BL Ib;AH Ib;CH Ib;DH Ib;BH Ib"], {raw: {value: Object.freeze(["B0:AL Ib;CL Ib;DL Ib;BL Ib;AH Ib;CH Ib;DH Ib;BH Ib"])}})), $__38 = Object.freeze(Object.defineProperties(["B8:rAX Iv;rCX Iv;rDX Iv;rBX Iv;rSP Iv;rBP Iv;rSI Iv;rDI Iv"], {raw: {value: Object.freeze(["B8:rAX Iv;rCX Iv;rDX Iv;rBX Iv;rSP Iv;rBP Iv;rSI Iv;rDI Iv"])}})), $__39 = Object.freeze(Object.defineProperties(["C2:Iw"], {raw: {value: Object.freeze(["C2:Iw"])}})), $__40 = Object.freeze(Object.defineProperties(["C3:"], {raw: {value: Object.freeze(["C3:"])}})), $__41 = Object.freeze(Object.defineProperties(["C6:reg=0:Eb Ib;Ev Iz"], {raw: {value: Object.freeze(["C6:reg=0:Eb Ib;Ev Iz"])}})), $__42 = Object.freeze(Object.defineProperties(["C9:"], {raw: {value: Object.freeze(["C9:"])}})), $__43 = Object.freeze(Object.defineProperties(["CC:"], {raw: {value: Object.freeze(["CC:"])}})), $__44 = Object.freeze(Object.defineProperties(["C0:reg=", ":Eb Ib;Ev Ib"], {raw: {value: Object.freeze(["C0:reg=", ":Eb Ib;Ev Ib"])}})), $__45 = Object.freeze(Object.defineProperties(["D0:reg=", ":Eb;Ev"], {raw: {value: Object.freeze(["D0:reg=", ":Eb;Ev"])}})), $__46 = Object.freeze(Object.defineProperties(["D2:reg=", ":Eb CL;Ev CL"], {raw: {value: Object.freeze(["D2:reg=", ":Eb CL;Ev CL"])}})), $__47 = Object.freeze(Object.defineProperties(["E8:J Jz"], {raw: {value: Object.freeze(["E8:J Jz"])}})), $__48 = Object.freeze(Object.defineProperties(["E9:Jz"], {raw: {value: Object.freeze(["E9:Jz"])}})), $__49 = Object.freeze(Object.defineProperties(["EB:Jb"], {raw: {value: Object.freeze(["EB:Jb"])}})), $__50 = Object.freeze(Object.defineProperties(["F6:reg=0:Eb Ib;Ev Iz"], {raw: {value: Object.freeze(["F6:reg=0:Eb Ib;Ev Iz"])}})), $__51 = Object.freeze(Object.defineProperties(["F6:reg=", ":Eb;Ev"], {raw: {value: Object.freeze(["F6:reg=", ":Eb;Ev"])}})), $__52 = Object.freeze(Object.defineProperties(["F6:reg=4:AX AL Eb;EAX EAX Ev"], {raw: {value: Object.freeze(["F6:reg=4:AX AL Eb;EAX EAX Ev"])}})), $__53 = Object.freeze(Object.defineProperties(["F6:reg=5:AX AL Eb;EAX EAX Ev"], {raw: {value: Object.freeze(["F6:reg=5:AX AL Eb;EAX EAX Ev"])}})), $__54 = Object.freeze(Object.defineProperties(["F8:"], {raw: {value: Object.freeze(["F8:"])}})), $__55 = Object.freeze(Object.defineProperties(["F9:"], {raw: {value: Object.freeze(["F9:"])}})), $__56 = Object.freeze(Object.defineProperties(["FA:"], {raw: {value: Object.freeze(["FA:"])}})), $__57 = Object.freeze(Object.defineProperties(["FB:"], {raw: {value: Object.freeze(["FB:"])}})), $__58 = Object.freeze(Object.defineProperties(["FC:"], {raw: {value: Object.freeze(["FC:"])}})), $__59 = Object.freeze(Object.defineProperties(["FD:"], {raw: {value: Object.freeze(["FD:"])}})), $__60 = Object.freeze(Object.defineProperties(["FE:reg=", ":Eb;Ev"], {raw: {value: Object.freeze(["FE:reg=", ":Eb;Ev"])}})), $__61 = Object.freeze(Object.defineProperties(["FF:reg=", ":J Ev"], {raw: {value: Object.freeze(["FF:reg=", ":J Ev"])}})), $__62 = Object.freeze(Object.defineProperties(["FF:reg=6:Ev"], {raw: {value: Object.freeze(["FF:reg=6:Ev"])}})), $__63 = Object.freeze(Object.defineProperties(["Jz"], {raw: {value: Object.freeze(["Jz"])}})), $__64 = Object.freeze(Object.defineProperties(["Eb"], {raw: {value: Object.freeze(["Eb"])}})), $__65 = Object.freeze(Object.defineProperties(["0FA2:"], {raw: {value: Object.freeze(["0FA2:"])}})), $__66 = Object.freeze(Object.defineProperties(["0FAC:Ev Gv Ib;Ev Gv CL"], {raw: {value: Object.freeze(["0FAC:Ev Gv Ib;Ev Gv CL"])}})), $__67 = Object.freeze(Object.defineProperties(["0FAF:Gv Ev"], {raw: {value: Object.freeze(["0FAF:Gv Ev"])}})), $__68 = Object.freeze(Object.defineProperties(["0FB6:Gv Eb;Gv Ew"], {raw: {value: Object.freeze(["0FB6:Gv Eb;Gv Ew"])}})), $__69 = Object.freeze(Object.defineProperties(["0FBE:Gv Eb;Gv Ew"], {raw: {value: Object.freeze(["0FBE:Gv Eb;Gv Ew"])}})), $__70 = Object.freeze(Object.defineProperties(["0FC8:rAX;rCX;rDX;rBX;rSP;rBP;rSI;rDI"], {raw: {value: Object.freeze(["0FC8:rAX;rCX;rDX;rBX;rSP;rBP;rSI;rDI"])}})), $__71 = Object.freeze(Object.defineProperties(["/** @file arch-x86.js This file was auto-generated */\n", "\nexports.dis = function x86dis(b, i) {\n    // HACK allows skipping prefixes.\n    var pfx = 0;\n    for(; b[i] >= 0x64 && b[i] <= 0x67 || b[i] == 0xF2 || b[i] == 0xF3; i++, pfx++)\n        console.error('[PREFIX] '+b[i].toString(16).toUpperCase());\n    if(pfx) {\n        var r = x86dis(b, i);\n        if(!r || r.length < 1)\n            return r;\n        r[0] += pfx;\n        return r;\n    }\n    ", "\n}\nexports.SP = R.ESP;\nexports.PC = R.EIP;\n"], {raw: {value: Object.freeze(["/** @file arch-x86.js This file was auto-generated */\n", "\nexports.dis = function x86dis(b, i) {\n    // HACK allows skipping prefixes.\n    var pfx = 0;\n    for(; b[i] >= 0x64 && b[i] <= 0x67 || b[i] == 0xF2 || b[i] == 0xF3; i++, pfx++)\n        console.error('[PREFIX] '+b[i].toString(16).toUpperCase());\n    if(pfx) {\n        var r = x86dis(b, i);\n        if(!r || r.length < 1)\n            return r;\n        r[0] += pfx;\n        return r;\n    }\n    ", "\n}\nexports.SP = R.ESP;\nexports.PC = R.EIP;\n"])}}));
var dis = require('./Disasm.jsc'), util = require('util');
Number.prototype.toBinary = function() {
  var n = traceur.runtime.elementGet(arguments, 0) !== (void 0) ? traceur.runtime.elementGet(arguments, 0): - 1;
  var s = this.toString(2);
  while (s.length < n) s = '0' + s;
  return s;
};
var raw = (function($__79) {
  var s = $__79.raw;
  for (var args = [], $__72 = 1; $__72 < arguments.length; $__72++) traceur.runtime.elementSet(args, $__72 - 1, traceur.runtime.elementGet(arguments, $__72));
  return s.map((function(x, i) {
    return i ? traceur.runtime.elementGet(args, i - 1) + x: x;
  })).join('');
});
var R = (function(reg) {
  var bits = traceur.runtime.elementGet(arguments, 1) !== (void 0) ? traceur.runtime.elementGet(arguments, 1): 32;
  var type = traceur.runtime.elementGet(arguments, 2) !== (void 0) ? traceur.runtime.elementGet(arguments, 2): '' + bits;
  return ({
    bitsof: bits,
    signed: false,
    inspect: (function() {
      return 'r' + inspect(reg) + '/' + bits;
    }),
    get code() {
      return 'R' + type + '[' + reg.code + ']';
    }
  });
});
dis.codeGen.runtime.push("var R = exports.R = {}, R8 = [], R16 = [], R32 = [], RS = [], RFLAGS = [];");
{
  try {
    throw undefined;
  } catch (r) {
    r = (function(name, reg) {
      var bits = traceur.runtime.elementGet(arguments, 2) !== (void 0) ? traceur.runtime.elementGet(arguments, 2): 32;
      var type = traceur.runtime.elementGet(arguments, 3) !== (void 0) ? traceur.runtime.elementGet(arguments, 3): '' + bits;
      traceur.runtime.elementSet(R, name, R(reg, bits, type));
      dis.codeGen.runtime.push(("R." + name + " = R" + type + "[" + reg + "] = {bitsof: " + bits + ", signed: false, inspect: function() {return '" + name + "';}};"));
    });
    'ACDB'.split('').forEach((function(x, i) {
      r(x + 'L', i, 8);
      r(x + 'H', i + 4, 8);
      r(x + 'X', i, 16);
      r('E' + x + 'X', i, 32);
    }));
    'ECSDFSG'.split('').forEach((function(x, i) {
      r(x + 'S', i, 16, 'S');
    }));
    'SP BP SI DI IP'.split(' ').forEach((function(x, i) {
      r(x, i + 4, 16);
      r('E' + x, i + 4, 32);
    }));
    r('EFLAGS', 0, 32, 'FLAGS');
  }
}
var F = (function(f) {
  var name = traceur.runtime.elementGet(arguments, 1) !== (void 0) ? traceur.runtime.elementGet(arguments, 1): 'f' + util.inspect(f);
  return ({
    bitsof: 1,
    signed: false,
    inspect: (function() {
      return name;
    }),
    get code() {
      return 'F[' + f.code + ']';
    }
  });
});
dis.codeGen.runtime.push("var F = [];");
'OCZSPVDI'.split('').forEach((function(x, i) {
  traceur.runtime.elementSet(F, x, F(i, x + 'F'));
  dis.codeGen.runtime.push(("R." + x + "F = F[" + i + "] = {bitsof: 1, signed: false, inspect: function() {return '" + x + "F';}};"));
}));
var Cond = {
  O: (function() {
    return F.O;
  }),
  NO: (function() {
    return Not(F.O);
  }),
  B: (function() {
    return F.C;
  }),
  AE: (function() {
    return Not(F.C);
  }),
  Z: (function() {
    return F.Z;
  }),
  NZ: (function() {
    return Not(F.Z);
  }),
  BE: (function() {
    return Or(F.C, F.Z);
  }),
  A: (function() {
    return And(Not(F.C), Not(F.Z));
  }),
  S: (function() {
    return F.S;
  }),
  NS: (function() {
    return Not(F.S);
  }),
  P: (function() {
    return F.P;
  }),
  NP: (function() {
    return Not(F.P);
  }),
  L: (function() {
    return Not(Eq(F.O, F.S));
  }),
  GE: (function() {
    return Eq(F.O, F.S);
  }),
  LE: (function() {
    return Or(F.Z, Not(Eq(F.O, F.S)));
  }),
  G: (function() {
    return And(Not(F.Z), Eq(F.O, F.S));
  })
};
function _op(def, b, fn) {
  b = b.map((function(x) {
    return x.toBinary(8);
  }));
  var args = [], hasModRM, ModRM, immIdx, byteLen, imm = [], ctReg = false, reg = 'Reg';
  def = def.replace(/^reg=(\d+):/i, (function(s, x) {
    return ((ctReg = true, reg = (+ x).toBinary(3)), '');
  }));
  var getBits = (function(s) {
    if (s == 'b') return 8;
    if (s == 'c' || s == 'w') return 16;
    if (s == 'd' || s == 'v' || s == 'z') return 32;
    throw new TypeError('Unimplemented operand size ' + s);
  });
  def = def.trim();
  def && def.split(' ').forEach((function(x, i) {
    if (/^[RE]?([ABCD]X|[SBI]P|[SD]I)|[ABCD][HL]|[ECSDFSG]S$/.test(x)) traceur.runtime.elementSet(args, i, (function() {
      return traceur.runtime.elementGet(R, x);
    })); else if (/^[re]([ABCD]X|[SBI]P|[SD]I)$/.test(x)) traceur.runtime.elementSet(args, i, (function() {
      return traceur.runtime.elementGet(R, 'E' + x.slice(1));
    })); else if (x == 'J') traceur.runtime.elementSet(args, i, (function() {
      return Add(R.EIP, byteLen);
    })); else if (x == 'M') hasModRM = 2, traceur.runtime.elementSet(args, i, (function() {
      for (var args = [], $__73 = 0; $__73 < arguments.length; $__73++) traceur.runtime.elementSet(args, $__73, traceur.runtime.elementGet(arguments, $__73));
      return ModRM.apply(null, $__spread([4], args.slice(ctReg ? 0: 1)));
    })); else {
      try {
        throw undefined;
      } catch (bits) {
        try {
          throw undefined;
        } catch (kind) {
          if (!/^[A-Z][a-z]$/.test(x)) throw new TypeError('Unimplemented operand specifier ' + x);
          {
            kind = traceur.runtime.elementGet(x, 0);
            bits = getBits(traceur.runtime.elementGet(x, 1));
          }
          if (kind == 'E') hasModRM = 1, traceur.runtime.elementSet(args, i, (function() {
            for (var args = [], $__74 = 0; $__74 < arguments.length; $__74++) traceur.runtime.elementSet(args, $__74, traceur.runtime.elementGet(arguments, $__74));
            return ModRM.apply(null, $__spread([bits], args.slice(ctReg ? 0: 1)));
          })); else if (kind == 'G') hasModRM = 1, traceur.runtime.elementSet(args, i, (function(reg) {
            return R(reg, bits);
          })); else if (kind == 'S') hasModRM = 1, traceur.runtime.elementSet(args, i, (function(reg) {
            return R(reg, bits, 'S');
          })); else if (kind == 'F') traceur.runtime.elementSet(args, i, (function() {
            return R(0, bits, 'FLAGS');
          })); else if (kind == 'X') traceur.runtime.elementSet(args, i, (function() {
            return IntSize(Mem(R.ESI), bits);
          })); else if (kind == 'Y') traceur.runtime.elementSet(args, i, (function() {
            return IntSize(Mem(R.EDI), bits);
          })); else if (kind == 'I') {
            try {
              throw undefined;
            } catch (j) {
              j = imm.push(traceur.runtime.elementGet(['Imm_____', 'Imm_____________', null, 'Imm_____________________________'], bits / 8 - 1)) - 1;
              traceur.runtime.elementSet(args, i, (function() {
                return signed(traceur.runtime.elementGet(arguments, immIdx + j));
              }));
            }
          } else if (kind == 'J') {
            try {
              throw undefined;
            } catch (j) {
              j = imm.push(traceur.runtime.elementGet(['Imm_____', 'Imm_____________', null, 'Imm_____________________________'], bits / 8 - 1)) - 1;
              traceur.runtime.elementSet(args, i, (function() {
                return Add(R.EIP, Add(signed(traceur.runtime.elementGet(arguments, immIdx + j)), byteLen));
              }));
            }
          } else if (kind == 'O') {
            try {
              throw undefined;
            } catch (j) {
              j = imm.push('Offset__________________________') - 1;
              traceur.runtime.elementSet(args, i, (function() {
                return IntSize(Mem(traceur.runtime.elementGet(arguments, immIdx + j)), bits);
              }));
            }
          } else throw new TypeError('Unimplemented operand kind ' + kind);
        }
      }
    }
  }));
  var op = (function() {
    var mid = traceur.runtime.elementGet(arguments, 0) !== (void 0) ? traceur.runtime.elementGet(arguments, 0): [];
    var n = traceur.runtime.elementGet(arguments, 1) !== (void 0) ? traceur.runtime.elementGet(arguments, 1): 0;
    var modRM = traceur.runtime.elementGet(arguments, 2) !== (void 0) ? traceur.runtime.elementGet(arguments, 2): null;
    immIdx = n + (!ctReg && hasModRM ? 1: 0);
    var bytes = b.concat(mid).concat(imm);
    byteLen = bytes.join('').length / 8;
    ModRM = modRM;
    return dis.op(bytes, (function() {
      for (var a = [], $__74 = 0; $__74 < arguments.length; $__74++) traceur.runtime.elementSet(a, $__74, traceur.runtime.elementGet(arguments, $__74));
      var res = fn.apply(null, $__toObject(args.map((function(x) {
        return x.apply(null, $__toObject(a));
      }))));
      return Array.isArray(res) ? res: [res];
    }));
  });
  if (!hasModRM) op(); else {
    if (hasModRM != 3) {
      try {
        throw undefined;
      } catch (applySIB) {
        applySIB = (function(mod) {
          var extra = traceur.runtime.elementGet(arguments, 1) !== (void 0) ? traceur.runtime.elementGet(arguments, 1): [];
          var n = traceur.runtime.elementGet(arguments, 2) !== (void 0) ? traceur.runtime.elementGet(arguments, 2): 0;
          var fn = traceur.runtime.elementGet(arguments, 3) !== (void 0) ? traceur.runtime.elementGet(arguments, 3): (function(x) {
            return x;
          });
          op($__spread([mod + reg + 'Rm_'], extra), 1 + n, (function(bits, RM) {
            for (var rest = [], $__74 = 2; $__74 < arguments.length; $__74++) traceur.runtime.elementSet(rest, $__74 - 2, traceur.runtime.elementGet(arguments, $__74));
            return IntSize(Mem(fn.apply(null, $__spread([R(RM)], rest))), bits);
          }));
          op($__spread([mod + reg + '100', 'SiIdxBas'], extra), 3 + n, (function(bits, scale, idx, base) {
            for (var rest = [], $__73 = 4; $__73 < arguments.length; $__73++) traceur.runtime.elementSet(rest, $__73 - 4, traceur.runtime.elementGet(arguments, $__73));
            return IntSize(Mem(fn.apply(null, $__spread([Add(R(base), LSL(R(idx), scale))], rest))), bits);
          }));
          op($__spread([mod + reg + '100', 'Si100Bas'], extra), 2 + n, (function(bits, scale, base) {
            for (var rest = [], $__75 = 3; $__75 < arguments.length; $__75++) traceur.runtime.elementSet(rest, $__75 - 3, traceur.runtime.elementGet(arguments, $__75));
            return IntSize(Mem(fn.apply(null, $__spread([R(base)], rest))), bits);
          }));
          var newFn = (function() {
            for (var x = [], $__76 = 0; $__76 < arguments.length; $__76++) traceur.runtime.elementSet(x, $__76, traceur.runtime.elementGet(arguments, $__76));
            return Add(R.EBP, signed(fn.apply(null, $__toObject(x))));
          });
          if (mod == '00') {
            extra = ['Disp____________________________'];
            n = 1;
            newFn = (function(x, disp32) {
              return Add(x, signed(disp32));
            });
          }
          op($__spread([mod + reg + '100', 'SiIdx101'], extra), 2 + n, (function(bits, scale, idx) {
            for (var rest = [], $__77 = 3; $__77 < arguments.length; $__77++) traceur.runtime.elementSet(rest, $__77 - 3, traceur.runtime.elementGet(arguments, $__77));
            return IntSize(Mem(newFn.apply(null, $__spread([LSL(R(idx), scale)], rest))), bits);
          }));
          op($__spread([mod + reg + '100', 'Si100101'], extra), 1 + n, (function(bits, scale) {
            for (var rest = [], $__78 = 2; $__78 < arguments.length; $__78++) traceur.runtime.elementSet(rest, $__78 - 2, traceur.runtime.elementGet(arguments, $__78));
            return IntSize(Mem(newFn.apply(null, $__spread([0], rest))), bits);
          }));
        });
        applySIB('00');
        applySIB('01', ['Disp____'], 1, (function(x, disp8) {
          return Add(x, signed(disp8));
        }));
        applySIB('10', ['Disp____________________________'], 1, (function(x, disp32) {
          return Add(x, signed(disp32));
        }));
        op(['00' + reg + '101', 'Disp____________________________'], 1, (function(bits, disp32) {
          return IntSize(Mem(disp32), bits);
        }));
      }
    }
    if (hasModRM != 2) op(['11' + reg + 'Rm_'], 1, (function(bits, RM) {
      return R(RM, bits);
    }));
  }
}
var opMov = (function(fn) {
  return (function(x) {
    return Mov(x, fn.apply(null, $__toObject(arguments)));
  });
});
var _ = (function(s) {
  for (var args = [], $__78 = 1; $__78 < arguments.length; $__78++) traceur.runtime.elementSet(args, $__78 - 1, traceur.runtime.elementGet(arguments, $__78));
  return (function(base) {
    var fn = traceur.runtime.elementGet(arguments, 1) !== (void 0) ? traceur.runtime.elementGet(arguments, 1): base;
    s = s.map((function(x, i) {
      return i ? traceur.runtime.elementGet(args, i - 1) + x: x;
    })).join('');
    s = s.replace(/^((?:[a-f0-9]{2})+):/i, (function(s, x) {
      return ((base = x.match(/../g).map((function(x) {
        return parseInt(x, 16);
      }))), '');
    }));
    var extra = '';
    s = s.replace(/^.*:/, (function(x) {
      return ((extra = x), '');
    }));
    if (fn === base) throw new TypeError('Missing base');
    if (!Array.isArray(base)) base = [base];
    s.split(';').forEach((function(x, i) {
      var b = base.slice();
      b.splice(- 1, 1, traceur.runtime.elementGet(b, b.length - 1) + i);
      return _op(extra + x, b, fn);
    }));
  });
});
var $__80 = [Add, (function(a, b) {
  return Or(unsigned(a), unsigned(b));
}), (function(a, b) {
  return Add(a, Add(b, IntSize(F.C, bitsof(a))));
}), (function(a, b) {
  return Sub(Sub(a, b), IntSize(F.C, bitsof(a)));
}), (function(a, b) {
  return And(unsigned(a), unsigned(b));
}), Xor, (function(x) {
  return Add(x, 1);
}), (function(x) {
  return Sub(x, 1);
}), Not].map(opMov), ADD = traceur.runtime.elementGet($__80, 0), OR = traceur.runtime.elementGet($__80, 1), ADC = traceur.runtime.elementGet($__80, 2), SBB = traceur.runtime.elementGet($__80, 3), AND = traceur.runtime.elementGet($__80, 4), XOR = traceur.runtime.elementGet($__80, 5), INC = traceur.runtime.elementGet($__80, 6), DEC = traceur.runtime.elementGet($__80, 7), NOT = traceur.runtime.elementGet($__80, 8);
var NEG = (function(x) {
  var v = traceur.runtime.elementGet(arguments, 1) !== (void 0) ? traceur.runtime.elementGet(arguments, 1): Neg(x);
  return [Mov(F.C, v.CF), Mov(x, v)];
});
var CMP = (function(a, b) {
  var v = traceur.runtime.elementGet(arguments, 2) !== (void 0) ? traceur.runtime.elementGet(arguments, 2): Sub(a, b);
  return [Mov(F.Z, v.ZF || Eq(v, 0)), Mov(F.C, v.CF || 0)];
});
var SUB = (function(a, b) {
  var v = traceur.runtime.elementGet(arguments, 2) !== (void 0) ? traceur.runtime.elementGet(arguments, 2): Sub(a, b);
  return [Mov(F.Z, v.ZF || Eq(v, 0)), Mov(F.C, v.CF || 0), Mov(a, v)];
});
var TEST = (function(a, b) {
  var v = traceur.runtime.elementGet(arguments, 2) !== (void 0) ? traceur.runtime.elementGet(arguments, 2): And(a, b);
  return [Mov(F.Z, v.ZF || Eq(v, 0)), Mov(F.C, 0), Mov(F.O, 0)];
});
var PUSH = (function(x) {
  var bits = traceur.runtime.elementGet(arguments, 1) !== (void 0) ? traceur.runtime.elementGet(arguments, 1): bitsof(x, true);
  return [Mov(R.ESP, Sub(R.ESP, bits / 8)), Mov(IntSize(Mem(R.ESP), bits), x)];
});
var POP = (function(x) {
  var bits = traceur.runtime.elementGet(arguments, 1) !== (void 0) ? traceur.runtime.elementGet(arguments, 1): bitsof(x, true);
  return [Mov(x, IntSize(Mem(R.ESP), bits)), Mov(R.ESP, Add(R.ESP, bits / 8))];
});
var INT = Interrupt;
var JMPN = (function(j) {
  return Mov(R.EIP, j);
}), CALLN = (function(EIP, j) {
  return $__spread(PUSH(EIP), [Mov(R.EIP, j)]);
});
var MOVSX = (function(a, b) {
  return Mov(a, IntSizeSigned(b, bitsof(a), true));
});
_($__0)(ADD);
_($__1)(PUSH);
_($__2)(POP);
_($__3)(OR);
_($__4)(PUSH);
_($__5)(ADC);
_($__6)(PUSH);
_($__7)(POP);
_($__8)(SBB);
_($__9)(PUSH);
_($__10)(POP);
_($__11)(AND);
_($__12)(SUB);
_($__13)(XOR);
_($__14)(CMP);
_($__15)(INC);
_($__16)(DEC);
_($__17)(PUSH);
_($__18)(POP);
_($__19)(PUSH);
_($__20)((function(x) {
  return PUSH(u32(x));
}));
Object.keys(Cond).map((function(x, i) {
  return _($__21)(0x70 + i, (function(j) {
    var $__81;
    return If(($__81 = Cond, traceur.runtime.elementGet($__81, x).call($__81)), JMPN(j));
  }));
}));
[ADD, OR, ADC, SBB, (function(a, b) {
  return AND(a, IntSizeSigned(b, bitsof(a), false));
}), SUB, XOR, CMP].map((function(fn, i) {
  return _($__22, i)(fn);
}));
_($__23)(TEST);
_($__24)(Swap);
_($__25)(Mov);
_($__26)(Mov);
_($__27)((function(a, b) {
  return Mov(a, b.a);
}));
_($__28)(Mov);
_($__29)(POP);
_($__30)(Nop);
_($__31)(Swap);
_($__32)(PUSH);
_($__33)(Mov);
_($__34)(TEST);
_($__35)(Mov);
_($__36)(Mov);
_($__37)(Mov);
_($__38)(Mov);
_($__39)((function(x) {
  return $__spread(POP(R.EIP), [Mov(R.ESP, Add(R.ESP, x))]);
}));
_($__40)((function(x) {
  return POP(R.EIP);
}));
_($__41)(Mov);
_($__42)((function() {
  return $__spread([Mov(R.ESP, R.EBP)], POP(R.EBP));
}));
_($__43)((function() {
  return INT(3);
}));
[ROL, ROR,,, LSL, LSR,, ASR].map((function(fn, i) {
  _($__44, i)(opMov(fn));
  _($__45, i)(opMov((function(x) {
    return fn(x, 1);
  })));
  _($__46, i)(opMov(fn));
}));
_($__47)(CALLN);
_($__48)(JMPN);
_($__49)(JMPN);
_($__50)(TEST);
[NOT, NEG].map((function(fn, i) {
  return _($__51, (i + 2))(fn);
}));
_($__52)((function(d, s1, s2) {
  return Mov(d, Mul(s1, s2));
}));
_($__53)((function(d, s1, s2) {
  return Mov(d, Mul(s1, s2));
}));
_($__54)((function() {
  return Mov(F.C, 0);
}));
_($__55)((function() {
  return Mov(F.C, 1);
}));
_($__56)((function() {
  return Mov(F.I, 0);
}));
_($__57)((function() {
  return Mov(F.I, 1);
}));
_($__58)((function() {
  return Mov(F.D, 0);
}));
_($__59)((function() {
  return Mov(F.D, 1);
}));
[INC, DEC].map((function(fn, i) {
  return _($__60, i)(fn);
}));
[CALLN,, JMPN].map((function(fn, i) {
  return _($__61, (i + 2))(fn);
}));
_($__62)(PUSH);
Object.keys(Cond).map((function(x, i) {
  return _($__63)([0x0F, 0x80 + i], (function(j) {
    var $__81;
    return If(($__81 = Cond, traceur.runtime.elementGet($__81, x).call($__81)), Mov(R.EIP, j));
  }));
}));
Object.keys(Cond).map((function(x, i) {
  return _($__64)([0x0F, 0x90 + i], (function(a) {
    var $__81;
    return Mov(a, ($__81 = Cond, traceur.runtime.elementGet($__81, x).call($__81)));
  }));
}));
_($__65)(Nop);
_($__66)(opMov((function(dest, src, count) {
  return Or(LSR(dest, count), And(src, LSL(Sub(u32(LSL(1, count)), 1), Sub(32, count))));
})));
_($__67)((function(a, b) {
  var sa = traceur.runtime.elementGet(arguments, 2) !== (void 0) ? traceur.runtime.elementGet(arguments, 2): signed(a);
  var sb = traceur.runtime.elementGet(arguments, 3) !== (void 0) ? traceur.runtime.elementGet(arguments, 3): signed(b);
  return Mov(sa, Mul(sa, sb));
}));
_($__68)(Mov);
_($__69)(MOVSX);
_($__70)(Nop);
dis.out(__dirname + '/arch-x86.js', (function(code) {
  return raw($__71, dis.codeGen.runtime.join('\n'), code);
}));

//@ sourceMappingURL=x86.map