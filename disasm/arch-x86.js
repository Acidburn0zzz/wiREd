/** @file arch-x86.js This file was auto-generated */


var _inspect = (typeof require !== 'undefined' ? require('util').inspect : function(x) {/*HACK*/return JSON.stringify(x, 0, 2);});

var bitsof = exports.bitsof = function bitsof(x) {
    if(typeof x === 'object' && 'bitsof' in x)
        return x.bitsof;
    throw new TypeError('Missing bit size for '+inspect(x));
}

var sizeof = exports.sizeof = function sizeof(x) {
    return Math.ceil(bitsof(x)/8);
}

var valueof = exports.valueof = function valueof(x) {
    if(x.known)
        return x;
    var v = x.value;
    if(v === null || v === void 0)
        return x;
    return v;
}

var lvalueof = exports.lvalueof = function lvalueof(x) {
    if(typeof x !== 'object' || !('lvalue' in x))
        return valueof(x);
    var v = x.lvalue;
    if(v === null || v === void 0)
        return x;
    return v;
}

var inspect = exports.inspect = function inspect(x, p) {
    if(typeof x === 'object' && x.inspect)
        return x.inspect(0, p || 16);
    return _inspect(x);
}

var Unknown = exports.Unknown = function Unknown(bits) {
    // HACK int[bits] - signed because it can promote to unsigned if required.
    if(typeof bits === 'number') {
        this.bitsof = bits;
        this.signed = true;
        this.type = int[bits];
        this.isInteger = true;
    }
}
Unknown.prototype = {
    constructor: Unknown, known: false,
    not: function not() {
        return new Not(this);
    },
    neg: function neg() {
        return new Neg(this);
    },
    mov: function mov(that) {
        if(this.isInteger >= that.isInteger && that.bitsof > this.bitsof || that.bitsof === this.bitsof && that.signed < this.signed) { // that.type > this.type
            if(!that.isInteger || that.known)
                return (new that.type(this)).mov(that);
            return that.mov(this);
        }
        return new Mov(this, that);
    },
    add: function add(that) {
        if(this.isInteger >= that.isInteger && that.bitsof > this.bitsof || that.bitsof === this.bitsof && that.signed < this.signed) { // that.type > this.type
            if(!that.isInteger || that.known)
                return (new that.type(this)).add(that);
            return that.add(this);
        }
        return new Add(this, that);
    },
    mul: function mul(that) {
        if(this.isInteger >= that.isInteger && that.bitsof > this.bitsof || that.bitsof === this.bitsof && that.signed < this.signed) { // that.type > this.type
            if(!that.isInteger || that.known)
                return (new that.type(this)).mul(that);
            return that.mul(this);
        }
        return new Mul(this, that);
    },
    div: function div(that) {
        if(this.isInteger >= that.isInteger && that.bitsof > this.bitsof || that.bitsof === this.bitsof && that.signed < this.signed) { // that.type > this.type
            if(!that.isInteger || that.known)
                return (new that.type(this)).div(that);
            return that.div(this);
        }
        return new Div(this, that);
    },
    and: function and(that) {
        if(this.isInteger >= that.isInteger && that.bitsof > this.bitsof || that.bitsof === this.bitsof && that.signed < this.signed) { // that.type > this.type
            if(!that.isInteger || that.known)
                return (new that.type(this)).and(that);
            return that.and(this);
        }
        return new And(this, that);
    },
    or: function or(that) {
        if(this.isInteger >= that.isInteger && that.bitsof > this.bitsof || that.bitsof === this.bitsof && that.signed < this.signed) { // that.type > this.type
            if(!that.isInteger || that.known)
                return (new that.type(this)).or(that);
            return that.or(this);
        }
        return new Or(this, that);
    },
    xor: function xor(that) {
        if(this.isInteger >= that.isInteger && that.bitsof > this.bitsof || that.bitsof === this.bitsof && that.signed < this.signed) { // that.type > this.type
            if(!that.isInteger || that.known)
                return (new that.type(this)).xor(that);
            return that.xor(this);
        }
        return new Xor(this, that);
    },
    eq: function eq(that) {
        if(this.isInteger >= that.isInteger && that.bitsof > this.bitsof || that.bitsof === this.bitsof && that.signed < this.signed) { // that.type > this.type
            if(!that.isInteger || that.known)
                return (new that.type(this)).eq(that);
            return that.eq(this);
        }
        return new Eq(this, that);
    },
    lt: function lt(that) {
        if(this.isInteger >= that.isInteger && that.bitsof > this.bitsof || that.bitsof === this.bitsof && that.signed < this.signed) { // that.type > this.type
            if(!that.isInteger || that.known)
                return (new that.type(this)).lt(that);
            return /*HACK < is the only non-commutative operator */ that.lt(this).not().and(that.eq(this).not());
        }
        return new Lt(this, that);
    },
    shl: function shl(that) {
        return new Shl(this, that);
    },
    shr: function shr(that) {
        return new Shr(this, that);
    },
    sub: function sub(that) {
        if(that.isInteger && (!that.signed || that.bitsof < this.bitsof)) // HACK cleaner output
            that = int[this.bitsof](that);
        return this.add(that.neg());
    },
    rol: function rol(that) {
        return this.shl(that).or(this.shr(u8(this.bitsof).sub(that)));
    },
    ror: function ror(that) {
        return this.shr(that).or(this.shl(u8(this.bitsof).sub(that)));
    }
};
var Not = exports.Not = function Not(a) { // assumes !a.known.
    if(a.op === '~') return a.a;
    this.a = a;
    this.type = a.type;
    this.bitsof = a.bitsof;
    this.signed = a.signed;
    this.isInteger = a.isInteger;
}
Not.prototype = new Unknown;
Not.prototype.constructor = Not;
Not.prototype.fn = 'Not'; // TODO obsolete?
Not.prototype.op = '~';
Object.defineProperty(Not.prototype, 'value', {get: function() {
    var a = valueof(this.a);
    if(a !== this.a)
        return a.not();
}});
Not.prototype.inspect = function(_, p) {
    if(this.bitsof === 1) {
        if(this.a.op === '==') {
            var expr = inspect(this.a.a, 7)+' !== '+inspect(this.a.b, 7);
            return 7 <= p ? expr : '('+expr+')'
        }
        if(this.a.op === '<') {
            var expr = inspect(this.a.a, 6)+' >= '+inspect(this.a.b, 6);
            return 6 <= p ? expr : '('+expr+')'
        }
    }
    var expr = '~'+inspect(this.a, 2);
    return 2 <= p ? expr : '('+expr+')';
};
var Neg = exports.Neg = function Neg(a) { // assumes !a.known.
    if(a.op === '-') return a.a;
    this.a = a;
    this.type = a.type;
    this.bitsof = a.bitsof;
    this.signed = a.signed;
    this.isInteger = a.isInteger;
}
Neg.prototype = new Unknown;
Neg.prototype.constructor = Neg;
Neg.prototype.fn = 'Neg'; // TODO obsolete?
Neg.prototype.op = '-';
Object.defineProperty(Neg.prototype, 'value', {get: function() {
    var a = valueof(this.a);
    if(a !== this.a)
        return a.neg();
}});
Neg.prototype.inspect = function(_, p) {
    var expr = '-'+inspect(this.a, 4);
    return 4 <= p ? expr : '('+expr+')';
};
var Mov = exports.Mov = function Mov(a, b) { /* assumes a.type >= b.type and !a.known. */
    if(!(this instanceof Mov)) return new Mov(a, b);
    this.a = a;
    this.b = b;
}
Mov.prototype = new Unknown;
Mov.prototype.constructor = Mov;
Mov.prototype.fn = 'Mov'; // TODO obsolete?
Mov.prototype.op = '=';
Object.defineProperty(Mov.prototype, 'value', {get: function() {
    var a = lvalueof(this.a), b = valueof(this.b);
    if(a !== this.a || b !== this.b)
        return new Mov(a, b);
}});
Mov.prototype.inspect = function(_, p) {
    var a = this.a, b = this.b;
    var op = '=';
    if(b.op && b.op !== '=' && b.op !== '<->' && b.op !== '==' && b.op !== '<' && b.op !== '-' && b.op !== '~' && (b.a === a || b.a.lvalue === a)) { // HACK the lvalue check might be costy.
        if(b.isInteger && b.op === '+' && b.b.bitsof <= 32 && b.b._A < 0 && b.b._A !== -1 << (b.b.bitsof-1)) { // HACK doesn't work > 32bits.
            op = '-=';
            b = b.b.neg();
        } else {
            op = b.op+'=';
            b = b.b;
        }
    }
    var expr = inspect(a, 13)+' '+op+' '+inspect(b, 13);
    return 13 <= p ? expr : '('+expr+')';
};
var Add = exports.Add = function Add(a, b) { /* assumes a.type >= b.type and !a.known. */
    if(b.isInteger && b.bitsof <= 32 && b._A === 0) /* HACK doesn't work > 32bits. */ return a;
    if(a.op === '+' && a.b.known && b.known) return a.a.add(a.b.add(b));
    if(a.op === '-' && a.a === b || b.op === '-' && b.a === a) return new a.type(0);
    this.a = a;
    this.b = b;
    this.type = a.type;
    this.bitsof = a.bitsof;
    this.signed = a.signed;
    this.isInteger = a.isInteger;
}
Add.prototype = new Unknown;
Add.prototype.constructor = Add;
Add.prototype.fn = 'Add'; // TODO obsolete?
Add.prototype.op = '+';
Object.defineProperty(Add.prototype, 'value', {get: function() {
    var a = valueof(this.a), b = valueof(this.b);
    if(a !== this.a || b !== this.b)
        return a.add(b);
}});
Add.prototype.inspect = function(_, p) {
    var a = this.a, b = this.b;
    var op = '+';
    if(b.isInteger && b.bitsof <= 32 && b._A < 0 && b._A !== -1 << (b.bitsof-1)) { // HACK doesn't work > 32bits.
        op = '-';
        b = b.neg();
    } else if(b.op === '-') {
        op = '-';
        b = b.a;
    }
    var expr = inspect(a, 4)+' '+op+' '+inspect(b, 4);
    return 4 <= p ? expr : '('+expr+')';
};
var Mul = exports.Mul = function Mul(a, b) { /* assumes a.type >= b.type and !a.known. */
    this.a = a;
    this.b = b;
    this.type = a.type;
    this.bitsof = a.bitsof;
    this.signed = a.signed;
    this.isInteger = a.isInteger;
}
Mul.prototype = new Unknown;
Mul.prototype.constructor = Mul;
Mul.prototype.fn = 'Mul'; // TODO obsolete?
Mul.prototype.op = '*';
Object.defineProperty(Mul.prototype, 'value', {get: function() {
    var a = valueof(this.a), b = valueof(this.b);
    if(a !== this.a || b !== this.b)
        return a.mul(b);
}});
Mul.prototype.inspect = function(_, p) {
    var a = this.a, b = this.b;
    var expr = inspect(a, 3)+' * '+inspect(b, 3);
    return 3 <= p ? expr : '('+expr+')';
};
var Div = exports.Div = function Div(a, b) { /* assumes a.type >= b.type and !a.known. */
    this.a = a;
    this.b = b;
    this.type = a.type;
    this.bitsof = a.bitsof;
    this.signed = a.signed;
    this.isInteger = a.isInteger;
}
Div.prototype = new Unknown;
Div.prototype.constructor = Div;
Div.prototype.fn = 'Div'; // TODO obsolete?
Div.prototype.op = '/';
Object.defineProperty(Div.prototype, 'value', {get: function() {
    var a = valueof(this.a), b = valueof(this.b);
    if(a !== this.a || b !== this.b)
        return a.div(b);
}});
Div.prototype.inspect = function(_, p) {
    var a = this.a, b = this.b;
    var expr = inspect(a, 3)+' / '+inspect(b, 3);
    return 3 <= p ? expr : '('+expr+')';
};
var And = exports.And = function And(a, b) { /* assumes a.type >= b.type and !a.known. */
    if(b.isInteger && b.bitsof <= 32 && b._A === 0) /* HACK doesn't work > 32bits. */ return new a.type(0);
    if(a === b) return a;
    if(b.isInteger && b.known && b.bitsof <= 32 && b._A === (b.signed ? -1 : (-1 >>> (32-b.bitsof)))) /* HACK doesn't work > 32bits. */ return a;
    if(a.op === '&' && a.b.known && b.known) return a.a.and(a.b.and(b));
    this.a = a;
    this.b = b;
    this.type = a.type;
    this.bitsof = a.bitsof;
    this.signed = a.signed;
    this.isInteger = a.isInteger;
}
And.prototype = new Unknown;
And.prototype.constructor = And;
And.prototype.fn = 'And'; // TODO obsolete?
And.prototype.op = '&';
Object.defineProperty(And.prototype, 'value', {get: function() {
    var a = valueof(this.a), b = valueof(this.b);
    if(a !== this.a || b !== this.b)
        return a.and(b);
}});
And.prototype.inspect = function(_, p) {
    var a = this.a, b = this.b;
    var expr = inspect(a, 8)+' & '+inspect(b, 8);
    return 8 <= p ? expr : '('+expr+')';
};
var Or = exports.Or = function Or(a, b) { /* assumes a.type >= b.type and !a.known. */
    if(b.isInteger && b.bitsof <= 32 && b._A === 0) /* HACK doesn't work > 32bits. */ return a;
    if(a === b) return a;
    if(b.isInteger && b.known && b.bitsof <= 32 && b._A === (b.signed ? -1 : (-1 >>> (32-b.bitsof)))) /* HACK doesn't work > 32bits. */ return b;
    if(a.op === '|' && a.b.known && b.known) return a.a.or(a.b.or(b));
    this.a = a;
    this.b = b;
    this.type = a.type;
    this.bitsof = a.bitsof;
    this.signed = a.signed;
    this.isInteger = a.isInteger;
}
Or.prototype = new Unknown;
Or.prototype.constructor = Or;
Or.prototype.fn = 'Or'; // TODO obsolete?
Or.prototype.op = '|';
Object.defineProperty(Or.prototype, 'value', {get: function() {
    var a = valueof(this.a), b = valueof(this.b);
    if(a !== this.a || b !== this.b)
        return a.or(b);
}});
Or.prototype.inspect = function(_, p) {
    var a = this.a, b = this.b;
    var expr = inspect(a, 10)+' | '+inspect(b, 10);
    return 10 <= p ? expr : '('+expr+')';
};
var Xor = exports.Xor = function Xor(a, b) { /* assumes a.type >= b.type and !a.known. */
    if(b.isInteger && b.bitsof <= 32 && b._A === 0) /* HACK doesn't work > 32bits. */ return a;
    if(a === b) return new a.type(0);
    if(a.op === '^' && a.b.known && b.known) return a.a.xor(a.b.xor(b));
    this.a = a;
    this.b = b;
    this.type = a.type;
    this.bitsof = a.bitsof;
    this.signed = a.signed;
    this.isInteger = a.isInteger;
}
Xor.prototype = new Unknown;
Xor.prototype.constructor = Xor;
Xor.prototype.fn = 'Xor'; // TODO obsolete?
Xor.prototype.op = '^';
Object.defineProperty(Xor.prototype, 'value', {get: function() {
    var a = valueof(this.a), b = valueof(this.b);
    if(a !== this.a || b !== this.b)
        return a.xor(b);
}});
Xor.prototype.inspect = function(_, p) {
    var a = this.a, b = this.b;
    var expr = inspect(a, 9)+' ^ '+inspect(b, 9);
    return 9 <= p ? expr : '('+expr+')';
};
var Eq = exports.Eq = function Eq(a, b) { /* assumes a.type >= b.type and !a.known. */
    this.a = a;
    this.b = b;
    this.type = u1;
    this.bitsof = 1;
    this.signed = false;
    this.isInteger = true;
}
Eq.prototype = new Unknown;
Eq.prototype.constructor = Eq;
Eq.prototype.fn = 'Eq'; // TODO obsolete?
Eq.prototype.op = '==';
Object.defineProperty(Eq.prototype, 'value', {get: function() {
    var a = valueof(this.a), b = valueof(this.b);
    if(a !== this.a || b !== this.b)
        return a.eq(b);
}});
Eq.prototype.inspect = function(_, p) {
    var a = this.a, b = this.b;
    var expr = inspect(a, 7)+' == '+inspect(b, 7);
    return 7 <= p ? expr : '('+expr+')';
};
var Lt = exports.Lt = function Lt(a, b) { /* assumes a.type >= b.type and !a.known. */
    this.a = a;
    this.b = b;
    this.type = u1;
    this.bitsof = 1;
    this.signed = false;
    this.isInteger = true;
}
Lt.prototype = new Unknown;
Lt.prototype.constructor = Lt;
Lt.prototype.fn = 'Lt'; // TODO obsolete?
Lt.prototype.op = '<';
Object.defineProperty(Lt.prototype, 'value', {get: function() {
    var a = valueof(this.a), b = valueof(this.b);
    if(a !== this.a || b !== this.b)
        return a.lt(b);
}});
Lt.prototype.inspect = function(_, p) {
    var a = this.a, b = this.b;
    var expr = inspect(a, 6)+' < '+inspect(b, 6);
    return 6 <= p ? expr : '('+expr+')';
};
var Shl = exports.Shl = function Shl(a, b) { /* assumes a.type >= b.type and !a.known. */
    if(b.isInteger && b.bitsof <= 32 && b._A === 0) /* HACK doesn't work > 32bits. */ return a;
    this.a = a;
    this.b = b;
    this.type = a.type;
    this.bitsof = a.bitsof;
    this.signed = a.signed;
    this.isInteger = a.isInteger;
}
Shl.prototype = new Unknown;
Shl.prototype.constructor = Shl;
Shl.prototype.fn = 'Shl'; // TODO obsolete?
Shl.prototype.op = '<<';
Object.defineProperty(Shl.prototype, 'value', {get: function() {
    var a = valueof(this.a), b = valueof(this.b);
    if(a !== this.a || b !== this.b)
        return a.shl(b);
}});
Shl.prototype.inspect = function(_, p) {
    var a = this.a, b = this.b;
    var expr = inspect(a, 5)+' << '+inspect(b, 5);
    return 5 <= p ? expr : '('+expr+')';
};
var Shr = exports.Shr = function Shr(a, b) { /* assumes a.type >= b.type and !a.known. */
    if(b.isInteger && b.bitsof <= 32 && b._A === 0) /* HACK doesn't work > 32bits. */ return a;
    this.a = a;
    this.b = b;
    this.type = a.type;
    this.bitsof = a.bitsof;
    this.signed = a.signed;
    this.isInteger = a.isInteger;
}
Shr.prototype = new Unknown;
Shr.prototype.constructor = Shr;
Shr.prototype.fn = 'Shr'; // TODO obsolete?
Shr.prototype.op = '>>';
Object.defineProperty(Shr.prototype, 'value', {get: function() {
    var a = valueof(this.a), b = valueof(this.b);
    if(a !== this.a || b !== this.b)
        return a.shr(b);
}});
Shr.prototype.inspect = function(_, p) {
    var a = this.a, b = this.b;
    var expr = inspect(a, 5)+' >> '+inspect(b, 5);
    return 5 <= p ? expr : '('+expr+')';
};
var Integer = exports.Integer = function Integer() {}
Integer.prototype = {
    constructor: Integer, known: true, isInteger: true,
    get value() {
        if(!this.known) {
            var v = valueof(this._A);
            if(v !== this._A)
                return new this.type(v);
        }
    },
    get lvalue() {
        if(!this.known)
            return this._A.lvalue;
    },
    sub: function sub(that) {
        if(that.isInteger && (!that.signed || that.bitsof < this.bitsof)) // HACK cleaner output
            that = int[this.bitsof](that);
        return this.add(that.neg());
    }
};

var uint = exports.uint = [], int = exports.int = [];
var signed = exports.signed = function(x) {
    return new int[x.bitsof](x);
};
var unsigned = exports.unsigned = function(x) {
    return new uint[x.bitsof](x);
};

var u1 = uint[1] = exports.u1 = function u1(a) {
    if(a.type === u1) // HACK This should only fix Unknown operations.
        return a;
    if(!(this instanceof u1))
        return new u1(a);
    if(typeof a === 'number')
        this._A = a & 0x1;
    else if(a.isInteger && a.known)
        this._A = a._A & 0x1;
    else {
        this._A = a instanceof i1 || a instanceof u1 ? a._A : a;
        this.known = false;
    }
}
u1.prototype = new Integer;
u1.prototype.constructor = u1;
u1.prototype.type = u1;
u1.prototype._A = 0;
u1.prototype.bitsof = 1;
u1.prototype.signed = false;
u1.prototype.inspect = function(_, p) {
    if(this.known)
        return (this._A >= 48 ? '0x'+this._A.toString(16) : this._A)+(/*process.env.DEBUG_INT*/false ? 'ub' : '');
    return (/*process.env.DEBUG_INT*/false || (this._A instanceof Integer || this._A instanceof Unknown) && this._A.type !== u1) ? 'u1('+inspect(this._A)+')' : inspect(this._A, p);
};
u1.prototype.not = function not() {
    if(!this.known) // Unknown#not
        return new Not(this);
    return new u1(~this._A);
};
u1.prototype.neg = function neg() {
    if(!this.known) // Unknown#neg
        return new Neg(this);
    return new u1(-this._A);
};
u1.prototype.mov = function mov(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 1) { // that.type > this.type
        if(!this.known && that.known) // Unknown#mov
            return (new that.type(this)).mov(that);
        return that.mov(this);
    }
    if(!this.known) // Unknown#mov
        return new Mov(this, that);
    if(!that.known)
        return that.mov(this);
    return new u1(this._A = (that._A & 0x1));
};
u1.prototype.add = function add(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 1) { // that.type > this.type
        if(!this.known && that.known) // Unknown#add
            return (new that.type(this)).add(that);
        return that.add(this);
    }
    if(!this.known) // Unknown#add
        return new Add(this, that);
    if(!that.known)
        return that.add(this);
    return new u1(this._A + (that._A & 0x1));
};
u1.prototype.mul = function mul(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 1) { // that.type > this.type
        if(!this.known && that.known) // Unknown#mul
            return (new that.type(this)).mul(that);
        return that.mul(this);
    }
    if(!this.known) // Unknown#mul
        return new Mul(this, that);
    if(!that.known)
        return that.mul(this);
    return new u1(this._A * (that._A & 0x1));
};
u1.prototype.div = function div(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 1) { // that.type > this.type
        if(!this.known && that.known) // Unknown#div
            return (new that.type(this)).div(that);
        return that.div(this);
    }
    if(!this.known) // Unknown#div
        return new Div(this, that);
    if(!that.known)
        return that.div(this);
    return new u1(this._A / (that._A & 0x1));
};
u1.prototype.and = function and(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 1) { // that.type > this.type
        if(!this.known && that.known) // Unknown#and
            return (new that.type(this)).and(that);
        return that.and(this);
    }
    if(!this.known) // Unknown#and
        return new And(this, that);
    if(!that.known)
        return that.and(this);
    return new u1(this._A & (that._A & 0x1));
};
u1.prototype.or = function or(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 1) { // that.type > this.type
        if(!this.known && that.known) // Unknown#or
            return (new that.type(this)).or(that);
        return that.or(this);
    }
    if(!this.known) // Unknown#or
        return new Or(this, that);
    if(!that.known)
        return that.or(this);
    return new u1(this._A | (that._A & 0x1));
};
u1.prototype.xor = function xor(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 1) { // that.type > this.type
        if(!this.known && that.known) // Unknown#xor
            return (new that.type(this)).xor(that);
        return that.xor(this);
    }
    if(!this.known) // Unknown#xor
        return new Xor(this, that);
    if(!that.known)
        return that.xor(this);
    return new u1(this._A ^ (that._A & 0x1));
};
u1.prototype.eq = function eq(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 1) { // that.type > this.type
        if(!this.known && that.known) // Unknown#eq
            return (new that.type(this)).eq(that);
        return that.eq(this);
    }
    if(!this.known) // Unknown#eq
        return new Eq(this, that);
    if(!that.known)
        return that.eq(this);
    return new u1((this._A == (that._A & 0x1) ? 1 : 0));
};
u1.prototype.lt = function lt(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 1) { // that.type > this.type
        if(!this.known && that.known) // Unknown#lt
            return (new that.type(this)).lt(that);
        return /*HACK < is the only non-commutative operator */ that.lt(this).not().and(that.eq(this).not());
    }
    if(!this.known) // Unknown#lt
        return new Lt(this, that);
    if(!that.known)
        return /*HACK < is the only non-commutative operator */ that.lt(this).not().and(that.eq(this).not());
    return new u1((this._A < (that._A & 0x1) ? 1 : 0));
};
u1.prototype.shl = function shl(that) { // assumes that is of an integer type.
    if(!this.known || !that.isInteger || !that.known) // Unknown#shl
        return new Shl(this, that);
    return new u1(this._A << (that._A & 0x0));
};
u1.prototype.shr = function shr(that) { // assumes that is of an integer type.
    if(!this.known || !that.isInteger || !that.known) // Unknown#shr
        return new Shr(this, that);
    return new u1(this._A >>> (that._A & 0x0));
};
u1.prototype.rol = function rol(that) {
    return this.shl(that).or(this.shr(u8(1).sub(that)));
};
u1.prototype.ror = function ror(that) {
    return this.shr(that).or(this.shl(u8(1).sub(that)));
};

var i1 = int[1] = exports.i1 = function i1(a) {
    if(a.type === i1) // HACK This should only fix Unknown operations.
        return a;
    if(!(this instanceof i1))
        return new i1(a);
    if(typeof a === 'number')
        this._A = a << 31 >> 31;
    else if(a.isInteger && a.known)
        this._A = a._A << 31 >> 31;
    else {
        this._A = a instanceof u1 || a instanceof i1 ? a._A : a;
        this.known = false;
    }
}
i1.prototype = new Integer;
i1.prototype.constructor = i1;
i1.prototype.type = i1;
i1.prototype._A = 0;
i1.prototype.bitsof = 1;
i1.prototype.signed = true;
i1.prototype.inspect = function(_, p) {
    if(this.known)
        return (this._A >= 48 ? '0x'+this._A.toString(16) : this._A)+(/*process.env.DEBUG_INT*/false ? 'b' : '');
    return (/*process.env.DEBUG_INT*/false || (this._A instanceof Integer || this._A instanceof Unknown) && this._A.type !== i1) ? 'i1('+inspect(this._A)+')' : inspect(this._A, p);
};
i1.prototype.not = function not() {
    if(!this.known) // Unknown#not
        return new Not(this);
    return new i1(~this._A);
};
i1.prototype.neg = function neg() {
    if(!this.known) // Unknown#neg
        return new Neg(this);
    return new i1(-this._A);
};
i1.prototype.mov = function mov(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 1 || that.bitsof === 1 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#mov
            return (new that.type(this)).mov(that);
        return that.mov(this);
    }
    if(!this.known) // Unknown#mov
        return new Mov(this, that);
    if(!that.known)
        return that.mov(this);
    return new i1(this._A = that._A);
};
i1.prototype.add = function add(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 1 || that.bitsof === 1 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#add
            return (new that.type(this)).add(that);
        return that.add(this);
    }
    if(!this.known) // Unknown#add
        return new Add(this, that);
    if(!that.known)
        return that.add(this);
    return new i1(this._A + that._A);
};
i1.prototype.mul = function mul(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 1 || that.bitsof === 1 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#mul
            return (new that.type(this)).mul(that);
        return that.mul(this);
    }
    if(!this.known) // Unknown#mul
        return new Mul(this, that);
    if(!that.known)
        return that.mul(this);
    return new i1(this._A * that._A);
};
i1.prototype.div = function div(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 1 || that.bitsof === 1 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#div
            return (new that.type(this)).div(that);
        return that.div(this);
    }
    if(!this.known) // Unknown#div
        return new Div(this, that);
    if(!that.known)
        return that.div(this);
    return new i1(this._A / that._A);
};
i1.prototype.and = function and(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 1 || that.bitsof === 1 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#and
            return (new that.type(this)).and(that);
        return that.and(this);
    }
    if(!this.known) // Unknown#and
        return new And(this, that);
    if(!that.known)
        return that.and(this);
    return new i1(this._A & that._A);
};
i1.prototype.or = function or(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 1 || that.bitsof === 1 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#or
            return (new that.type(this)).or(that);
        return that.or(this);
    }
    if(!this.known) // Unknown#or
        return new Or(this, that);
    if(!that.known)
        return that.or(this);
    return new i1(this._A | that._A);
};
i1.prototype.xor = function xor(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 1 || that.bitsof === 1 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#xor
            return (new that.type(this)).xor(that);
        return that.xor(this);
    }
    if(!this.known) // Unknown#xor
        return new Xor(this, that);
    if(!that.known)
        return that.xor(this);
    return new i1(this._A ^ that._A);
};
i1.prototype.eq = function eq(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 1 || that.bitsof === 1 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#eq
            return (new that.type(this)).eq(that);
        return that.eq(this);
    }
    if(!this.known) // Unknown#eq
        return new Eq(this, that);
    if(!that.known)
        return that.eq(this);
    return new u1((this._A == that._A ? 1 : 0));
};
i1.prototype.lt = function lt(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 1 || that.bitsof === 1 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#lt
            return (new that.type(this)).lt(that);
        return /*HACK < is the only non-commutative operator */ that.lt(this).not().and(that.eq(this).not());
    }
    if(!this.known) // Unknown#lt
        return new Lt(this, that);
    if(!that.known)
        return /*HACK < is the only non-commutative operator */ that.lt(this).not().and(that.eq(this).not());
    return new u1((this._A < that._A ? 1 : 0));
};
i1.prototype.shl = function shl(that) { // assumes that is of an integer type.
    if(!this.known || !that.isInteger || !that.known) // Unknown#shl
        return new Shl(this, that);
    return new i1(this._A << (that._A & 0x0));
};
i1.prototype.shr = function shr(that) { // assumes that is of an integer type.
    if(!this.known || !that.isInteger || !that.known) // Unknown#shr
        return new Shr(this, that);
    return new i1(this._A >> (that._A & 0x0));
};
i1.prototype.rol = function rol(that) {
    return this.shl(that).or(this.shr(u8(1).sub(that)));
};
i1.prototype.ror = function ror(that) {
    return this.shr(that).or(this.shl(u8(1).sub(that)));
};

var u8 = uint[8] = exports.u8 = function u8(a) {
    if(a.type === u8) // HACK This should only fix Unknown operations.
        return a;
    if(!(this instanceof u8))
        return new u8(a);
    if(typeof a === 'number')
        this._A = a & 0xff;
    else if(a.isInteger && a.known)
        this._A = a._A & 0xff;
    else {
        this._A = a instanceof i8 || a instanceof u8 ? a._A : a;
        this.known = false;
    }
}
u8.prototype = new Integer;
u8.prototype.constructor = u8;
u8.prototype.type = u8;
u8.prototype._A = 0;
u8.prototype.bitsof = 8;
u8.prototype.signed = false;
u8.prototype.inspect = function(_, p) {
    if(this.known)
        return (this._A >= 48 ? '0x'+this._A.toString(16) : this._A)+(/*process.env.DEBUG_INT*/false ? 'uc' : '');
    return (/*process.env.DEBUG_INT*/false || (this._A instanceof Integer || this._A instanceof Unknown) && this._A.type !== u8) ? 'u8('+inspect(this._A)+')' : inspect(this._A, p);
};
u8.prototype.not = function not() {
    if(!this.known) // Unknown#not
        return new Not(this);
    return new u8(~this._A);
};
u8.prototype.neg = function neg() {
    if(!this.known) // Unknown#neg
        return new Neg(this);
    return new u8(-this._A);
};
u8.prototype.mov = function mov(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 8) { // that.type > this.type
        if(!this.known && that.known) // Unknown#mov
            return (new that.type(this)).mov(that);
        return that.mov(this);
    }
    if(!this.known) // Unknown#mov
        return new Mov(this, that);
    if(!that.known)
        return that.mov(this);
    return new u8(this._A = (that._A & 0xff));
};
u8.prototype.add = function add(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 8) { // that.type > this.type
        if(!this.known && that.known) // Unknown#add
            return (new that.type(this)).add(that);
        return that.add(this);
    }
    if(!this.known) // Unknown#add
        return new Add(this, that);
    if(!that.known)
        return that.add(this);
    return new u8(this._A + (that._A & 0xff));
};
u8.prototype.mul = function mul(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 8) { // that.type > this.type
        if(!this.known && that.known) // Unknown#mul
            return (new that.type(this)).mul(that);
        return that.mul(this);
    }
    if(!this.known) // Unknown#mul
        return new Mul(this, that);
    if(!that.known)
        return that.mul(this);
    return new u8(this._A * (that._A & 0xff));
};
u8.prototype.div = function div(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 8) { // that.type > this.type
        if(!this.known && that.known) // Unknown#div
            return (new that.type(this)).div(that);
        return that.div(this);
    }
    if(!this.known) // Unknown#div
        return new Div(this, that);
    if(!that.known)
        return that.div(this);
    return new u8(this._A / (that._A & 0xff));
};
u8.prototype.and = function and(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 8) { // that.type > this.type
        if(!this.known && that.known) // Unknown#and
            return (new that.type(this)).and(that);
        return that.and(this);
    }
    if(!this.known) // Unknown#and
        return new And(this, that);
    if(!that.known)
        return that.and(this);
    return new u8(this._A & (that._A & 0xff));
};
u8.prototype.or = function or(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 8) { // that.type > this.type
        if(!this.known && that.known) // Unknown#or
            return (new that.type(this)).or(that);
        return that.or(this);
    }
    if(!this.known) // Unknown#or
        return new Or(this, that);
    if(!that.known)
        return that.or(this);
    return new u8(this._A | (that._A & 0xff));
};
u8.prototype.xor = function xor(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 8) { // that.type > this.type
        if(!this.known && that.known) // Unknown#xor
            return (new that.type(this)).xor(that);
        return that.xor(this);
    }
    if(!this.known) // Unknown#xor
        return new Xor(this, that);
    if(!that.known)
        return that.xor(this);
    return new u8(this._A ^ (that._A & 0xff));
};
u8.prototype.eq = function eq(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 8) { // that.type > this.type
        if(!this.known && that.known) // Unknown#eq
            return (new that.type(this)).eq(that);
        return that.eq(this);
    }
    if(!this.known) // Unknown#eq
        return new Eq(this, that);
    if(!that.known)
        return that.eq(this);
    return new u1((this._A == (that._A & 0xff) ? 1 : 0));
};
u8.prototype.lt = function lt(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 8) { // that.type > this.type
        if(!this.known && that.known) // Unknown#lt
            return (new that.type(this)).lt(that);
        return /*HACK < is the only non-commutative operator */ that.lt(this).not().and(that.eq(this).not());
    }
    if(!this.known) // Unknown#lt
        return new Lt(this, that);
    if(!that.known)
        return /*HACK < is the only non-commutative operator */ that.lt(this).not().and(that.eq(this).not());
    return new u1((this._A < (that._A & 0xff) ? 1 : 0));
};
u8.prototype.shl = function shl(that) { // assumes that is of an integer type.
    if(!this.known || !that.isInteger || !that.known) // Unknown#shl
        return new Shl(this, that);
    return new u8(this._A << (that._A & 0x7));
};
u8.prototype.shr = function shr(that) { // assumes that is of an integer type.
    if(!this.known || !that.isInteger || !that.known) // Unknown#shr
        return new Shr(this, that);
    return new u8(this._A >>> (that._A & 0x7));
};
u8.prototype.rol = function rol(that) {
    return this.shl(that).or(this.shr(u8(8).sub(that)));
};
u8.prototype.ror = function ror(that) {
    return this.shr(that).or(this.shl(u8(8).sub(that)));
};

var i8 = int[8] = exports.i8 = function i8(a) {
    if(a.type === i8) // HACK This should only fix Unknown operations.
        return a;
    if(!(this instanceof i8))
        return new i8(a);
    if(typeof a === 'number')
        this._A = a << 24 >> 24;
    else if(a.isInteger && a.known)
        this._A = a._A << 24 >> 24;
    else {
        this._A = a instanceof u8 || a instanceof i8 ? a._A : a;
        this.known = false;
    }
}
i8.prototype = new Integer;
i8.prototype.constructor = i8;
i8.prototype.type = i8;
i8.prototype._A = 0;
i8.prototype.bitsof = 8;
i8.prototype.signed = true;
i8.prototype.inspect = function(_, p) {
    if(this.known)
        return (this._A >= 48 ? '0x'+this._A.toString(16) : this._A)+(/*process.env.DEBUG_INT*/false ? 'c' : '');
    return (/*process.env.DEBUG_INT*/false || (this._A instanceof Integer || this._A instanceof Unknown) && this._A.type !== i8) ? 'i8('+inspect(this._A)+')' : inspect(this._A, p);
};
i8.prototype.not = function not() {
    if(!this.known) // Unknown#not
        return new Not(this);
    return new i8(~this._A);
};
i8.prototype.neg = function neg() {
    if(!this.known) // Unknown#neg
        return new Neg(this);
    return new i8(-this._A);
};
i8.prototype.mov = function mov(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 8 || that.bitsof === 8 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#mov
            return (new that.type(this)).mov(that);
        return that.mov(this);
    }
    if(!this.known) // Unknown#mov
        return new Mov(this, that);
    if(!that.known)
        return that.mov(this);
    return new i8(this._A = that._A);
};
i8.prototype.add = function add(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 8 || that.bitsof === 8 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#add
            return (new that.type(this)).add(that);
        return that.add(this);
    }
    if(!this.known) // Unknown#add
        return new Add(this, that);
    if(!that.known)
        return that.add(this);
    return new i8(this._A + that._A);
};
i8.prototype.mul = function mul(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 8 || that.bitsof === 8 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#mul
            return (new that.type(this)).mul(that);
        return that.mul(this);
    }
    if(!this.known) // Unknown#mul
        return new Mul(this, that);
    if(!that.known)
        return that.mul(this);
    return new i8(this._A * that._A);
};
i8.prototype.div = function div(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 8 || that.bitsof === 8 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#div
            return (new that.type(this)).div(that);
        return that.div(this);
    }
    if(!this.known) // Unknown#div
        return new Div(this, that);
    if(!that.known)
        return that.div(this);
    return new i8(this._A / that._A);
};
i8.prototype.and = function and(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 8 || that.bitsof === 8 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#and
            return (new that.type(this)).and(that);
        return that.and(this);
    }
    if(!this.known) // Unknown#and
        return new And(this, that);
    if(!that.known)
        return that.and(this);
    return new i8(this._A & that._A);
};
i8.prototype.or = function or(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 8 || that.bitsof === 8 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#or
            return (new that.type(this)).or(that);
        return that.or(this);
    }
    if(!this.known) // Unknown#or
        return new Or(this, that);
    if(!that.known)
        return that.or(this);
    return new i8(this._A | that._A);
};
i8.prototype.xor = function xor(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 8 || that.bitsof === 8 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#xor
            return (new that.type(this)).xor(that);
        return that.xor(this);
    }
    if(!this.known) // Unknown#xor
        return new Xor(this, that);
    if(!that.known)
        return that.xor(this);
    return new i8(this._A ^ that._A);
};
i8.prototype.eq = function eq(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 8 || that.bitsof === 8 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#eq
            return (new that.type(this)).eq(that);
        return that.eq(this);
    }
    if(!this.known) // Unknown#eq
        return new Eq(this, that);
    if(!that.known)
        return that.eq(this);
    return new u1((this._A == that._A ? 1 : 0));
};
i8.prototype.lt = function lt(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 8 || that.bitsof === 8 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#lt
            return (new that.type(this)).lt(that);
        return /*HACK < is the only non-commutative operator */ that.lt(this).not().and(that.eq(this).not());
    }
    if(!this.known) // Unknown#lt
        return new Lt(this, that);
    if(!that.known)
        return /*HACK < is the only non-commutative operator */ that.lt(this).not().and(that.eq(this).not());
    return new u1((this._A < that._A ? 1 : 0));
};
i8.prototype.shl = function shl(that) { // assumes that is of an integer type.
    if(!this.known || !that.isInteger || !that.known) // Unknown#shl
        return new Shl(this, that);
    return new i8(this._A << (that._A & 0x7));
};
i8.prototype.shr = function shr(that) { // assumes that is of an integer type.
    if(!this.known || !that.isInteger || !that.known) // Unknown#shr
        return new Shr(this, that);
    return new i8(this._A >> (that._A & 0x7));
};
i8.prototype.rol = function rol(that) {
    return this.shl(that).or(this.shr(u8(8).sub(that)));
};
i8.prototype.ror = function ror(that) {
    return this.shr(that).or(this.shl(u8(8).sub(that)));
};

var u16 = uint[16] = exports.u16 = function u16(a) {
    if(a.type === u16) // HACK This should only fix Unknown operations.
        return a;
    if(!(this instanceof u16))
        return new u16(a);
    if(typeof a === 'number')
        this._A = a & 0xffff;
    else if(a.isInteger && a.known)
        this._A = a._A & 0xffff;
    else {
        this._A = a instanceof i16 || a instanceof u16 ? a._A : a;
        this.known = false;
    }
}
u16.prototype = new Integer;
u16.prototype.constructor = u16;
u16.prototype.type = u16;
u16.prototype._A = 0;
u16.prototype.bitsof = 16;
u16.prototype.signed = false;
u16.prototype.inspect = function(_, p) {
    if(this.known)
        return (this._A >= 48 ? '0x'+this._A.toString(16) : this._A)+(/*process.env.DEBUG_INT*/false ? 'us' : '');
    return (/*process.env.DEBUG_INT*/false || (this._A instanceof Integer || this._A instanceof Unknown) && this._A.type !== u16) ? 'u16('+inspect(this._A)+')' : inspect(this._A, p);
};
u16.prototype.not = function not() {
    if(!this.known) // Unknown#not
        return new Not(this);
    return new u16(~this._A);
};
u16.prototype.neg = function neg() {
    if(!this.known) // Unknown#neg
        return new Neg(this);
    return new u16(-this._A);
};
u16.prototype.mov = function mov(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 16) { // that.type > this.type
        if(!this.known && that.known) // Unknown#mov
            return (new that.type(this)).mov(that);
        return that.mov(this);
    }
    if(!this.known) // Unknown#mov
        return new Mov(this, that);
    if(!that.known)
        return that.mov(this);
    return new u16(this._A = (that._A & 0xffff));
};
u16.prototype.add = function add(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 16) { // that.type > this.type
        if(!this.known && that.known) // Unknown#add
            return (new that.type(this)).add(that);
        return that.add(this);
    }
    if(!this.known) // Unknown#add
        return new Add(this, that);
    if(!that.known)
        return that.add(this);
    return new u16(this._A + (that._A & 0xffff));
};
u16.prototype.mul = function mul(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 16) { // that.type > this.type
        if(!this.known && that.known) // Unknown#mul
            return (new that.type(this)).mul(that);
        return that.mul(this);
    }
    if(!this.known) // Unknown#mul
        return new Mul(this, that);
    if(!that.known)
        return that.mul(this);
    return new u16(this._A * (that._A & 0xffff));
};
u16.prototype.div = function div(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 16) { // that.type > this.type
        if(!this.known && that.known) // Unknown#div
            return (new that.type(this)).div(that);
        return that.div(this);
    }
    if(!this.known) // Unknown#div
        return new Div(this, that);
    if(!that.known)
        return that.div(this);
    return new u16(this._A / (that._A & 0xffff));
};
u16.prototype.and = function and(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 16) { // that.type > this.type
        if(!this.known && that.known) // Unknown#and
            return (new that.type(this)).and(that);
        return that.and(this);
    }
    if(!this.known) // Unknown#and
        return new And(this, that);
    if(!that.known)
        return that.and(this);
    return new u16(this._A & (that._A & 0xffff));
};
u16.prototype.or = function or(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 16) { // that.type > this.type
        if(!this.known && that.known) // Unknown#or
            return (new that.type(this)).or(that);
        return that.or(this);
    }
    if(!this.known) // Unknown#or
        return new Or(this, that);
    if(!that.known)
        return that.or(this);
    return new u16(this._A | (that._A & 0xffff));
};
u16.prototype.xor = function xor(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 16) { // that.type > this.type
        if(!this.known && that.known) // Unknown#xor
            return (new that.type(this)).xor(that);
        return that.xor(this);
    }
    if(!this.known) // Unknown#xor
        return new Xor(this, that);
    if(!that.known)
        return that.xor(this);
    return new u16(this._A ^ (that._A & 0xffff));
};
u16.prototype.eq = function eq(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 16) { // that.type > this.type
        if(!this.known && that.known) // Unknown#eq
            return (new that.type(this)).eq(that);
        return that.eq(this);
    }
    if(!this.known) // Unknown#eq
        return new Eq(this, that);
    if(!that.known)
        return that.eq(this);
    return new u1((this._A == (that._A & 0xffff) ? 1 : 0));
};
u16.prototype.lt = function lt(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 16) { // that.type > this.type
        if(!this.known && that.known) // Unknown#lt
            return (new that.type(this)).lt(that);
        return /*HACK < is the only non-commutative operator */ that.lt(this).not().and(that.eq(this).not());
    }
    if(!this.known) // Unknown#lt
        return new Lt(this, that);
    if(!that.known)
        return /*HACK < is the only non-commutative operator */ that.lt(this).not().and(that.eq(this).not());
    return new u1((this._A < (that._A & 0xffff) ? 1 : 0));
};
u16.prototype.shl = function shl(that) { // assumes that is of an integer type.
    if(!this.known || !that.isInteger || !that.known) // Unknown#shl
        return new Shl(this, that);
    return new u16(this._A << (that._A & 0xf));
};
u16.prototype.shr = function shr(that) { // assumes that is of an integer type.
    if(!this.known || !that.isInteger || !that.known) // Unknown#shr
        return new Shr(this, that);
    return new u16(this._A >>> (that._A & 0xf));
};
u16.prototype.rol = function rol(that) {
    return this.shl(that).or(this.shr(u8(16).sub(that)));
};
u16.prototype.ror = function ror(that) {
    return this.shr(that).or(this.shl(u8(16).sub(that)));
};

var i16 = int[16] = exports.i16 = function i16(a) {
    if(a.type === i16) // HACK This should only fix Unknown operations.
        return a;
    if(!(this instanceof i16))
        return new i16(a);
    if(typeof a === 'number')
        this._A = a << 16 >> 16;
    else if(a.isInteger && a.known)
        this._A = a._A << 16 >> 16;
    else {
        this._A = a instanceof u16 || a instanceof i16 ? a._A : a;
        this.known = false;
    }
}
i16.prototype = new Integer;
i16.prototype.constructor = i16;
i16.prototype.type = i16;
i16.prototype._A = 0;
i16.prototype.bitsof = 16;
i16.prototype.signed = true;
i16.prototype.inspect = function(_, p) {
    if(this.known)
        return (this._A >= 48 ? '0x'+this._A.toString(16) : this._A)+(/*process.env.DEBUG_INT*/false ? 's' : '');
    return (/*process.env.DEBUG_INT*/false || (this._A instanceof Integer || this._A instanceof Unknown) && this._A.type !== i16) ? 'i16('+inspect(this._A)+')' : inspect(this._A, p);
};
i16.prototype.not = function not() {
    if(!this.known) // Unknown#not
        return new Not(this);
    return new i16(~this._A);
};
i16.prototype.neg = function neg() {
    if(!this.known) // Unknown#neg
        return new Neg(this);
    return new i16(-this._A);
};
i16.prototype.mov = function mov(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 16 || that.bitsof === 16 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#mov
            return (new that.type(this)).mov(that);
        return that.mov(this);
    }
    if(!this.known) // Unknown#mov
        return new Mov(this, that);
    if(!that.known)
        return that.mov(this);
    return new i16(this._A = that._A);
};
i16.prototype.add = function add(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 16 || that.bitsof === 16 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#add
            return (new that.type(this)).add(that);
        return that.add(this);
    }
    if(!this.known) // Unknown#add
        return new Add(this, that);
    if(!that.known)
        return that.add(this);
    return new i16(this._A + that._A);
};
i16.prototype.mul = function mul(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 16 || that.bitsof === 16 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#mul
            return (new that.type(this)).mul(that);
        return that.mul(this);
    }
    if(!this.known) // Unknown#mul
        return new Mul(this, that);
    if(!that.known)
        return that.mul(this);
    return new i16(this._A * that._A);
};
i16.prototype.div = function div(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 16 || that.bitsof === 16 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#div
            return (new that.type(this)).div(that);
        return that.div(this);
    }
    if(!this.known) // Unknown#div
        return new Div(this, that);
    if(!that.known)
        return that.div(this);
    return new i16(this._A / that._A);
};
i16.prototype.and = function and(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 16 || that.bitsof === 16 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#and
            return (new that.type(this)).and(that);
        return that.and(this);
    }
    if(!this.known) // Unknown#and
        return new And(this, that);
    if(!that.known)
        return that.and(this);
    return new i16(this._A & that._A);
};
i16.prototype.or = function or(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 16 || that.bitsof === 16 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#or
            return (new that.type(this)).or(that);
        return that.or(this);
    }
    if(!this.known) // Unknown#or
        return new Or(this, that);
    if(!that.known)
        return that.or(this);
    return new i16(this._A | that._A);
};
i16.prototype.xor = function xor(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 16 || that.bitsof === 16 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#xor
            return (new that.type(this)).xor(that);
        return that.xor(this);
    }
    if(!this.known) // Unknown#xor
        return new Xor(this, that);
    if(!that.known)
        return that.xor(this);
    return new i16(this._A ^ that._A);
};
i16.prototype.eq = function eq(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 16 || that.bitsof === 16 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#eq
            return (new that.type(this)).eq(that);
        return that.eq(this);
    }
    if(!this.known) // Unknown#eq
        return new Eq(this, that);
    if(!that.known)
        return that.eq(this);
    return new u1((this._A == that._A ? 1 : 0));
};
i16.prototype.lt = function lt(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 16 || that.bitsof === 16 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#lt
            return (new that.type(this)).lt(that);
        return /*HACK < is the only non-commutative operator */ that.lt(this).not().and(that.eq(this).not());
    }
    if(!this.known) // Unknown#lt
        return new Lt(this, that);
    if(!that.known)
        return /*HACK < is the only non-commutative operator */ that.lt(this).not().and(that.eq(this).not());
    return new u1((this._A < that._A ? 1 : 0));
};
i16.prototype.shl = function shl(that) { // assumes that is of an integer type.
    if(!this.known || !that.isInteger || !that.known) // Unknown#shl
        return new Shl(this, that);
    return new i16(this._A << (that._A & 0xf));
};
i16.prototype.shr = function shr(that) { // assumes that is of an integer type.
    if(!this.known || !that.isInteger || !that.known) // Unknown#shr
        return new Shr(this, that);
    return new i16(this._A >> (that._A & 0xf));
};
i16.prototype.rol = function rol(that) {
    return this.shl(that).or(this.shr(u8(16).sub(that)));
};
i16.prototype.ror = function ror(that) {
    return this.shr(that).or(this.shl(u8(16).sub(that)));
};

var u32 = uint[32] = exports.u32 = function u32(a) {
    if(a.type === u32) // HACK This should only fix Unknown operations.
        return a;
    if(!(this instanceof u32))
        return new u32(a);
    if(typeof a === 'number')
        this._A = a >>> 0;
    else if(a.isInteger && a.known)
        this._A = a._A >>> 0;
    else {
        this._A = a instanceof i32 || a instanceof u32 ? a._A : a;
        this.known = false;
    }
}
u32.prototype = new Integer;
u32.prototype.constructor = u32;
u32.prototype.type = u32;
u32.prototype._A = 0;
u32.prototype.bitsof = 32;
u32.prototype.signed = false;
u32.prototype.inspect = function(_, p) {
    if(this.known)
        return (this._A >= 48 ? '0x'+this._A.toString(16) : this._A)+(/*process.env.DEBUG_INT*/false ? 'u' : '');
    return (/*process.env.DEBUG_INT*/false || (this._A instanceof Integer || this._A instanceof Unknown) && this._A.type !== u32) ? 'u32('+inspect(this._A)+')' : inspect(this._A, p);
};
u32.prototype.not = function not() {
    if(!this.known) // Unknown#not
        return new Not(this);
    return new u32(~this._A);
};
u32.prototype.neg = function neg() {
    if(!this.known) // Unknown#neg
        return new Neg(this);
    return new u32(-this._A);
};
u32.prototype.mov = function mov(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 32) { // that.type > this.type
        if(!this.known && that.known) // Unknown#mov
            return (new that.type(this)).mov(that);
        return that.mov(this);
    }
    if(!this.known) // Unknown#mov
        return new Mov(this, that);
    if(!that.known)
        return that.mov(this);
    return new u32(this._A = (that._A >>> 0));
};
u32.prototype.add = function add(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 32) { // that.type > this.type
        if(!this.known && that.known) // Unknown#add
            return (new that.type(this)).add(that);
        return that.add(this);
    }
    if(!this.known) // Unknown#add
        return new Add(this, that);
    if(!that.known)
        return that.add(this);
    return new u32(this._A + (that._A >>> 0));
};
u32.prototype.mul = function mul(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 32) { // that.type > this.type
        if(!this.known && that.known) // Unknown#mul
            return (new that.type(this)).mul(that);
        return that.mul(this);
    }
    if(!this.known) // Unknown#mul
        return new Mul(this, that);
    if(!that.known)
        return that.mul(this);
    return new u32(this._A * (that._A >>> 0));
};
u32.prototype.div = function div(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 32) { // that.type > this.type
        if(!this.known && that.known) // Unknown#div
            return (new that.type(this)).div(that);
        return that.div(this);
    }
    if(!this.known) // Unknown#div
        return new Div(this, that);
    if(!that.known)
        return that.div(this);
    return new u32(this._A / (that._A >>> 0));
};
u32.prototype.and = function and(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 32) { // that.type > this.type
        if(!this.known && that.known) // Unknown#and
            return (new that.type(this)).and(that);
        return that.and(this);
    }
    if(!this.known) // Unknown#and
        return new And(this, that);
    if(!that.known)
        return that.and(this);
    return new u32(this._A & (that._A >>> 0));
};
u32.prototype.or = function or(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 32) { // that.type > this.type
        if(!this.known && that.known) // Unknown#or
            return (new that.type(this)).or(that);
        return that.or(this);
    }
    if(!this.known) // Unknown#or
        return new Or(this, that);
    if(!that.known)
        return that.or(this);
    return new u32(this._A | (that._A >>> 0));
};
u32.prototype.xor = function xor(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 32) { // that.type > this.type
        if(!this.known && that.known) // Unknown#xor
            return (new that.type(this)).xor(that);
        return that.xor(this);
    }
    if(!this.known) // Unknown#xor
        return new Xor(this, that);
    if(!that.known)
        return that.xor(this);
    return new u32(this._A ^ (that._A >>> 0));
};
u32.prototype.eq = function eq(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 32) { // that.type > this.type
        if(!this.known && that.known) // Unknown#eq
            return (new that.type(this)).eq(that);
        return that.eq(this);
    }
    if(!this.known) // Unknown#eq
        return new Eq(this, that);
    if(!that.known)
        return that.eq(this);
    return new u1((this._A == (that._A >>> 0) ? 1 : 0));
};
u32.prototype.lt = function lt(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 32) { // that.type > this.type
        if(!this.known && that.known) // Unknown#lt
            return (new that.type(this)).lt(that);
        return /*HACK < is the only non-commutative operator */ that.lt(this).not().and(that.eq(this).not());
    }
    if(!this.known) // Unknown#lt
        return new Lt(this, that);
    if(!that.known)
        return /*HACK < is the only non-commutative operator */ that.lt(this).not().and(that.eq(this).not());
    return new u1((this._A < (that._A >>> 0) ? 1 : 0));
};
u32.prototype.shl = function shl(that) { // assumes that is of an integer type.
    if(!this.known || !that.isInteger || !that.known) // Unknown#shl
        return new Shl(this, that);
    return new u32(this._A << (that._A & 0x1f));
};
u32.prototype.shr = function shr(that) { // assumes that is of an integer type.
    if(!this.known || !that.isInteger || !that.known) // Unknown#shr
        return new Shr(this, that);
    return new u32(this._A >>> (that._A & 0x1f));
};
u32.prototype.rol = function rol(that) {
    return this.shl(that).or(this.shr(u8(32).sub(that)));
};
u32.prototype.ror = function ror(that) {
    return this.shr(that).or(this.shl(u8(32).sub(that)));
};

var i32 = int[32] = exports.i32 = function i32(a) {
    if(a.type === i32) // HACK This should only fix Unknown operations.
        return a;
    if(!(this instanceof i32))
        return new i32(a);
    if(typeof a === 'number')
        this._A = a >> 0;
    else if(a.isInteger && a.known)
        this._A = a._A >> 0;
    else {
        this._A = a instanceof u32 || a instanceof i32 ? a._A : a;
        this.known = false;
    }
}
i32.prototype = new Integer;
i32.prototype.constructor = i32;
i32.prototype.type = i32;
i32.prototype._A = 0;
i32.prototype.bitsof = 32;
i32.prototype.signed = true;
i32.prototype.inspect = function(_, p) {
    if(this.known)
        return (this._A >= 48 ? '0x'+this._A.toString(16) : this._A)+(/*process.env.DEBUG_INT*/false ? '' : '');
    return (/*process.env.DEBUG_INT*/false || (this._A instanceof Integer || this._A instanceof Unknown) && this._A.type !== i32) ? 'i32('+inspect(this._A)+')' : inspect(this._A, p);
};
i32.prototype.not = function not() {
    if(!this.known) // Unknown#not
        return new Not(this);
    return new i32(~this._A);
};
i32.prototype.neg = function neg() {
    if(!this.known) // Unknown#neg
        return new Neg(this);
    return new i32(-this._A);
};
i32.prototype.mov = function mov(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 32 || that.bitsof === 32 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#mov
            return (new that.type(this)).mov(that);
        return that.mov(this);
    }
    if(!this.known) // Unknown#mov
        return new Mov(this, that);
    if(!that.known)
        return that.mov(this);
    return new i32(this._A = that._A);
};
i32.prototype.add = function add(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 32 || that.bitsof === 32 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#add
            return (new that.type(this)).add(that);
        return that.add(this);
    }
    if(!this.known) // Unknown#add
        return new Add(this, that);
    if(!that.known)
        return that.add(this);
    return new i32(this._A + that._A);
};
i32.prototype.mul = function mul(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 32 || that.bitsof === 32 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#mul
            return (new that.type(this)).mul(that);
        return that.mul(this);
    }
    if(!this.known) // Unknown#mul
        return new Mul(this, that);
    if(!that.known)
        return that.mul(this);
    return new i32(this._A * that._A);
};
i32.prototype.div = function div(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 32 || that.bitsof === 32 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#div
            return (new that.type(this)).div(that);
        return that.div(this);
    }
    if(!this.known) // Unknown#div
        return new Div(this, that);
    if(!that.known)
        return that.div(this);
    return new i32(this._A / that._A);
};
i32.prototype.and = function and(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 32 || that.bitsof === 32 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#and
            return (new that.type(this)).and(that);
        return that.and(this);
    }
    if(!this.known) // Unknown#and
        return new And(this, that);
    if(!that.known)
        return that.and(this);
    return new i32(this._A & that._A);
};
i32.prototype.or = function or(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 32 || that.bitsof === 32 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#or
            return (new that.type(this)).or(that);
        return that.or(this);
    }
    if(!this.known) // Unknown#or
        return new Or(this, that);
    if(!that.known)
        return that.or(this);
    return new i32(this._A | that._A);
};
i32.prototype.xor = function xor(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 32 || that.bitsof === 32 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#xor
            return (new that.type(this)).xor(that);
        return that.xor(this);
    }
    if(!this.known) // Unknown#xor
        return new Xor(this, that);
    if(!that.known)
        return that.xor(this);
    return new i32(this._A ^ that._A);
};
i32.prototype.eq = function eq(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 32 || that.bitsof === 32 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#eq
            return (new that.type(this)).eq(that);
        return that.eq(this);
    }
    if(!this.known) // Unknown#eq
        return new Eq(this, that);
    if(!that.known)
        return that.eq(this);
    return new u1((this._A == that._A ? 1 : 0));
};
i32.prototype.lt = function lt(that) { // assumes that is of an integer type.
    if(!that.isInteger || that.bitsof > 32 || that.bitsof === 32 && !that.signed) { // that.type > this.type
        if(!this.known && that.known) // Unknown#lt
            return (new that.type(this)).lt(that);
        return /*HACK < is the only non-commutative operator */ that.lt(this).not().and(that.eq(this).not());
    }
    if(!this.known) // Unknown#lt
        return new Lt(this, that);
    if(!that.known)
        return /*HACK < is the only non-commutative operator */ that.lt(this).not().and(that.eq(this).not());
    return new u1((this._A < that._A ? 1 : 0));
};
i32.prototype.shl = function shl(that) { // assumes that is of an integer type.
    if(!this.known || !that.isInteger || !that.known) // Unknown#shl
        return new Shl(this, that);
    return new i32(this._A << (that._A & 0x1f));
};
i32.prototype.shr = function shr(that) { // assumes that is of an integer type.
    if(!this.known || !that.isInteger || !that.known) // Unknown#shr
        return new Shr(this, that);
    return new i32(this._A >> (that._A & 0x1f));
};
i32.prototype.rol = function rol(that) {
    return this.shl(that).or(this.shr(u8(32).sub(that)));
};
i32.prototype.ror = function ror(that) {
    return this.shr(that).or(this.shl(u8(32).sub(that)));
};

var u64 = uint[64] = exports.u64 = function u64(a, b) {
    if(a.type === u64) // HACK This should only fix Unknown operations.
        return a;
    if(!(this instanceof u64))
        return new u64(a);
    if(typeof a === 'number')
        this._A = a >>> 0;
    else if(a.isInteger && a.known)
        this._A = a._A >>> 0;
    else {
        this._A = a instanceof i64 || a instanceof u64 ? a._A : a;
        this.known = false;
    }
}
u64.prototype = new Integer;
u64.prototype.constructor = u64;
u64.prototype.type = u64;
u64.prototype._A = u64.prototype._B = 0;
u64.prototype.bitsof = 64;
u64.prototype.signed = false;
u64.prototype.inspect = function(_, p) {
    if(this.known)
        return 'u64('+this._A+', '+this._B+')';
    return (/*process.env.DEBUG_INT*/false || (this._A instanceof Integer || this._A instanceof Unknown) && this._A.type !== u64) ? 'u64('+inspect(this._A)+')' : inspect(this._A, p);
};
u64.prototype.not = Unknown.prototype.not;
u64.prototype.neg = Unknown.prototype.neg;
u64.prototype.mov = Unknown.prototype.mov;
u64.prototype.add = Unknown.prototype.add;
u64.prototype.mul = Unknown.prototype.mul;
u64.prototype.div = Unknown.prototype.div;
u64.prototype.and = Unknown.prototype.and;
u64.prototype.or = Unknown.prototype.or;
u64.prototype.xor = Unknown.prototype.xor;
u64.prototype.eq = Unknown.prototype.eq;
u64.prototype.lt = Unknown.prototype.lt;
u64.prototype.shl = Unknown.prototype.shl;
u64.prototype.shr = Unknown.prototype.shr;
u64.prototype.rol = function rol(that) {
    return this.shl(that).or(this.shr(u8(64).sub(that)));
};
u64.prototype.ror = function ror(that) {
    return this.shr(that).or(this.shl(u8(64).sub(that)));
};

var i64 = int[64] = exports.i64 = function i64(a, b) {
    if(a.type === i64) // HACK This should only fix Unknown operations.
        return a;
    if(!(this instanceof i64))
        return new i64(a);
    if(typeof a === 'number')
        this._A = a >> 0;
    else if(a.isInteger && a.known)
        this._A = a._A >> 0;
    else {
        this._A = a instanceof u64 || a instanceof i64 ? a._A : a;
        this.known = false;
    }
}
i64.prototype = new Integer;
i64.prototype.constructor = i64;
i64.prototype.type = i64;
i64.prototype._A = i64.prototype._B = 0;
i64.prototype.bitsof = 64;
i64.prototype.signed = true;
i64.prototype.inspect = function(_, p) {
    if(this.known)
        return 'i64('+this._A+', '+this._B+')';
    return (/*process.env.DEBUG_INT*/false || (this._A instanceof Integer || this._A instanceof Unknown) && this._A.type !== i64) ? 'i64('+inspect(this._A)+')' : inspect(this._A, p);
};
i64.prototype.not = Unknown.prototype.not;
i64.prototype.neg = Unknown.prototype.neg;
i64.prototype.mov = Unknown.prototype.mov;
i64.prototype.add = Unknown.prototype.add;
i64.prototype.mul = Unknown.prototype.mul;
i64.prototype.div = Unknown.prototype.div;
i64.prototype.and = Unknown.prototype.and;
i64.prototype.or = Unknown.prototype.or;
i64.prototype.xor = Unknown.prototype.xor;
i64.prototype.eq = Unknown.prototype.eq;
i64.prototype.lt = Unknown.prototype.lt;
i64.prototype.shl = Unknown.prototype.shl;
i64.prototype.shr = Unknown.prototype.shr;
i64.prototype.rol = function rol(that) {
    return this.shl(that).or(this.shr(u8(64).sub(that)));
};
i64.prototype.ror = function ror(that) {
    return this.shr(that).or(this.shl(u8(64).sub(that)));
};

var u128 = uint[128] = exports.u128 = function u128(a, b, c, d) {
    if(a.type === u128) // HACK This should only fix Unknown operations.
        return a;
    if(!(this instanceof u128))
        return new u128(a);
    if(typeof a === 'number')
        this._A = a >>> 0;
    else if(a.isInteger && a.known)
        this._A = a._A >>> 0;
    else {
        this._A = a instanceof i128 || a instanceof u128 ? a._A : a;
        this.known = false;
    }
}
u128.prototype = new Integer;
u128.prototype.constructor = u128;
u128.prototype.type = u128;
u128.prototype._A = u128.prototype._B = u128.prototype._C = u128.prototype._D = 0;
u128.prototype.bitsof = 128;
u128.prototype.signed = false;
u128.prototype.inspect = function(_, p) {
    if(this.known)
        return 'u128('+this._A+', '+this._B+', '+this._C+', '+this._D+')';
    return (/*process.env.DEBUG_INT*/false || (this._A instanceof Integer || this._A instanceof Unknown) && this._A.type !== u128) ? 'u128('+inspect(this._A)+')' : inspect(this._A, p);
};
u128.prototype.not = Unknown.prototype.not;
u128.prototype.neg = Unknown.prototype.neg;
u128.prototype.mov = Unknown.prototype.mov;
u128.prototype.add = Unknown.prototype.add;
u128.prototype.mul = Unknown.prototype.mul;
u128.prototype.div = Unknown.prototype.div;
u128.prototype.and = Unknown.prototype.and;
u128.prototype.or = Unknown.prototype.or;
u128.prototype.xor = Unknown.prototype.xor;
u128.prototype.eq = Unknown.prototype.eq;
u128.prototype.lt = Unknown.prototype.lt;
u128.prototype.shl = Unknown.prototype.shl;
u128.prototype.shr = Unknown.prototype.shr;
u128.prototype.rol = function rol(that) {
    return this.shl(that).or(this.shr(u8(128).sub(that)));
};
u128.prototype.ror = function ror(that) {
    return this.shr(that).or(this.shl(u8(128).sub(that)));
};

var i128 = int[128] = exports.i128 = function i128(a, b, c, d) {
    if(a.type === i128) // HACK This should only fix Unknown operations.
        return a;
    if(!(this instanceof i128))
        return new i128(a);
    if(typeof a === 'number')
        this._A = a >> 0;
    else if(a.isInteger && a.known)
        this._A = a._A >> 0;
    else {
        this._A = a instanceof u128 || a instanceof i128 ? a._A : a;
        this.known = false;
    }
}
i128.prototype = new Integer;
i128.prototype.constructor = i128;
i128.prototype.type = i128;
i128.prototype._A = i128.prototype._B = i128.prototype._C = i128.prototype._D = 0;
i128.prototype.bitsof = 128;
i128.prototype.signed = true;
i128.prototype.inspect = function(_, p) {
    if(this.known)
        return 'i128('+this._A+', '+this._B+', '+this._C+', '+this._D+')';
    return (/*process.env.DEBUG_INT*/false || (this._A instanceof Integer || this._A instanceof Unknown) && this._A.type !== i128) ? 'i128('+inspect(this._A)+')' : inspect(this._A, p);
};
i128.prototype.not = Unknown.prototype.not;
i128.prototype.neg = Unknown.prototype.neg;
i128.prototype.mov = Unknown.prototype.mov;
i128.prototype.add = Unknown.prototype.add;
i128.prototype.mul = Unknown.prototype.mul;
i128.prototype.div = Unknown.prototype.div;
i128.prototype.and = Unknown.prototype.and;
i128.prototype.or = Unknown.prototype.or;
i128.prototype.xor = Unknown.prototype.xor;
i128.prototype.eq = Unknown.prototype.eq;
i128.prototype.lt = Unknown.prototype.lt;
i128.prototype.shl = Unknown.prototype.shl;
i128.prototype.shr = Unknown.prototype.shr;
i128.prototype.rol = function rol(that) {
    return this.shl(that).or(this.shr(u8(128).sub(that)));
};
i128.prototype.ror = function ror(that) {
    return this.shr(that).or(this.shl(u8(128).sub(that)));
};

var u256 = uint[256] = exports.u256 = function u256(a, b, c, d, e, f, g, h) {
    if(a.type === u256) // HACK This should only fix Unknown operations.
        return a;
    if(!(this instanceof u256))
        return new u256(a);
    if(typeof a === 'number')
        this._A = a >>> 0;
    else if(a.isInteger && a.known)
        this._A = a._A >>> 0;
    else {
        this._A = a instanceof i256 || a instanceof u256 ? a._A : a;
        this.known = false;
    }
}
u256.prototype = new Integer;
u256.prototype.constructor = u256;
u256.prototype.type = u256;
u256.prototype._A = u256.prototype._B = u256.prototype._C = u256.prototype._D = u256.prototype._E = u256.prototype._F = u256.prototype._G = u256.prototype._H = 0;
u256.prototype.bitsof = 256;
u256.prototype.signed = false;
u256.prototype.inspect = function(_, p) {
    if(this.known)
        return 'u256('+this._A+', '+this._B+', '+this._C+', '+this._D+', '+this._E+', '+this._F+', '+this._G+', '+this._H+')';
    return (/*process.env.DEBUG_INT*/false || (this._A instanceof Integer || this._A instanceof Unknown) && this._A.type !== u256) ? 'u256('+inspect(this._A)+')' : inspect(this._A, p);
};
u256.prototype.not = Unknown.prototype.not;
u256.prototype.neg = Unknown.prototype.neg;
u256.prototype.mov = Unknown.prototype.mov;
u256.prototype.add = Unknown.prototype.add;
u256.prototype.mul = Unknown.prototype.mul;
u256.prototype.div = Unknown.prototype.div;
u256.prototype.and = Unknown.prototype.and;
u256.prototype.or = Unknown.prototype.or;
u256.prototype.xor = Unknown.prototype.xor;
u256.prototype.eq = Unknown.prototype.eq;
u256.prototype.lt = Unknown.prototype.lt;
u256.prototype.shl = Unknown.prototype.shl;
u256.prototype.shr = Unknown.prototype.shr;
u256.prototype.rol = function rol(that) {
    return this.shl(that).or(this.shr(u8(256).sub(that)));
};
u256.prototype.ror = function ror(that) {
    return this.shr(that).or(this.shl(u8(256).sub(that)));
};

var i256 = int[256] = exports.i256 = function i256(a, b, c, d, e, f, g, h) {
    if(a.type === i256) // HACK This should only fix Unknown operations.
        return a;
    if(!(this instanceof i256))
        return new i256(a);
    if(typeof a === 'number')
        this._A = a >> 0;
    else if(a.isInteger && a.known)
        this._A = a._A >> 0;
    else {
        this._A = a instanceof u256 || a instanceof i256 ? a._A : a;
        this.known = false;
    }
}
i256.prototype = new Integer;
i256.prototype.constructor = i256;
i256.prototype.type = i256;
i256.prototype._A = i256.prototype._B = i256.prototype._C = i256.prototype._D = i256.prototype._E = i256.prototype._F = i256.prototype._G = i256.prototype._H = 0;
i256.prototype.bitsof = 256;
i256.prototype.signed = true;
i256.prototype.inspect = function(_, p) {
    if(this.known)
        return 'i256('+this._A+', '+this._B+', '+this._C+', '+this._D+', '+this._E+', '+this._F+', '+this._G+', '+this._H+')';
    return (/*process.env.DEBUG_INT*/false || (this._A instanceof Integer || this._A instanceof Unknown) && this._A.type !== i256) ? 'i256('+inspect(this._A)+')' : inspect(this._A, p);
};
i256.prototype.not = Unknown.prototype.not;
i256.prototype.neg = Unknown.prototype.neg;
i256.prototype.mov = Unknown.prototype.mov;
i256.prototype.add = Unknown.prototype.add;
i256.prototype.mul = Unknown.prototype.mul;
i256.prototype.div = Unknown.prototype.div;
i256.prototype.and = Unknown.prototype.and;
i256.prototype.or = Unknown.prototype.or;
i256.prototype.xor = Unknown.prototype.xor;
i256.prototype.eq = Unknown.prototype.eq;
i256.prototype.lt = Unknown.prototype.lt;
i256.prototype.shl = Unknown.prototype.shl;
i256.prototype.shr = Unknown.prototype.shr;
i256.prototype.rol = function rol(that) {
    return this.shl(that).or(this.shr(u8(256).sub(that)));
};
i256.prototype.ror = function ror(that) {
    return this.shr(that).or(this.shl(u8(256).sub(that)));
};

var Float = exports.Float = function Float() {}
var _floatConvertor = new DataView(new ArrayBuffer(8));
Float.prototype = {
    constructor: Float, known: true, isInteger: false,
    get value() {
        if(!this.known) {
            var v = valueof(this._A);
            if(this._A.fn === 'Mem' && this.bitsof <= 64) { // HACK *reinterpret_cast<float*>(addr)
                if(!v.isInteger || v.bitsof !== this.bitsof || !v.known)
                    return; // TODO better support for reinterpret casts.
                _floatConvertor.setInt32(0, v._A | 0, true);
                if(this.bitsof === 32)
                    return new this.type(_floatConvertor.getFloat32(0, true));
                _floatConvertor.setInt32(4, v._B | 0, true);
                return new this.type(_floatConvertor.getFloat64(0, true));
            }
            if(v !== this._A)
                return new this.type(v);
        }
    },
    get lvalue() {
        if(!this.known)
            return this._A.lvalue;
    },
    sub: function sub(that) {
        if(that.isInteger || that.bitsof < this.bitsof) // HACK cleaner output
            that = new this.type(that);
        return this.add(that.neg());
    }
};

var float = exports.float = [];

// TODO how would the
var f32 = float[32] = exports.f32 = function f32(a) {
    if(a.type === f32) // HACK This should only fix Unknown operations.
        return a;
    if(!(this instanceof f32))
        return new f32(a);
    if(typeof a === 'number')
        this._A = a; // TODO actual conversion.
    else if(!a.isInteger && a.known) // FIXME check if it's actually a Float.
        this._A = a._A; // TODO actual conversion.
    else {
        this._A = a instanceof f32 ? a._A : a;
        this.known = false;
    }
}
f32.prototype = new Float;
f32.prototype.constructor = f32;
f32.prototype.type = f32;
f32.prototype._A = 0;
f32.prototype.bitsof = 32;
f32.prototype.signed = true;
f32.prototype.inspect = function() {
    if(this.known)
        return this._A.toString();
    var a = inspect(this._A);
    return (/*process.env.DEBUG_FLOAT*/false || this._A instanceof Float || this._A instanceof Unknown) ? 'f32('+a+')' : a;
};
f32.prototype.not = Unknown.prototype.not;
f32.prototype.neg = Unknown.prototype.neg;
f32.prototype.mov = Unknown.prototype.mov;
f32.prototype.add = Unknown.prototype.add;
f32.prototype.mul = Unknown.prototype.mul;
f32.prototype.div = Unknown.prototype.div;
f32.prototype.and = Unknown.prototype.and;
f32.prototype.or = Unknown.prototype.or;
f32.prototype.xor = Unknown.prototype.xor;
f32.prototype.eq = Unknown.prototype.eq;
f32.prototype.lt = Unknown.prototype.lt;
f32.prototype.shl = Unknown.prototype.shl;
f32.prototype.shr = Unknown.prototype.shr;
// TODO how would the
var f64 = float[64] = exports.f64 = function f64(a) {
    if(a.type === f64) // HACK This should only fix Unknown operations.
        return a;
    if(!(this instanceof f64))
        return new f64(a);
    if(typeof a === 'number')
        this._A = a; // TODO actual conversion.
    else if(!a.isInteger && a.known) // FIXME check if it's actually a Float.
        this._A = a._A; // TODO actual conversion.
    else {
        this._A = a instanceof f64 ? a._A : a;
        this.known = false;
    }
}
f64.prototype = new Float;
f64.prototype.constructor = f64;
f64.prototype.type = f64;
f64.prototype._A = 0;
f64.prototype.bitsof = 64;
f64.prototype.signed = true;
f64.prototype.inspect = function() {
    if(this.known)
        return this._A.toString();
    var a = inspect(this._A);
    return (/*process.env.DEBUG_FLOAT*/false || this._A instanceof Float || this._A instanceof Unknown) ? 'f64('+a+')' : a;
};
f64.prototype.not = Unknown.prototype.not;
f64.prototype.neg = Unknown.prototype.neg;
f64.prototype.mov = Unknown.prototype.mov;
f64.prototype.add = Unknown.prototype.add;
f64.prototype.mul = Unknown.prototype.mul;
f64.prototype.div = Unknown.prototype.div;
f64.prototype.and = Unknown.prototype.and;
f64.prototype.or = Unknown.prototype.or;
f64.prototype.xor = Unknown.prototype.xor;
f64.prototype.eq = Unknown.prototype.eq;
f64.prototype.lt = Unknown.prototype.lt;
f64.prototype.shl = Unknown.prototype.shl;
f64.prototype.shr = Unknown.prototype.shr;
// TODO how would the
var f80 = float[80] = exports.f80 = function f80(a) {
    if(a.type === f80) // HACK This should only fix Unknown operations.
        return a;
    if(!(this instanceof f80))
        return new f80(a);
    if(typeof a === 'number')
        this._A = a; // TODO actual conversion.
    else if(!a.isInteger && a.known) // FIXME check if it's actually a Float.
        this._A = a._A; // TODO actual conversion.
    else {
        this._A = a instanceof f80 ? a._A : a;
        this.known = false;
    }
}
f80.prototype = new Float;
f80.prototype.constructor = f80;
f80.prototype.type = f80;
f80.prototype._A = 0;
f80.prototype.bitsof = 80;
f80.prototype.signed = true;
f80.prototype.inspect = function() {
    if(this.known)
        return this._A.toString();
    var a = inspect(this._A);
    return (/*process.env.DEBUG_FLOAT*/false || this._A instanceof Float || this._A instanceof Unknown) ? 'f80('+a+')' : a;
};
f80.prototype.not = Unknown.prototype.not;
f80.prototype.neg = Unknown.prototype.neg;
f80.prototype.mov = Unknown.prototype.mov;
f80.prototype.add = Unknown.prototype.add;
f80.prototype.mul = Unknown.prototype.mul;
f80.prototype.div = Unknown.prototype.div;
f80.prototype.and = Unknown.prototype.and;
f80.prototype.or = Unknown.prototype.or;
f80.prototype.xor = Unknown.prototype.xor;
f80.prototype.eq = Unknown.prototype.eq;
f80.prototype.lt = Unknown.prototype.lt;
f80.prototype.shl = Unknown.prototype.shl;
f80.prototype.shr = Unknown.prototype.shr;
// TODO how would the
var f128 = float[128] = exports.f128 = function f128(a) {
    if(a.type === f128) // HACK This should only fix Unknown operations.
        return a;
    if(!(this instanceof f128))
        return new f128(a);
    if(typeof a === 'number')
        this._A = a; // TODO actual conversion.
    else if(!a.isInteger && a.known) // FIXME check if it's actually a Float.
        this._A = a._A; // TODO actual conversion.
    else {
        this._A = a instanceof f128 ? a._A : a;
        this.known = false;
    }
}
f128.prototype = new Float;
f128.prototype.constructor = f128;
f128.prototype.type = f128;
f128.prototype._A = 0;
f128.prototype.bitsof = 128;
f128.prototype.signed = true;
f128.prototype.inspect = function() {
    if(this.known)
        return this._A.toString();
    var a = inspect(this._A);
    return (/*process.env.DEBUG_FLOAT*/false || this._A instanceof Float || this._A instanceof Unknown) ? 'f128('+a+')' : a;
};
f128.prototype.not = Unknown.prototype.not;
f128.prototype.neg = Unknown.prototype.neg;
f128.prototype.mov = Unknown.prototype.mov;
f128.prototype.add = Unknown.prototype.add;
f128.prototype.mul = Unknown.prototype.mul;
f128.prototype.div = Unknown.prototype.div;
f128.prototype.and = Unknown.prototype.and;
f128.prototype.or = Unknown.prototype.or;
f128.prototype.xor = Unknown.prototype.xor;
f128.prototype.eq = Unknown.prototype.eq;
f128.prototype.lt = Unknown.prototype.lt;
f128.prototype.shl = Unknown.prototype.shl;
f128.prototype.shr = Unknown.prototype.shr;
var Register = exports.Register = [];
function RegisterFrozen1(name, value, type) {
    this.name = name;
    this.frozenValue = value;
    this.type = type;
}
RegisterFrozen1.prototype = new Unknown(1);
RegisterFrozen1.prototype.constructor = RegisterFrozen1;
RegisterFrozen1.prototype.inspect = function() {
    return this.name;
};
var Register1 = Register[1] = exports.Register1 = function Register1(name) {
    if(!(this instanceof Register1))
        return new Register1(name);
    var self = this;
    if(name !== undefined)
        this.name = name;
    else
        name = this.name;
    this.lvalue = {
        inspect: function() {
            return name + self.nthValue.toSubString();
        },
        freeze: function(v) {
            self.value = new RegisterFrozen1(name + (self.nthValue++).toSubString(), v, self.type);
        },
        get value() {
            return self.value;
        },
        set value(v) {
            self.value = v;
        }
    };
}
Register1.prototype = new Unknown(1);
Register1.prototype.constructor = Register1;
Register1.prototype.name = '<1>';
Register1.prototype.nthValue = -1;
Register1.prototype.inspect = function() {
    return /*typeof this.name === 'string' ?*/ this.name /*: '(R)'+inspect(this.name)*/;
};
function RegisterFrozen8(name, value, type) {
    this.name = name;
    this.frozenValue = value;
    this.type = type;
}
RegisterFrozen8.prototype = new Unknown(8);
RegisterFrozen8.prototype.constructor = RegisterFrozen8;
RegisterFrozen8.prototype.inspect = function() {
    return this.name;
};
var Register8 = Register[8] = exports.Register8 = function Register8(name) {
    if(!(this instanceof Register8))
        return new Register8(name);
    var self = this;
    if(name !== undefined)
        this.name = name;
    else
        name = this.name;
    this.lvalue = {
        inspect: function() {
            return name + self.nthValue.toSubString();
        },
        freeze: function(v) {
            self.value = new RegisterFrozen8(name + (self.nthValue++).toSubString(), v, self.type);
        },
        get value() {
            return self.value;
        },
        set value(v) {
            self.value = v;
        }
    };
}
Register8.prototype = new Unknown(8);
Register8.prototype.constructor = Register8;
Register8.prototype.name = '<8>';
Register8.prototype.nthValue = -1;
Register8.prototype.inspect = function() {
    return /*typeof this.name === 'string' ?*/ this.name /*: '(R)'+inspect(this.name)*/;
};
function RegisterFrozen16(name, value, type) {
    this.name = name;
    this.frozenValue = value;
    this.type = type;
}
RegisterFrozen16.prototype = new Unknown(16);
RegisterFrozen16.prototype.constructor = RegisterFrozen16;
RegisterFrozen16.prototype.inspect = function() {
    return this.name;
};
var Register16 = Register[16] = exports.Register16 = function Register16(name) {
    if(!(this instanceof Register16))
        return new Register16(name);
    var self = this;
    if(name !== undefined)
        this.name = name;
    else
        name = this.name;
    this.lvalue = {
        inspect: function() {
            return name + self.nthValue.toSubString();
        },
        freeze: function(v) {
            self.value = new RegisterFrozen16(name + (self.nthValue++).toSubString(), v, self.type);
        },
        get value() {
            return self.value;
        },
        set value(v) {
            self.value = v;
        }
    };
}
Register16.prototype = new Unknown(16);
Register16.prototype.constructor = Register16;
Register16.prototype.name = '<16>';
Register16.prototype.nthValue = -1;
Register16.prototype.inspect = function() {
    return /*typeof this.name === 'string' ?*/ this.name /*: '(R)'+inspect(this.name)*/;
};
function RegisterFrozen32(name, value, type) {
    this.name = name;
    this.frozenValue = value;
    this.type = type;
}
RegisterFrozen32.prototype = new Unknown(32);
RegisterFrozen32.prototype.constructor = RegisterFrozen32;
RegisterFrozen32.prototype.inspect = function() {
    return this.name;
};
var Register32 = Register[32] = exports.Register32 = function Register32(name) {
    if(!(this instanceof Register32))
        return new Register32(name);
    var self = this;
    if(name !== undefined)
        this.name = name;
    else
        name = this.name;
    this.lvalue = {
        inspect: function() {
            return name + self.nthValue.toSubString();
        },
        freeze: function(v) {
            self.value = new RegisterFrozen32(name + (self.nthValue++).toSubString(), v, self.type);
        },
        get value() {
            return self.value;
        },
        set value(v) {
            self.value = v;
        }
    };
}
Register32.prototype = new Unknown(32);
Register32.prototype.constructor = Register32;
Register32.prototype.name = '<32>';
Register32.prototype.nthValue = -1;
Register32.prototype.inspect = function() {
    return /*typeof this.name === 'string' ?*/ this.name /*: '(R)'+inspect(this.name)*/;
};
function RegisterFrozen64(name, value, type) {
    this.name = name;
    this.frozenValue = value;
    this.type = type;
}
RegisterFrozen64.prototype = new Unknown(64);
RegisterFrozen64.prototype.constructor = RegisterFrozen64;
RegisterFrozen64.prototype.inspect = function() {
    return this.name;
};
var Register64 = Register[64] = exports.Register64 = function Register64(name) {
    if(!(this instanceof Register64))
        return new Register64(name);
    var self = this;
    if(name !== undefined)
        this.name = name;
    else
        name = this.name;
    this.lvalue = {
        inspect: function() {
            return name + self.nthValue.toSubString();
        },
        freeze: function(v) {
            self.value = new RegisterFrozen64(name + (self.nthValue++).toSubString(), v, self.type);
        },
        get value() {
            return self.value;
        },
        set value(v) {
            self.value = v;
        }
    };
}
Register64.prototype = new Unknown(64);
Register64.prototype.constructor = Register64;
Register64.prototype.name = '<64>';
Register64.prototype.nthValue = -1;
Register64.prototype.inspect = function() {
    return /*typeof this.name === 'string' ?*/ this.name /*: '(R)'+inspect(this.name)*/;
};
function RegisterFrozen80(name, value, type) {
    this.name = name;
    this.frozenValue = value;
    this.type = type;
}
RegisterFrozen80.prototype = new Unknown(80);
RegisterFrozen80.prototype.constructor = RegisterFrozen80;
RegisterFrozen80.prototype.inspect = function() {
    return this.name;
};
var Register80 = Register[80] = exports.Register80 = function Register80(name) {
    if(!(this instanceof Register80))
        return new Register80(name);
    var self = this;
    if(name !== undefined)
        this.name = name;
    else
        name = this.name;
    this.lvalue = {
        inspect: function() {
            return name + self.nthValue.toSubString();
        },
        freeze: function(v) {
            self.value = new RegisterFrozen80(name + (self.nthValue++).toSubString(), v, self.type);
        },
        get value() {
            return self.value;
        },
        set value(v) {
            self.value = v;
        }
    };
}
Register80.prototype = new Unknown(80);
Register80.prototype.constructor = Register80;
Register80.prototype.name = '<80>';
Register80.prototype.nthValue = -1;
Register80.prototype.inspect = function() {
    return /*typeof this.name === 'string' ?*/ this.name /*: '(R)'+inspect(this.name)*/;
};
function RegisterFrozen128(name, value, type) {
    this.name = name;
    this.frozenValue = value;
    this.type = type;
}
RegisterFrozen128.prototype = new Unknown(128);
RegisterFrozen128.prototype.constructor = RegisterFrozen128;
RegisterFrozen128.prototype.inspect = function() {
    return this.name;
};
var Register128 = Register[128] = exports.Register128 = function Register128(name) {
    if(!(this instanceof Register128))
        return new Register128(name);
    var self = this;
    if(name !== undefined)
        this.name = name;
    else
        name = this.name;
    this.lvalue = {
        inspect: function() {
            return name + self.nthValue.toSubString();
        },
        freeze: function(v) {
            self.value = new RegisterFrozen128(name + (self.nthValue++).toSubString(), v, self.type);
        },
        get value() {
            return self.value;
        },
        set value(v) {
            self.value = v;
        }
    };
}
Register128.prototype = new Unknown(128);
Register128.prototype.constructor = Register128;
Register128.prototype.name = '<128>';
Register128.prototype.nthValue = -1;
Register128.prototype.inspect = function() {
    return /*typeof this.name === 'string' ?*/ this.name /*: '(R)'+inspect(this.name)*/;
};
function RegisterFrozen256(name, value, type) {
    this.name = name;
    this.frozenValue = value;
    this.type = type;
}
RegisterFrozen256.prototype = new Unknown(256);
RegisterFrozen256.prototype.constructor = RegisterFrozen256;
RegisterFrozen256.prototype.inspect = function() {
    return this.name;
};
var Register256 = Register[256] = exports.Register256 = function Register256(name) {
    if(!(this instanceof Register256))
        return new Register256(name);
    var self = this;
    if(name !== undefined)
        this.name = name;
    else
        name = this.name;
    this.lvalue = {
        inspect: function() {
            return name + self.nthValue.toSubString();
        },
        freeze: function(v) {
            self.value = new RegisterFrozen256(name + (self.nthValue++).toSubString(), v, self.type);
        },
        get value() {
            return self.value;
        },
        set value(v) {
            self.value = v;
        }
    };
}
Register256.prototype = new Unknown(256);
Register256.prototype.constructor = Register256;
Register256.prototype.name = '<256>';
Register256.prototype.nthValue = -1;
Register256.prototype.inspect = function() {
    return /*typeof this.name === 'string' ?*/ this.name /*: '(R)'+inspect(this.name)*/;
};
var Mem = exports.Mem = {};
Mem.read = function(address, bits) {
    if(/*process.env.DEBUG_MEM*/false)
        console.error('Non-implemented Mem read ['+inspect(address)+']'+bits);
};
Mem.write = function(address, bits, value) {
    if(/*process.env.DEBUG_MEM*/false)
        console.error('Non-implemented Mem write ['+inspect(address)+']'+bits+' = '+inspect(value));
};
var Mem1 = Mem[1] = exports.Mem1 = function Mem1(addr) {
    if(!(this instanceof Mem1))
        return new Mem1(addr);
    this.addr = addr;
};
Mem1.prototype = new Unknown(1);
Mem1.prototype.constructor = Mem1;
Mem1.prototype.fn = 'Mem';
Object.defineProperties(Mem1.prototype, {
    lvalue: {
        get: function() {
            var v = valueof(this.addr);
            if(v !== this.addr) return new Mem1(v);
        }
    },
    value: {
        get: function() {
            var v = valueof(this.addr), m = Mem.read(v, 1);
            if(m !== null && m !== void 0)
                return m;
            if(v !== this.addr) return new Mem1(v);
        },
        set: function(v) {
            return Mem.write(this.addr, 1, v);
        }
    }
});
Mem1.prototype.inspect = function() {
    return '['+inspect(this.addr)+']1';
};

var Mem8 = Mem[8] = exports.Mem8 = function Mem8(addr) {
    if(!(this instanceof Mem8))
        return new Mem8(addr);
    this.addr = addr;
};
Mem8.prototype = new Unknown(8);
Mem8.prototype.constructor = Mem8;
Mem8.prototype.fn = 'Mem';
Object.defineProperties(Mem8.prototype, {
    lvalue: {
        get: function() {
            var v = valueof(this.addr);
            if(v !== this.addr) return new Mem8(v);
        }
    },
    value: {
        get: function() {
            var v = valueof(this.addr), m = Mem.read(v, 8);
            if(m !== null && m !== void 0)
                return m;
            if(v !== this.addr) return new Mem8(v);
        },
        set: function(v) {
            return Mem.write(this.addr, 8, v);
        }
    }
});
Mem8.prototype.inspect = function() {
    return '['+inspect(this.addr)+']8';
};

var Mem16 = Mem[16] = exports.Mem16 = function Mem16(addr) {
    if(!(this instanceof Mem16))
        return new Mem16(addr);
    this.addr = addr;
};
Mem16.prototype = new Unknown(16);
Mem16.prototype.constructor = Mem16;
Mem16.prototype.fn = 'Mem';
Object.defineProperties(Mem16.prototype, {
    lvalue: {
        get: function() {
            var v = valueof(this.addr);
            if(v !== this.addr) return new Mem16(v);
        }
    },
    value: {
        get: function() {
            var v = valueof(this.addr), m = Mem.read(v, 16);
            if(m !== null && m !== void 0)
                return m;
            if(v !== this.addr) return new Mem16(v);
        },
        set: function(v) {
            return Mem.write(this.addr, 16, v);
        }
    }
});
Mem16.prototype.inspect = function() {
    return '['+inspect(this.addr)+']16';
};

var Mem32 = Mem[32] = exports.Mem32 = function Mem32(addr) {
    if(!(this instanceof Mem32))
        return new Mem32(addr);
    this.addr = addr;
};
Mem32.prototype = new Unknown(32);
Mem32.prototype.constructor = Mem32;
Mem32.prototype.fn = 'Mem';
Object.defineProperties(Mem32.prototype, {
    lvalue: {
        get: function() {
            var v = valueof(this.addr);
            if(v !== this.addr) return new Mem32(v);
        }
    },
    value: {
        get: function() {
            var v = valueof(this.addr), m = Mem.read(v, 32);
            if(m !== null && m !== void 0)
                return m;
            if(v !== this.addr) return new Mem32(v);
        },
        set: function(v) {
            return Mem.write(this.addr, 32, v);
        }
    }
});
Mem32.prototype.inspect = function() {
    return '['+inspect(this.addr)+']32';
};

var Mem64 = Mem[64] = exports.Mem64 = function Mem64(addr) {
    if(!(this instanceof Mem64))
        return new Mem64(addr);
    this.addr = addr;
};
Mem64.prototype = new Unknown(64);
Mem64.prototype.constructor = Mem64;
Mem64.prototype.fn = 'Mem';
Object.defineProperties(Mem64.prototype, {
    lvalue: {
        get: function() {
            var v = valueof(this.addr);
            if(v !== this.addr) return new Mem64(v);
        }
    },
    value: {
        get: function() {
            var v = valueof(this.addr), m = Mem.read(v, 64);
            if(m !== null && m !== void 0)
                return m;
            if(v !== this.addr) return new Mem64(v);
        },
        set: function(v) {
            return Mem.write(this.addr, 64, v);
        }
    }
});
Mem64.prototype.inspect = function() {
    return '['+inspect(this.addr)+']64';
};

var Mem80 = Mem[80] = exports.Mem80 = function Mem80(addr) {
    if(!(this instanceof Mem80))
        return new Mem80(addr);
    this.addr = addr;
};
Mem80.prototype = new Unknown(80);
Mem80.prototype.constructor = Mem80;
Mem80.prototype.fn = 'Mem';
Object.defineProperties(Mem80.prototype, {
    lvalue: {
        get: function() {
            var v = valueof(this.addr);
            if(v !== this.addr) return new Mem80(v);
        }
    },
    value: {
        get: function() {
            var v = valueof(this.addr), m = Mem.read(v, 80);
            if(m !== null && m !== void 0)
                return m;
            if(v !== this.addr) return new Mem80(v);
        },
        set: function(v) {
            return Mem.write(this.addr, 80, v);
        }
    }
});
Mem80.prototype.inspect = function() {
    return '['+inspect(this.addr)+']80';
};

var Mem128 = Mem[128] = exports.Mem128 = function Mem128(addr) {
    if(!(this instanceof Mem128))
        return new Mem128(addr);
    this.addr = addr;
};
Mem128.prototype = new Unknown(128);
Mem128.prototype.constructor = Mem128;
Mem128.prototype.fn = 'Mem';
Object.defineProperties(Mem128.prototype, {
    lvalue: {
        get: function() {
            var v = valueof(this.addr);
            if(v !== this.addr) return new Mem128(v);
        }
    },
    value: {
        get: function() {
            var v = valueof(this.addr), m = Mem.read(v, 128);
            if(m !== null && m !== void 0)
                return m;
            if(v !== this.addr) return new Mem128(v);
        },
        set: function(v) {
            return Mem.write(this.addr, 128, v);
        }
    }
});
Mem128.prototype.inspect = function() {
    return '['+inspect(this.addr)+']128';
};

var Mem256 = Mem[256] = exports.Mem256 = function Mem256(addr) {
    if(!(this instanceof Mem256))
        return new Mem256(addr);
    this.addr = addr;
};
Mem256.prototype = new Unknown(256);
Mem256.prototype.constructor = Mem256;
Mem256.prototype.fn = 'Mem';
Object.defineProperties(Mem256.prototype, {
    lvalue: {
        get: function() {
            var v = valueof(this.addr);
            if(v !== this.addr) return new Mem256(v);
        }
    },
    value: {
        get: function() {
            var v = valueof(this.addr), m = Mem.read(v, 256);
            if(m !== null && m !== void 0)
                return m;
            if(v !== this.addr) return new Mem256(v);
        },
        set: function(v) {
            return Mem.write(this.addr, 256, v);
        }
    }
});
Mem256.prototype.inspect = function() {
    return '['+inspect(this.addr)+']256';
};

var If = exports.If = function If(cond, then) {
    if(!(this instanceof If))
        return new If(cond, then);
    //if(cond.known && cond.bitsof <= 32) // HACK doesn't work > 32bits.
    //    return cond._A ? then : Nop(); // HACK Nop was null.
    this.cond = cond;
    this.then = then;
};
If.prototype = {
    constructor: If, fn: 'If',
    get value() {
        var cond = valueof(this.cond);
        if(cond !== this.cond)
            return new If(cond, this.then);
    },
    inspect: function() {
        return 'if('+inspect(this.cond)+') '+inspect(this.then)+';';
    }
};

var FnCall = exports.FnCall = function FnCall(name) {
    if(!(this instanceof FnCall)) // HACK this can slow things down, use new in generated code.
        return new (FnCall.bind.apply(FnCall, [null].concat([].slice.call(arguments))));
    this.name = name;
    this.args = [].slice.call(arguments, 1);
};
FnCall.prototype = {
    constructor: FnCall, fn: 'FnCall',
    get value() {
        var changes = false, args = [null, this.name];
        for(var i = 0; i < this.args.length; i++)
            if((args[i+2] = valueof(this.args[i])) !== this.args[i])
                changes = true;
        if(changes)
            return new (FnCall.bind.apply(FnCall, args));
    },
    inspect: function() {
        var s = this.name+'(';
        for(var i = 0; i < this.args.length; i++)
            s += (i ? ', ' : '')+inspect(this.args[i]);
        return s+')';
    }
};

var Nop = exports.Nop = FnCall.bind(null, 'Nop');
var Interrupt = exports.Interrupt = FnCall.bind(null, 'Interrupt');

var R = exports.R = {}, R1 = [], R8 = [], R16 = [], R32 = [], R80 = [];
R.AL = R8[0] = new Register8('AL');
R.AH = R8[4] = new Register8('AH');
R.AX = R16[0] = new Register16('AX');
R.EAX = R32[0] = new Register32('EAX');
R.CL = R8[1] = new Register8('CL');
R.CH = R8[5] = new Register8('CH');
R.CX = R16[1] = new Register16('CX');
R.ECX = R32[1] = new Register32('ECX');
R.DL = R8[2] = new Register8('DL');
R.DH = R8[6] = new Register8('DH');
R.DX = R16[2] = new Register16('DX');
R.EDX = R32[2] = new Register32('EDX');
R.BL = R8[3] = new Register8('BL');
R.BH = R8[7] = new Register8('BH');
R.BX = R16[3] = new Register16('BX');
R.EBX = R32[3] = new Register32('EBX');
R.ES = R16[16] = new Register16('ES');
R.CS = R16[17] = new Register16('CS');
R.SS = R16[18] = new Register16('SS');
R.DS = R16[19] = new Register16('DS');
R.FS = R16[20] = new Register16('FS');
R.SS = R16[21] = new Register16('SS');
R.GS = R16[22] = new Register16('GS');
R.SP = R16[4] = new Register16('SP');
R.ESP = R32[4] = new Register32('ESP');
R.BP = R16[5] = new Register16('BP');
R.EBP = R32[5] = new Register32('EBP');
R.SI = R16[6] = new Register16('SI');
R.ESI = R32[6] = new Register32('ESI');
R.DI = R16[7] = new Register16('DI');
R.EDI = R32[7] = new Register32('EDI');
R.IP = R16[8] = new Register16('IP');
R.EIP = R32[8] = new Register32('EIP');
R.EFLAGS = R32[32] = new Register32('EFLAGS');
R.OF = R1[0] = new Register1('OF');
R.CF = R1[1] = new Register1('CF');
R.ZF = R1[2] = new Register1('ZF');
R.SF = R1[3] = new Register1('SF');
R.PF = R1[4] = new Register1('PF');
R.VF = R1[5] = new Register1('VF');
R.DF = R1[6] = new Register1('DF');
R.IF = R1[7] = new Register1('IF');
R.ST0 = R80[0] = new Register80('ST0');
R80[0].type = f80;
R.ST1 = R80[1] = new Register80('ST1');
R80[1].type = f80;
R.ST2 = R80[2] = new Register80('ST2');
R80[2].type = f80;
R.ST3 = R80[3] = new Register80('ST3');
R80[3].type = f80;
R.ST4 = R80[4] = new Register80('ST4');
R80[4].type = f80;
R.ST5 = R80[5] = new Register80('ST5');
R80[5].type = f80;
R.ST6 = R80[6] = new Register80('ST6');
R80[6].type = f80;
R.ST7 = R80[7] = new Register80('ST7');
R80[7].type = f80;
R.SW = R16[48] = new Register16('SW');
R.C0 = R1[48] = new Register1('C0');
R.C1 = R1[49] = new Register1('C1');
R.C2 = R1[50] = new Register1('C2');
R.C3 = R1[51] = new Register1('C3');
R.CW = R16[49] = new Register16('CW');
exports.dis = function x86dis(b, i) {
    // HACK allows skipping prefixes.
    var _pfxLength = 0, _pfxOperandSize = false;
    for(var _pfx; (_pfx = b[i]), _pfx >= 0x64 && _pfx <= 0x67 || _pfx == 0xF0 || _pfx == 0xF2 || _pfx == 0xF3 || _pfx == 0x26 || _pfx == 0x2E || _pfx == 0x36 || _pfx == 0x3E; i++, _pfxLength++) {
        if(_pfx == 0x66)
            _pfxOperandSize = true;
        else
            console.error('[PREFIX] '+_pfx.toString(16).toUpperCase());
    }
    if(_pfxOperandSize) {
        var $0, $1, $2;

        if((((((((b[i] | ((b[i+1] << 8) >>> 0)) >>> 0) | ((b[i+2] << 16) >>> 0)) >>> 0) | ((((b[i+3] & 63) >>> 0) << 24) >>> 0)) >>> 0) & 0x3f0700ff) === 0x2504000f)
        switch(((b[i+1] | ((b[i+2] << 8) & 0xffff)) & 0xffff) & 0xc0ff) {
            case 0x1f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new FnCall('Nop', new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))];
            case 0x40: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[0], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
            case 0x41: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[0])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
            case 0x42: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[1], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
            case 0x43: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[1])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
            case 0x44: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[2], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
            case 0x45: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
            case 0x46: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
            case 0x47: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
            case 0x48: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[3], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
            case 0x49: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
            case 0x4a: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[4], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
            case 0x4b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[4])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
            case 0x4c: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
            case 0x4d: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
            case 0x4e: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
            case 0x4f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
            case 0xa3: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), new i8(0))))))];
            case 0xa4: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))), (new Or((new Shl($0, new i8(new u8(b[i+8])))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0xa5: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0xab: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), ($1 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u16(1), $1)), $0)))];
            case 0xac: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))), (new Or((new And(new u32(((((1 << (((b[i+8]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16) & 0xff) & 0x1f)), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+8])))))))];
            case 0xad: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($1 = new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(16))))), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
            case 0xaf: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))];
            case 0x401f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new FnCall('Nop', new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4])))))))];
            case 0x4040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[0], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))))];
            case 0x4041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[0])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))))];
            case 0x4042: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[1], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))))];
            case 0x4043: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[1])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))))];
            case 0x4044: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[2], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))))];
            case 0x4045: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))))];
            case 0x4046: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))))];
            case 0x4047: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))))];
            case 0x4048: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[3], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))))];
            case 0x4049: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))))];
            case 0x404a: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[4], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))))];
            case 0x404b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[4])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))))];
            case 0x404c: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))))];
            case 0x404d: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))))];
            case 0x404e: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))))];
            case 0x404f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))))];
            case 0x40a3: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4])))))))), new i8(0))))))];
            case 0x40a4: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))), (new Or((new Shl($0, new i8(new u8(b[i+5])))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+5]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x40a5: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x40ab: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), ($1 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u16(1), $1)), $0)))];
            case 0x40ac: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))), (new Or((new And(new u32(((((1 << (((b[i+5]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+5]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16) & 0xff) & 0x1f)), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+5])))))))];
            case 0x40ad: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($1 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(16))))), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
            case 0x40af: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4])))))))))];
            case 0x801f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new FnCall('Nop', new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))];
            case 0x8040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[0], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[0])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8042: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[1], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8043: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[1])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8044: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[2], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8045: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8046: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8047: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8048: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[3], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8049: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x804a: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[4], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x804b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[4])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x804c: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x804d: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x804e: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x804f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x80a3: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), new i8(0))))))];
            case 0x80a4: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+8])))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x80a5: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x80ab: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), ($1 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u16(1), $1)), $0)))];
            case 0x80ac: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new And(new u32(((((1 << (((b[i+8]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16) & 0xff) & 0x1f)), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+8])))))))];
            case 0x80ad: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($1 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(16))))), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
            case 0x80af: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))))];
        }

        if((((((((b[i] | ((b[i+1] << 8) >>> 0)) >>> 0) | ((b[i+2] << 16) >>> 0)) >>> 0) | ((((b[i+3] & 63) >>> 0) << 24) >>> 0)) >>> 0) & 0x380700ff) === 0x2004000f)
        switch(((b[i+1] | ((b[i+2] << 8) & 0xffff)) & 0xffff) & 0xc0ff) {
            case 0x1f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new FnCall('Nop', new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]))];
            case 0x40: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[0], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
            case 0x41: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[0])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
            case 0x42: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[1], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
            case 0x43: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[1])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
            case 0x44: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[2], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
            case 0x45: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
            case 0x46: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
            case 0x47: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
            case 0x48: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[3], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
            case 0x49: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
            case 0x4a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[4], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
            case 0x4b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[4])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
            case 0x4c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
            case 0x4d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
            case 0x4e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
            case 0x4f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
            case 0xa3: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]))), new i8(0))))))];
            case 0xa4: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0xa5: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0xab: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), ($1 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u16(1), $1)), $0)))];
            case 0xac: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])), (new Or((new And(new u32(((((1 << (((b[i+4]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16) & 0xff) & 0x1f)), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+4])))))))];
            case 0xad: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($1 = new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(16))))), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
            case 0xaf: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]))))];
            case 0x401f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new FnCall('Nop', new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))))];
            case 0x4040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[0], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
            case 0x4041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[0])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
            case 0x4042: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[1], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
            case 0x4043: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[1])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
            case 0x4044: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[2], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
            case 0x4045: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
            case 0x4046: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
            case 0x4047: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
            case 0x4048: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[3], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
            case 0x4049: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
            case 0x404a: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[4], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
            case 0x404b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[4])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
            case 0x404c: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
            case 0x404d: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
            case 0x404e: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
            case 0x404f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
            case 0x40a3: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))))), new i8(0))))))];
            case 0x40a4: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))), (new Or((new Shl($0, new i8(new u8(b[i+5])))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+5]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x40a5: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x40ab: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), ($1 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u16(1), $1)), $0)))];
            case 0x40ac: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))), (new Or((new And(new u32(((((1 << (((b[i+5]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+5]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16) & 0xff) & 0x1f)), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+5])))))))];
            case 0x40ad: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($1 = new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(16))))), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
            case 0x40af: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))))))];
            case 0x801f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new FnCall('Nop', new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))];
            case 0x8040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[0], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[0])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8042: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[1], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8043: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[1])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8044: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[2], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8045: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8046: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8047: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8048: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[3], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8049: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x804a: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[4], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x804b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[4])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x804c: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x804d: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x804e: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x804f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x80a3: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), new i8(0))))))];
            case 0x80a4: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+8])))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x80a5: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x80ab: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), ($1 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u16(1), $1)), $0)))];
            case 0x80ac: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new And(new u32(((((1 << (((b[i+8]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16) & 0xff) & 0x1f)), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+8])))))))];
            case 0x80ad: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($1 = new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(16))))), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
            case 0x80af: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))))];
        }

        if((((((((b[i] | ((b[i+1] << 8) >>> 0)) >>> 0) | ((b[i+2] << 16) >>> 0)) >>> 0) | ((((b[i+3] & 7) >>> 0) << 24) >>> 0)) >>> 0) & 0x70700ff) === 0x504000f)
        switch(((b[i+1] | ((b[i+2] << 8) & 0xffff)) & 0xffff) & 0xc0ff) {
            case 0x1f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new FnCall('Nop', new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))];
            case 0x40: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[0], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x41: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[0])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x42: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[1], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x43: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[1])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x44: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[2], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x45: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x46: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x47: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x48: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[3], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x49: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x4a: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[4], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x4b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[4])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x4c: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x4d: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x4e: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x4f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0xa3: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), new i8(0))))))];
            case 0xa4: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+8])))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0xa5: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0xab: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), ($1 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u16(1), $1)), $0)))];
            case 0xac: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new And(new u32(((((1 << (((b[i+8]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16) & 0xff) & 0x1f)), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+8])))))))];
            case 0xad: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($1 = new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(16))))), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
            case 0xaf: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))))];
            case 0x401f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new FnCall('Nop', new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))))];
            case 0x4040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[0], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
            case 0x4041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[0])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
            case 0x4042: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[1], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
            case 0x4043: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[1])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
            case 0x4044: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[2], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
            case 0x4045: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
            case 0x4046: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
            case 0x4047: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
            case 0x4048: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[3], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
            case 0x4049: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
            case 0x404a: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[4], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
            case 0x404b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[4])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
            case 0x404c: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
            case 0x404d: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
            case 0x404e: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
            case 0x404f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
            case 0x40a3: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))))), new i8(0))))))];
            case 0x40a4: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))), (new Or((new Shl($0, new i8(new u8(b[i+5])))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+5]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x40a5: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x40ab: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), ($1 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u16(1), $1)), $0)))];
            case 0x40ac: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))), (new Or((new And(new u32(((((1 << (((b[i+5]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+5]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16) & 0xff) & 0x1f)), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+5])))))))];
            case 0x40ad: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($1 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(16))))), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
            case 0x40af: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))))))];
            case 0x801f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new FnCall('Nop', new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))))];
            case 0x8040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[0], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
            case 0x8041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[0])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
            case 0x8042: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[1], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
            case 0x8043: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[1])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
            case 0x8044: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[2], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
            case 0x8045: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
            case 0x8046: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
            case 0x8047: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
            case 0x8048: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[3], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
            case 0x8049: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
            case 0x804a: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[4], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
            case 0x804b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[4])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
            case 0x804c: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
            case 0x804d: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
            case 0x804e: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
            case 0x804f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
            case 0x80a3: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))))), new i8(0))))))];
            case 0x80a4: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))), (new Or((new Shl($0, new i8(new u8(b[i+8])))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x80a5: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x80ab: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), ($1 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u16(1), $1)), $0)))];
            case 0x80ac: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))), (new Or((new And(new u32(((((1 << (((b[i+8]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16) & 0xff) & 0x1f)), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+8])))))))];
            case 0x80ad: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($1 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(16))))), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
            case 0x80af: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))))))];
        }

        if((((((b[i] | ((b[i+1] << 8) >>> 0)) >>> 0) | ((((b[i+2] & 7) >>> 0) << 16) >>> 0)) >>> 0) & 0x600ff) === 0x4000f)
        switch(((b[i+1] | ((b[i+2] << 8) & 0xffff)) & 0xffff) & 0xc1ff) {
            case 0x1f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new FnCall('Nop', new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))))];
            case 0x40: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[0], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
            case 0x41: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[0])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
            case 0x42: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[1], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
            case 0x43: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[1])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
            case 0x44: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[2], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
            case 0x45: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
            case 0x46: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
            case 0x47: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
            case 0x48: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[3], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
            case 0x49: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
            case 0x4a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[4], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
            case 0x4b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[4])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
            case 0x4c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
            case 0x4d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
            case 0x4e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
            case 0x4f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
            case 0xa3: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))))), new i8(0))))))];
            case 0xa4: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0xa5: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0xab: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), ($1 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u16(1), $1)), $0)))];
            case 0xac: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))), (new Or((new And(new u32(((((1 << (((b[i+4]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16) & 0xff) & 0x1f)), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+4])))))))];
            case 0xad: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($1 = new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(16))))), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
            case 0xaf: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))))))];
            case 0x11f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new FnCall('Nop', new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))];
            case 0x140: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[0], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
            case 0x141: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[0])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
            case 0x142: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[1], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
            case 0x143: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[1])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
            case 0x144: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[2], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
            case 0x145: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
            case 0x146: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
            case 0x147: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
            case 0x148: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[3], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
            case 0x149: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
            case 0x14a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[4], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
            case 0x14b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[4])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
            case 0x14c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
            case 0x14d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
            case 0x14e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
            case 0x14f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
            case 0x1a3: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i8(0))))))];
            case 0x1a4: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x1a5: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x1ab: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), ($1 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u16(1), $1)), $0)))];
            case 0x1ac: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new And(new u32(((((1 << (((b[i+7]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16) & 0xff) & 0x1f)), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+7])))))))];
            case 0x1ad: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($1 = new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(16))))), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
            case 0x1af: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x401f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new FnCall('Nop', new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))))];
            case 0x4040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[0], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
            case 0x4041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[0])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
            case 0x4042: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[1], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
            case 0x4043: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[1])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
            case 0x4044: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[2], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
            case 0x4045: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
            case 0x4046: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
            case 0x4047: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
            case 0x4048: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[3], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
            case 0x4049: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
            case 0x404a: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[4], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
            case 0x404b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[4])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
            case 0x404c: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
            case 0x404d: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
            case 0x404e: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
            case 0x404f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
            case 0x40a3: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))))), new i8(0))))))];
            case 0x40a4: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))), (new Or((new Shl($0, new i8(new u8(b[i+5])))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+5]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x40a5: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x40ab: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), ($1 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u16(1), $1)), $0)))];
            case 0x40ac: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))), (new Or((new And(new u32(((((1 << (((b[i+5]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+5]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16) & 0xff) & 0x1f)), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+5])))))))];
            case 0x40ad: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($1 = new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(16))))), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
            case 0x40af: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))))))];
            case 0x801f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new FnCall('Nop', new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))];
            case 0x8040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[0], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[0])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8042: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[1], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8043: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[1])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8044: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[2], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8045: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8046: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8047: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8048: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[3], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x8049: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x804a: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[4], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x804b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[4])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x804c: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x804d: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x804e: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x804f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
            case 0x80a3: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), new i8(0))))))];
            case 0x80a4: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+8])))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x80a5: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x80ab: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), ($1 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u16(1), $1)), $0)))];
            case 0x80ac: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new And(new u32(((((1 << (((b[i+8]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16) & 0xff) & 0x1f)), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+8])))))))];
            case 0x80ad: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($1 = new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(16))))), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
            case 0x80af: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))))];
        }

        if((b[i] & 0xff) === 0xf)
        switch(((b[i+1] | ((b[i+2] << 8) & 0xffff)) & 0xffff) & 0xc0ff) {
            case 0x1f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new FnCall('Nop', new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0x40: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[0], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
            case 0x41: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[0])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
            case 0x42: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[1], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
            case 0x43: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[1])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
            case 0x44: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[2], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
            case 0x45: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
            case 0x46: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
            case 0x47: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
            case 0x48: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[3], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
            case 0x49: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
            case 0x4a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[4], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
            case 0x4b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[4])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
            case 0x4c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
            case 0x4d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
            case 0x4e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
            case 0x4f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
            case 0xa3: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))), new i8(0))))))];
            case 0xa4: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0xa5: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0xab: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), ($1 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u16(1), $1)), $0)))];
            case 0xac: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new And(new u32(((((1 << (((b[i+3]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16) & 0xff) & 0x1f)), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+3])))))))];
            case 0xad: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($1 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(16))))), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
            case 0xaf: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
            case 0x401f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new FnCall('Nop', new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))];
            case 0x4040: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[0], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
            case 0x4041: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[0])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
            case 0x4042: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[1], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
            case 0x4043: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[1])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
            case 0x4044: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[2], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
            case 0x4045: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
            case 0x4046: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
            case 0x4047: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
            case 0x4048: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[3], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
            case 0x4049: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
            case 0x404a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[4], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
            case 0x404b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[4])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
            case 0x404c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
            case 0x404d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
            case 0x404e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
            case 0x404f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
            case 0x40a3: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))), new i8(0))))))];
            case 0x40a4: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x40a5: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x40ab: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), ($1 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u16(1), $1)), $0)))];
            case 0x40ac: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new And(new u32(((((1 << (((b[i+4]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16) & 0xff) & 0x1f)), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+4])))))))];
            case 0x40ad: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($1 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(16))))), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
            case 0x40af: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
            case 0x801f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new FnCall('Nop', new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x8040: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[0], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
            case 0x8041: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[0])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
            case 0x8042: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[1], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
            case 0x8043: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[1])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
            case 0x8044: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[2], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
            case 0x8045: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
            case 0x8046: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
            case 0x8047: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
            case 0x8048: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[3], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
            case 0x8049: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
            case 0x804a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[4], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
            case 0x804b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[4])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
            case 0x804c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
            case 0x804d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
            case 0x804e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
            case 0x804f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
            case 0x80a3: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new i8(0))))))];
            case 0x80a4: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x80a5: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x80ab: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), ($1 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u16(1), $1)), $0)))];
            case 0x80ac: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new And(new u32(((((1 << (((b[i+7]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16) & 0xff) & 0x1f)), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+7])))))))];
            case 0x80ad: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($1 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(16))))), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
            case 0x80af: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0xc01f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new FnCall('Nop', R16[((((b[i+2] & 7) & 0xff)) & 0xff)])];
            case 0xc040: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[0], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R16[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0xc041: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[0])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R16[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0xc042: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[1], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R16[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0xc043: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[1])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R16[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0xc044: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[2], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R16[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0xc045: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R16[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0xc046: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R16[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0xc047: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R16[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0xc048: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[3], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R16[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0xc049: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R16[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0xc04a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[4], new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R16[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0xc04b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[4])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R16[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0xc04c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R16[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0xc04d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R16[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0xc04e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R16[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0xc04f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R16[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0xc0a3: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R16[((((b[i+2] & 7) & 0xff)) & 0xff)])), new i8(0))))))];
            case 0xc0a4: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((b[i+2] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0xc0a5: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((b[i+2] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0xc0ab: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u16(1), ($1 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = R16[((((b[i+2] & 7) & 0xff)) & 0xff)]))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u16(1), $1)), $0)))];
            case 0xc0ac: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((b[i+2] & 7) & 0xff)) & 0xff)]), (new Or((new And(new u32(((((1 << (((b[i+3]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16) & 0xff) & 0x1f)), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+3])))))))];
            case 0xc0ad: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($1 = R16[((((b[i+2] & 7) & 0xff)) & 0xff)]), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(16))))), R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
            case 0xc0af: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, R16[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        }

        if((((((b[i] | ((b[i+1] << 8) >>> 0)) >>> 0) | ((((b[i+2] & 63) >>> 0) << 16) >>> 0)) >>> 0) & 0x3f0781) === 0x250481)
        switch(((((((b[i] & 254) & 0xffff) >>> 1) & 0xffff) | ((b[i+1] << 7) & 0xffff)) & 0xffff) & 0x7c3f) {
            case 0x0: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add($0, new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x1: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add($0, new i8(new u8(b[i+7])))))];
            case 0x7: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
            case 0x20: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x23: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))];
            case 0x28: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x29: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x3b: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x3f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add($0, new u8(1))))];
            case 0x400: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or(new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))), $0)))];
            case 0x401: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or(new u16(new i8(new u8(b[i+7]))), $0)))];
            case 0x420: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x428: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x429: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x43f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add($0, new i16(-1))))];
            case 0x800: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add((new Add($0, new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))), R1[1])))];
            case 0x801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
            case 0x820: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x828: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x829: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x83b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Not($0)))];
            case 0x83f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 7)))), new Mov($1, new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))];
            case 0xc00: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add((new Add($0, new i16(-((((b[i+7] | ((b[i+8] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0xc01: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add((new Add($0, new i16(-((((b[i+7]) << 24 >> 24)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0xc20: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0xc28: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0xc29: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0xc3b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Neg($0)))];
            case 0x1000: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new And(new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))), $0)))];
            case 0x1001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new And(new u16(new i8(new u8(b[i+7]))), $0)))];
            case 0x1020: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shl($0, new i8(new u8(b[i+7])))))];
            case 0x1028: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shl($0, new u8(1))))];
            case 0x1029: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shl($0, R8[1])))];
            case 0x103b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x103f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[8], new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))];
            case 0x1400: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff)))))), new Mov($0, (new Add($0, new i16(-((((b[i+7] | ((b[i+8] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))))];
            case 0x1401: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), new i16(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+7])))))), new Mov($0, (new Add($0, new i16(-((((b[i+7]) << 24 >> 24)) << 16 >> 16)))))];
            case 0x1420: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shr(new u16($0), new i8(new u8(b[i+7])))))];
            case 0x1428: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shr(new u16($0), new u8(1))))];
            case 0x1429: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shr(new u16($0), R8[1])))];
            case 0x143b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x1800: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Xor($0, new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x1801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Xor($0, new i8(new u8(b[i+7])))))];
            case 0x1820: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shl($0, new i8(new u8(b[i+7])))))];
            case 0x1828: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shl($0, new u8(1))))];
            case 0x1829: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shl($0, R8[1])))];
            case 0x183b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x183f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))];
            case 0x1c00: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x1c01: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), new i16(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+7]))))))];
            case 0x1c20: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shr($0, new i8(new u8(b[i+7])))))];
            case 0x1c28: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shr($0, new u8(1))))];
            case 0x1c29: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shr($0, R8[1])))];
            case 0x1c3b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x2000: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Add($0, new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))))];
            case 0x2001: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Add($0, new i8(new u8(b[i+4])))))];
            case 0x2007: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))), new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
            case 0x2020: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2023: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))];
            case 0x2028: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x2029: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x203b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x203f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Add($0, new u8(1))))];
            case 0x2400: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Or(new u16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))), $0)))];
            case 0x2401: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Or(new u16(new i8(new u8(b[i+4]))), $0)))];
            case 0x2420: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2428: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x2429: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x243f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Add($0, new i16(-1))))];
            case 0x2800: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Add((new Add($0, new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))), R1[1])))];
            case 0x2801: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Add((new Add($0, new i8(new u8(b[i+4])))), R1[1])))];
            case 0x2820: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2828: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x2829: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x283b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Not($0)))];
            case 0x283f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 4)))), new Mov($1, new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))];
            case 0x2c00: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Add((new Add($0, new i16(-((((b[i+4] | ((b[i+5] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x2c01: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Add((new Add($0, new i16(-((((b[i+4]) << 24 >> 24)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x2c20: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2c28: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x2c29: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x2c3b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Neg($0)))];
            case 0x3000: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new And(new u16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))), $0)))];
            case 0x3001: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new And(new u16(new i8(new u8(b[i+4]))), $0)))];
            case 0x3020: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Shl($0, new i8(new u8(b[i+4])))))];
            case 0x3028: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Shl($0, new u8(1))))];
            case 0x3029: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Shl($0, R8[1])))];
            case 0x303b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))))];
            case 0x303f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[8], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))];
            case 0x3400: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff)))))), new Mov($0, (new Add($0, new i16(-((((b[i+4] | ((b[i+5] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))))];
            case 0x3401: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), new i16(new i8(new u8(b[i+4])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+4])))))), new Mov($0, (new Add($0, new i16(-((((b[i+4]) << 24 >> 24)) << 16 >> 16)))))];
            case 0x3420: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Shr(new u16($0), new i8(new u8(b[i+4])))))];
            case 0x3428: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Shr(new u16($0), new u8(1))))];
            case 0x3429: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Shr(new u16($0), R8[1])))];
            case 0x343b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))))];
            case 0x3800: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Xor($0, new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))))];
            case 0x3801: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Xor($0, new i8(new u8(b[i+4])))))];
            case 0x3820: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Shl($0, new i8(new u8(b[i+4])))))];
            case 0x3828: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Shl($0, new u8(1))))];
            case 0x3829: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Shl($0, R8[1])))];
            case 0x383b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))))];
            case 0x383f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))];
            case 0x3c00: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))))];
            case 0x3c01: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), new i16(new i8(new u8(b[i+4])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+4]))))))];
            case 0x3c20: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Shr($0, new i8(new u8(b[i+4])))))];
            case 0x3c28: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Shr($0, new u8(1))))];
            case 0x3c29: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Shr($0, R8[1])))];
            case 0x3c3b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))))];
            case 0x4000: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x4001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+7])))))];
            case 0x4007: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
            case 0x4020: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4023: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))];
            case 0x4028: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x4029: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x403b: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x403f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new u8(1))))];
            case 0x4400: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))), $0)))];
            case 0x4401: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u16(new i8(new u8(b[i+7]))), $0)))];
            case 0x4420: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4428: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x4429: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x443f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i16(-1))))];
            case 0x4800: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))), R1[1])))];
            case 0x4801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
            case 0x4820: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4828: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x4829: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x483b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Not($0)))];
            case 0x483f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 7)))), new Mov($1, new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x4c00: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i16(-((((b[i+7] | ((b[i+8] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x4c01: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i16(-((((b[i+7]) << 24 >> 24)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x4c20: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4c28: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x4c29: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x4c3b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Neg($0)))];
            case 0x5000: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))), $0)))];
            case 0x5001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u16(new i8(new u8(b[i+7]))), $0)))];
            case 0x5020: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
            case 0x5028: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
            case 0x5029: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
            case 0x503b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x503f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[8], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x5400: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff)))))), new Mov($0, (new Add($0, new i16(-((((b[i+7] | ((b[i+8] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))))];
            case 0x5401: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i16(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+7])))))), new Mov($0, (new Add($0, new i16(-((((b[i+7]) << 24 >> 24)) << 16 >> 16)))))];
            case 0x5420: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u16($0), new i8(new u8(b[i+7])))))];
            case 0x5428: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u16($0), new u8(1))))];
            case 0x5429: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u16($0), R8[1])))];
            case 0x543b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x5800: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x5801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
            case 0x5820: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
            case 0x5828: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
            case 0x5829: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
            case 0x583b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x583f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x5c00: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x5c01: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i16(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+7]))))))];
            case 0x5c20: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new i8(new u8(b[i+7])))))];
            case 0x5c28: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new u8(1))))];
            case 0x5c29: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, R8[1])))];
            case 0x5c3b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        }

        if((((b[i+1] | ((((b[i+2] & 63) & 0xffff) << 8) & 0xffff)) & 0xffff) & 0x3f07) === 0x2504)
        switch(((b[i] | ((b[i+1] << 8) & 0xffff)) & 0xffff) & 0xc0ff) {
            case 0x1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x3: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x9: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0xb: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x11: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add((new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
            case 0x13: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R1[1])))];
            case 0x19: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add((new Add($0, (new Neg(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i16(R1[1]))))))];
            case 0x1b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), (new Neg(new i16(R1[1]))))))];
            case 0x21: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new And($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x23: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x29: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x2b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x31: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Xor($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x33: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x39: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x3b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x69: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x6b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new i32(new i8(new u8(b[i+7]))), new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x85: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x87: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($2 = (new Register16)), ($0 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mov($0, ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
            case 0x89: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
            case 0x8b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))];
            case 0x8c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
            case 0x4001: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x4003: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))))];
            case 0x4009: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Or($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x400b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))))];
            case 0x4011: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Add((new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
            case 0x4013: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))), R1[1])))];
            case 0x4019: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Add((new Add($0, (new Neg(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i16(R1[1]))))))];
            case 0x401b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))))), (new Neg(new i16(R1[1]))))))];
            case 0x4021: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new And($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x4023: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))))];
            case 0x4029: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x402b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x4031: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), (new Xor($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x4033: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))))];
            case 0x4039: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x403b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x4069: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))))];
            case 0x406b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new i32(new i8(new u8(b[i+4]))), new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))))];
            case 0x4085: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x4087: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($2 = (new Register16)), ($0 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))), new Mov($0, ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
            case 0x4089: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
            case 0x408b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))];
            case 0x408c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
            case 0x8001: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x8003: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x8009: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x800b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x8011: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
            case 0x8013: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R1[1])))];
            case 0x8019: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, (new Neg(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i16(R1[1]))))))];
            case 0x801b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), (new Neg(new i16(R1[1]))))))];
            case 0x8021: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x8023: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x8029: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x802b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x8031: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x8033: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x8039: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x803b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x8069: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x806b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new i32(new i8(new u8(b[i+7]))), new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x8085: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x8087: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($2 = (new Register16)), ($0 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov($0, ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
            case 0x8089: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
            case 0x808b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x808c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        }

        if((((((b[i] | ((b[i+1] << 8) >>> 0)) >>> 0) | ((((b[i+2] & 63) >>> 0) << 16) >>> 0)) >>> 0) & 0x380781) === 0x200481)
        switch(((((((b[i] & 254) & 0xffff) >>> 1) & 0xffff) | ((b[i+1] << 7) & 0xffff)) & 0xffff) & 0x7c3f) {
            case 0x0: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add($0, new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))))];
            case 0x1: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add($0, new i8(new u8(b[i+3])))))];
            case 0x7: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
            case 0x20: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x23: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))];
            case 0x28: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x29: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x3b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x3f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add($0, new u8(1))))];
            case 0x400: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or(new u16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))), $0)))];
            case 0x401: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or(new u16(new i8(new u8(b[i+3]))), $0)))];
            case 0x420: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new i8(new u8(b[i+3])))), (new Shl($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x428: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x429: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x43f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add($0, new i16(-1))))];
            case 0x800: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))), R1[1])))];
            case 0x801: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i8(new u8(b[i+3])))), R1[1])))];
            case 0x820: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x828: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x829: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x83b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Not($0)))];
            case 0x83f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 3)))), new Mov($1, new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0xc00: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i16(-((((b[i+3] | ((b[i+4] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0xc01: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i16(-((((b[i+3]) << 24 >> 24)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0xc20: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new i8(new u8(b[i+3])))), (new Shl($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0xc28: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0xc29: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0xc3b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Neg($0)))];
            case 0x1000: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new And(new u16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))), $0)))];
            case 0x1001: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new And(new u16(new i8(new u8(b[i+3]))), $0)))];
            case 0x1020: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shl($0, new i8(new u8(b[i+3])))))];
            case 0x1028: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shl($0, new u8(1))))];
            case 0x1029: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shl($0, R8[1])))];
            case 0x103b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
            case 0x103f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[8], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0x1400: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff)))))), new Mov($0, (new Add($0, new i16(-((((b[i+3] | ((b[i+4] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))))];
            case 0x1401: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), new i16(new i8(new u8(b[i+3])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+3])))))), new Mov($0, (new Add($0, new i16(-((((b[i+3]) << 24 >> 24)) << 16 >> 16)))))];
            case 0x1420: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shr(new u16($0), new i8(new u8(b[i+3])))))];
            case 0x1428: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shr(new u16($0), new u8(1))))];
            case 0x1429: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shr(new u16($0), R8[1])))];
            case 0x143b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
            case 0x1800: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Xor($0, new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))))];
            case 0x1801: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Xor($0, new i8(new u8(b[i+3])))))];
            case 0x1820: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shl($0, new i8(new u8(b[i+3])))))];
            case 0x1828: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shl($0, new u8(1))))];
            case 0x1829: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shl($0, R8[1])))];
            case 0x183b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
            case 0x183f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0x1c00: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))))];
            case 0x1c01: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), new i16(new i8(new u8(b[i+3])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+3]))))))];
            case 0x1c20: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+3])))))];
            case 0x1c28: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shr($0, new u8(1))))];
            case 0x1c29: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shr($0, R8[1])))];
            case 0x1c3b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
            case 0x2000: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add($0, new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))))];
            case 0x2001: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add($0, new i8(new u8(b[i+4])))))];
            case 0x2007: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
            case 0x2020: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2023: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))];
            case 0x2028: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x2029: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x203b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x203f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add($0, new u8(1))))];
            case 0x2400: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or(new u16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))), $0)))];
            case 0x2401: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or(new u16(new i8(new u8(b[i+4]))), $0)))];
            case 0x2420: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2428: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x2429: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x243f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add($0, new i16(-1))))];
            case 0x2800: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))), R1[1])))];
            case 0x2801: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i8(new u8(b[i+4])))), R1[1])))];
            case 0x2820: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2828: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x2829: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x283b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Not($0)))];
            case 0x283f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 4)))), new Mov($1, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))];
            case 0x2c00: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i16(-((((b[i+4] | ((b[i+5] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x2c01: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i16(-((((b[i+4]) << 24 >> 24)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x2c20: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2c28: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x2c29: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x2c3b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Neg($0)))];
            case 0x3000: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new And(new u16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))), $0)))];
            case 0x3001: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new And(new u16(new i8(new u8(b[i+4]))), $0)))];
            case 0x3020: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shl($0, new i8(new u8(b[i+4])))))];
            case 0x3028: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shl($0, new u8(1))))];
            case 0x3029: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shl($0, R8[1])))];
            case 0x303b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
            case 0x303f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[8], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))];
            case 0x3400: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff)))))), new Mov($0, (new Add($0, new i16(-((((b[i+4] | ((b[i+5] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))))];
            case 0x3401: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), new i16(new i8(new u8(b[i+4])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+4])))))), new Mov($0, (new Add($0, new i16(-((((b[i+4]) << 24 >> 24)) << 16 >> 16)))))];
            case 0x3420: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shr(new u16($0), new i8(new u8(b[i+4])))))];
            case 0x3428: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shr(new u16($0), new u8(1))))];
            case 0x3429: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shr(new u16($0), R8[1])))];
            case 0x343b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
            case 0x3800: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Xor($0, new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))))];
            case 0x3801: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Xor($0, new i8(new u8(b[i+4])))))];
            case 0x3820: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shl($0, new i8(new u8(b[i+4])))))];
            case 0x3828: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shl($0, new u8(1))))];
            case 0x3829: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shl($0, R8[1])))];
            case 0x383b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
            case 0x383f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))];
            case 0x3c00: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))))];
            case 0x3c01: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), new i16(new i8(new u8(b[i+4])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+4]))))))];
            case 0x3c20: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shr($0, new i8(new u8(b[i+4])))))];
            case 0x3c28: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shr($0, new u8(1))))];
            case 0x3c29: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shr($0, R8[1])))];
            case 0x3c3b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
            case 0x4000: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x4001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+7])))))];
            case 0x4007: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
            case 0x4020: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4023: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))];
            case 0x4028: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x4029: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x403b: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x403f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new u8(1))))];
            case 0x4400: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))), $0)))];
            case 0x4401: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u16(new i8(new u8(b[i+7]))), $0)))];
            case 0x4420: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4428: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x4429: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x443f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i16(-1))))];
            case 0x4800: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))), R1[1])))];
            case 0x4801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
            case 0x4820: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4828: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x4829: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x483b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Not($0)))];
            case 0x483f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 7)))), new Mov($1, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x4c00: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i16(-((((b[i+7] | ((b[i+8] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x4c01: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i16(-((((b[i+7]) << 24 >> 24)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x4c20: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4c28: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x4c29: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x4c3b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Neg($0)))];
            case 0x5000: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))), $0)))];
            case 0x5001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u16(new i8(new u8(b[i+7]))), $0)))];
            case 0x5020: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
            case 0x5028: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
            case 0x5029: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
            case 0x503b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x503f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[8], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x5400: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff)))))), new Mov($0, (new Add($0, new i16(-((((b[i+7] | ((b[i+8] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))))];
            case 0x5401: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i16(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+7])))))), new Mov($0, (new Add($0, new i16(-((((b[i+7]) << 24 >> 24)) << 16 >> 16)))))];
            case 0x5420: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u16($0), new i8(new u8(b[i+7])))))];
            case 0x5428: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u16($0), new u8(1))))];
            case 0x5429: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u16($0), R8[1])))];
            case 0x543b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x5800: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x5801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
            case 0x5820: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
            case 0x5828: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
            case 0x5829: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
            case 0x583b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x583f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x5c00: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x5c01: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i16(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+7]))))))];
            case 0x5c20: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new i8(new u8(b[i+7])))))];
            case 0x5c28: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new u8(1))))];
            case 0x5c29: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, R8[1])))];
            case 0x5c3b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        }

        if((((b[i+1] | ((((b[i+2] & 63) & 0xffff) << 8) & 0xffff)) & 0xffff) & 0x3807) === 0x2004)
        switch(((b[i] | ((b[i+1] << 8) & 0xffff)) & 0xffff) & 0xc0ff) {
            case 0x1: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x3: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
            case 0x9: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0xb: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
            case 0x11: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
            case 0x13: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))), R1[1])))];
            case 0x19: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, (new Neg(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i16(R1[1]))))))];
            case 0x1b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))), (new Neg(new i16(R1[1]))))))];
            case 0x21: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new And($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x23: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
            case 0x29: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x2b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x31: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Xor($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x33: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
            case 0x39: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x3b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x69: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))))];
            case 0x6b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new i32(new i8(new u8(b[i+3]))), new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
            case 0x85: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x87: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($2 = (new Register16)), ($0 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))), new Mov($0, ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
            case 0x89: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
            case 0x8b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
            case 0x8c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
            case 0x4001: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x4003: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
            case 0x4009: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x400b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
            case 0x4011: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add((new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
            case 0x4013: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))), R1[1])))];
            case 0x4019: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add((new Add($0, (new Neg(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i16(R1[1]))))))];
            case 0x401b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))), (new Neg(new i16(R1[1]))))))];
            case 0x4021: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new And($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x4023: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
            case 0x4029: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x402b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x4031: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Xor($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x4033: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
            case 0x4039: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x403b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x4069: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))))];
            case 0x406b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new i32(new i8(new u8(b[i+4]))), new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
            case 0x4085: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x4087: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($2 = (new Register16)), ($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))), new Mov($0, ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
            case 0x4089: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
            case 0x408b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))];
            case 0x408c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
            case 0x8001: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x8003: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x8009: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x800b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x8011: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
            case 0x8013: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R1[1])))];
            case 0x8019: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, (new Neg(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i16(R1[1]))))))];
            case 0x801b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), (new Neg(new i16(R1[1]))))))];
            case 0x8021: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x8023: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x8029: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x802b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x8031: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x8033: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x8039: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x803b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x8069: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x806b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new i32(new i8(new u8(b[i+7]))), new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x8085: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x8087: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($2 = (new Register16)), ($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov($0, ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
            case 0x8089: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
            case 0x808b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x808c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        }

        if((((((b[i] | ((b[i+1] << 8) >>> 0)) >>> 0) | ((((b[i+2] & 7) >>> 0) << 16) >>> 0)) >>> 0) & 0x70781) === 0x50481)
        switch(((((((b[i] & 254) & 0xffff) >>> 1) & 0xffff) | ((b[i+1] << 7) & 0xffff)) & 0xffff) & 0x7c3f) {
            case 0x0: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x1: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+7])))))];
            case 0x7: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
            case 0x20: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x23: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))];
            case 0x28: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x29: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x3b: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x3f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new u8(1))))];
            case 0x400: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))), $0)))];
            case 0x401: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u16(new i8(new u8(b[i+7]))), $0)))];
            case 0x420: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x428: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x429: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x43f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i16(-1))))];
            case 0x800: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))), R1[1])))];
            case 0x801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
            case 0x820: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x828: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x829: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x83b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Not($0)))];
            case 0x83f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 7)))), new Mov($1, new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0xc00: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i16(-((((b[i+7] | ((b[i+8] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0xc01: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i16(-((((b[i+7]) << 24 >> 24)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0xc20: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0xc28: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0xc29: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0xc3b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Neg($0)))];
            case 0x1000: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))), $0)))];
            case 0x1001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u16(new i8(new u8(b[i+7]))), $0)))];
            case 0x1020: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
            case 0x1028: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
            case 0x1029: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
            case 0x103b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x103f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[8], new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x1400: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff)))))), new Mov($0, (new Add($0, new i16(-((((b[i+7] | ((b[i+8] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))))];
            case 0x1401: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i16(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+7])))))), new Mov($0, (new Add($0, new i16(-((((b[i+7]) << 24 >> 24)) << 16 >> 16)))))];
            case 0x1420: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u16($0), new i8(new u8(b[i+7])))))];
            case 0x1428: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u16($0), new u8(1))))];
            case 0x1429: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u16($0), R8[1])))];
            case 0x143b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x1800: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x1801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
            case 0x1820: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
            case 0x1828: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
            case 0x1829: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
            case 0x183b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x183f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x1c00: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x1c01: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i16(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+7]))))))];
            case 0x1c20: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new i8(new u8(b[i+7])))))];
            case 0x1c28: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new u8(1))))];
            case 0x1c29: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, R8[1])))];
            case 0x1c3b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x2000: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add($0, new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))))];
            case 0x2001: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add($0, new i8(new u8(b[i+4])))))];
            case 0x2007: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
            case 0x2020: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2023: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))];
            case 0x2028: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x2029: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x203b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x203f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add($0, new u8(1))))];
            case 0x2400: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or(new u16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))), $0)))];
            case 0x2401: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or(new u16(new i8(new u8(b[i+4]))), $0)))];
            case 0x2420: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2428: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x2429: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x243f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add($0, new i16(-1))))];
            case 0x2800: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add((new Add($0, new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))), R1[1])))];
            case 0x2801: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add((new Add($0, new i8(new u8(b[i+4])))), R1[1])))];
            case 0x2820: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2828: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x2829: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x283b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Not($0)))];
            case 0x283f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 4)))), new Mov($1, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))];
            case 0x2c00: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add((new Add($0, new i16(-((((b[i+4] | ((b[i+5] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x2c01: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add((new Add($0, new i16(-((((b[i+4]) << 24 >> 24)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x2c20: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2c28: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x2c29: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x2c3b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Neg($0)))];
            case 0x3000: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new And(new u16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))), $0)))];
            case 0x3001: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new And(new u16(new i8(new u8(b[i+4]))), $0)))];
            case 0x3020: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shl($0, new i8(new u8(b[i+4])))))];
            case 0x3028: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shl($0, new u8(1))))];
            case 0x3029: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shl($0, R8[1])))];
            case 0x303b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
            case 0x303f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[8], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))];
            case 0x3400: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff)))))), new Mov($0, (new Add($0, new i16(-((((b[i+4] | ((b[i+5] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))))];
            case 0x3401: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), new i16(new i8(new u8(b[i+4])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+4])))))), new Mov($0, (new Add($0, new i16(-((((b[i+4]) << 24 >> 24)) << 16 >> 16)))))];
            case 0x3420: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shr(new u16($0), new i8(new u8(b[i+4])))))];
            case 0x3428: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shr(new u16($0), new u8(1))))];
            case 0x3429: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shr(new u16($0), R8[1])))];
            case 0x343b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
            case 0x3800: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Xor($0, new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))))];
            case 0x3801: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Xor($0, new i8(new u8(b[i+4])))))];
            case 0x3820: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shl($0, new i8(new u8(b[i+4])))))];
            case 0x3828: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shl($0, new u8(1))))];
            case 0x3829: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shl($0, R8[1])))];
            case 0x383b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
            case 0x383f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))];
            case 0x3c00: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))))];
            case 0x3c01: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), new i16(new i8(new u8(b[i+4])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+4]))))))];
            case 0x3c20: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shr($0, new i8(new u8(b[i+4])))))];
            case 0x3c28: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shr($0, new u8(1))))];
            case 0x3c29: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shr($0, R8[1])))];
            case 0x3c3b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
            case 0x4000: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add($0, new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x4001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add($0, new i8(new u8(b[i+7])))))];
            case 0x4007: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
            case 0x4020: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4023: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))];
            case 0x4028: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x4029: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x403b: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x403f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add($0, new u8(1))))];
            case 0x4400: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or(new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))), $0)))];
            case 0x4401: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or(new u16(new i8(new u8(b[i+7]))), $0)))];
            case 0x4420: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4428: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x4429: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x443f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add($0, new i16(-1))))];
            case 0x4800: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add((new Add($0, new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))), R1[1])))];
            case 0x4801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
            case 0x4820: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4828: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x4829: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x483b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Not($0)))];
            case 0x483f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 7)))), new Mov($1, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x4c00: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add((new Add($0, new i16(-((((b[i+7] | ((b[i+8] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x4c01: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add((new Add($0, new i16(-((((b[i+7]) << 24 >> 24)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x4c20: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4c28: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x4c29: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x4c3b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Neg($0)))];
            case 0x5000: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new And(new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))), $0)))];
            case 0x5001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new And(new u16(new i8(new u8(b[i+7]))), $0)))];
            case 0x5020: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
            case 0x5028: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shl($0, new u8(1))))];
            case 0x5029: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shl($0, R8[1])))];
            case 0x503b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
            case 0x503f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[8], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x5400: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff)))))), new Mov($0, (new Add($0, new i16(-((((b[i+7] | ((b[i+8] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))))];
            case 0x5401: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), new i16(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+7])))))), new Mov($0, (new Add($0, new i16(-((((b[i+7]) << 24 >> 24)) << 16 >> 16)))))];
            case 0x5420: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shr(new u16($0), new i8(new u8(b[i+7])))))];
            case 0x5428: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shr(new u16($0), new u8(1))))];
            case 0x5429: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shr(new u16($0), R8[1])))];
            case 0x543b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
            case 0x5800: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Xor($0, new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x5801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
            case 0x5820: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
            case 0x5828: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shl($0, new u8(1))))];
            case 0x5829: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shl($0, R8[1])))];
            case 0x583b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
            case 0x583f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x5c00: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x5c01: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), new i16(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+7]))))))];
            case 0x5c20: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shr($0, new i8(new u8(b[i+7])))))];
            case 0x5c28: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shr($0, new u8(1))))];
            case 0x5c29: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shr($0, R8[1])))];
            case 0x5c3b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        }

        if((((b[i+1] | ((((b[i+2] & 7) & 0xffff) << 8) & 0xffff)) & 0xffff) & 0x707) === 0x504)
        switch(((b[i] | ((b[i+1] << 8) & 0xffff)) & 0xffff) & 0xc0ff) {
            case 0x1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x3: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x9: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0xb: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x11: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
            case 0x13: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R1[1])))];
            case 0x19: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, (new Neg(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i16(R1[1]))))))];
            case 0x1b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), (new Neg(new i16(R1[1]))))))];
            case 0x21: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x23: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x29: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x2b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x31: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x33: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x39: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x3b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x69: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x6b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new i32(new i8(new u8(b[i+7]))), new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x85: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x87: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($2 = (new Register16)), ($0 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov($0, ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
            case 0x89: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
            case 0x8b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x8c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
            case 0x4001: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x4003: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
            case 0x4009: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x400b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
            case 0x4011: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add((new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
            case 0x4013: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))), R1[1])))];
            case 0x4019: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add((new Add($0, (new Neg(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i16(R1[1]))))))];
            case 0x401b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))), (new Neg(new i16(R1[1]))))))];
            case 0x4021: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new And($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x4023: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
            case 0x4029: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x402b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x4031: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Xor($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x4033: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
            case 0x4039: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x403b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x4069: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))))];
            case 0x406b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new i32(new i8(new u8(b[i+4]))), new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
            case 0x4085: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x4087: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($2 = (new Register16)), ($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))), new Mov($0, ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
            case 0x4089: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
            case 0x408b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))];
            case 0x408c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
            case 0x8001: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x8003: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
            case 0x8009: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x800b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
            case 0x8011: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add((new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
            case 0x8013: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), R1[1])))];
            case 0x8019: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add((new Add($0, (new Neg(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i16(R1[1]))))))];
            case 0x801b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))), (new Neg(new i16(R1[1]))))))];
            case 0x8021: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new And($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x8023: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
            case 0x8029: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x802b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x8031: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Xor($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x8033: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
            case 0x8039: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x803b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x8069: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x806b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new i32(new i8(new u8(b[i+7]))), new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
            case 0x8085: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x8087: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($2 = (new Register16)), ($0 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov($0, ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
            case 0x8089: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
            case 0x808b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x808c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        }

        if((((b[i] & 1) & 0xff) & 0x1) === 0x1)
        switch(((((((b[i] & 254) & 0xffff) >>> 1) & 0xffff) | ((b[i+1] << 7) & 0xffff)) & 0xffff) & 0x7fff) {
            case 0x240: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add($0, new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))))];
            case 0x241: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add($0, new i8(new u8(b[i+3])))))];
            case 0x247: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
            case 0x260: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x263: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))];
            case 0x268: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x269: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x27b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x27f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add($0, new u8(1))))];
            case 0x2c0: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add($0, new i16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff))))))];
            case 0x2c1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add($0, new i8(new u8(b[i+6])))))];
            case 0x2c7: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
            case 0x2e0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shl($0, new i8(new u8(b[i+6])))), (new Shr($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2e3: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), new i16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff))))];
            case 0x2e8: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x2e9: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x2fb: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), new i16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff))))), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x2ff: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add($0, new u8(1))))];
            case 0x640: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or(new u16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))), $0)))];
            case 0x641: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or(new u16(new i8(new u8(b[i+3]))), $0)))];
            case 0x660: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shr($0, new i8(new u8(b[i+3])))), (new Shl($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x668: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x669: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x67f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add($0, new i16(-1))))];
            case 0x6c0: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or(new u16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff))), $0)))];
            case 0x6c1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or(new u16(new i8(new u8(b[i+6]))), $0)))];
            case 0x6e0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shr($0, new i8(new u8(b[i+6])))), (new Shl($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x6e8: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x6e9: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x6ff: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add($0, new i16(-1))))];
            case 0xa40: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add((new Add($0, new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))), R1[1])))];
            case 0xa41: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add((new Add($0, new i8(new u8(b[i+3])))), R1[1])))];
            case 0xa60: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0xa68: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0xa69: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0xa7b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Not($0)))];
            case 0xa7f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 3)))), new Mov($1, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))];
            case 0xac0: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add((new Add($0, new i16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff))))), R1[1])))];
            case 0xac1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add((new Add($0, new i8(new u8(b[i+6])))), R1[1])))];
            case 0xae0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shl($0, new i8(new u8(b[i+6])))), (new Shr($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0xae8: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0xae9: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0xafb: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Not($0)))];
            case 0xaff: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 6)))), new Mov($1, new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))];
            case 0xe40: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add((new Add($0, new i16(-((((b[i+3] | ((b[i+4] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0xe41: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add((new Add($0, new i16(-((((b[i+3]) << 24 >> 24)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0xe60: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shr($0, new i8(new u8(b[i+3])))), (new Shl($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0xe68: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0xe69: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0xe7b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Neg($0)))];
            case 0xec0: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add((new Add($0, new i16(-((((b[i+6] | ((b[i+7] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0xec1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add((new Add($0, new i16(-((((b[i+6]) << 24 >> 24)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0xee0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shr($0, new i8(new u8(b[i+6])))), (new Shl($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0xee8: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0xee9: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0xefb: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Neg($0)))];
            case 0x1240: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new And(new u16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))), $0)))];
            case 0x1241: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new And(new u16(new i8(new u8(b[i+3]))), $0)))];
            case 0x1260: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shl($0, new i8(new u8(b[i+3])))))];
            case 0x1268: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shl($0, new u8(1))))];
            case 0x1269: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shl($0, R8[1])))];
            case 0x127b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
            case 0x127f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[8], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))];
            case 0x12c0: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new And(new u16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff))), $0)))];
            case 0x12c1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new And(new u16(new i8(new u8(b[i+6]))), $0)))];
            case 0x12e0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shl($0, new i8(new u8(b[i+6])))))];
            case 0x12e8: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shl($0, new u8(1))))];
            case 0x12e9: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shl($0, R8[1])))];
            case 0x12fb: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
            case 0x12ff: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R32[8], new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))];
            case 0x1640: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff)))))), new Mov($0, (new Add($0, new i16(-((((b[i+3] | ((b[i+4] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))))];
            case 0x1641: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), new i16(new i8(new u8(b[i+3])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+3])))))), new Mov($0, (new Add($0, new i16(-((((b[i+3]) << 24 >> 24)) << 16 >> 16)))))];
            case 0x1660: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shr(new u16($0), new i8(new u8(b[i+3])))))];
            case 0x1668: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shr(new u16($0), new u8(1))))];
            case 0x1669: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shr(new u16($0), R8[1])))];
            case 0x167b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
            case 0x16c0: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), new i16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff)))))), new Mov($0, (new Add($0, new i16(-((((b[i+6] | ((b[i+7] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))))];
            case 0x16c1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), new i16(new i8(new u8(b[i+6])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+6])))))), new Mov($0, (new Add($0, new i16(-((((b[i+6]) << 24 >> 24)) << 16 >> 16)))))];
            case 0x16e0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shr(new u16($0), new i8(new u8(b[i+6])))))];
            case 0x16e8: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shr(new u16($0), new u8(1))))];
            case 0x16e9: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shr(new u16($0), R8[1])))];
            case 0x16fb: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
            case 0x1a40: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Xor($0, new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))))];
            case 0x1a41: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Xor($0, new i8(new u8(b[i+3])))))];
            case 0x1a60: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shl($0, new i8(new u8(b[i+3])))))];
            case 0x1a68: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shl($0, new u8(1))))];
            case 0x1a69: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shl($0, R8[1])))];
            case 0x1a7b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
            case 0x1a7f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))];
            case 0x1ac0: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Xor($0, new i16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff))))))];
            case 0x1ac1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Xor($0, new i8(new u8(b[i+6])))))];
            case 0x1ae0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shl($0, new i8(new u8(b[i+6])))))];
            case 0x1ae8: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shl($0, new u8(1))))];
            case 0x1ae9: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shl($0, R8[1])))];
            case 0x1afb: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
            case 0x1aff: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))];
            case 0x1e40: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))))];
            case 0x1e41: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), new i16(new i8(new u8(b[i+3])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+3]))))))];
            case 0x1e60: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shr($0, new i8(new u8(b[i+3])))))];
            case 0x1e68: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shr($0, new u8(1))))];
            case 0x1e69: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shr($0, R8[1])))];
            case 0x1e7b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
            case 0x1ec0: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), new i16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff))))))];
            case 0x1ec1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), new i16(new i8(new u8(b[i+6])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+6]))))))];
            case 0x1ee0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shr($0, new i8(new u8(b[i+6])))))];
            case 0x1ee8: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shr($0, new u8(1))))];
            case 0x1ee9: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shr($0, R8[1])))];
            case 0x1efb: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
            case 0x2240: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add($0, new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))))];
            case 0x2241: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add($0, new i8(new u8(b[i+4])))))];
            case 0x2247: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
            case 0x2260: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2263: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))];
            case 0x2268: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x2269: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x227b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x227f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add($0, new u8(1))))];
            case 0x2640: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or(new u16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))), $0)))];
            case 0x2641: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or(new u16(new i8(new u8(b[i+4]))), $0)))];
            case 0x2660: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2668: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x2669: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x267f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add($0, new i16(-1))))];
            case 0x2a40: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))), R1[1])))];
            case 0x2a41: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i8(new u8(b[i+4])))), R1[1])))];
            case 0x2a60: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2a68: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x2a69: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x2a7b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Not($0)))];
            case 0x2a7f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 4)))), new Mov($1, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))];
            case 0x2e40: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i16(-((((b[i+4] | ((b[i+5] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x2e41: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i16(-((((b[i+4]) << 24 >> 24)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x2e60: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2e68: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x2e69: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x2e7b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Neg($0)))];
            case 0x3240: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new And(new u16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))), $0)))];
            case 0x3241: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new And(new u16(new i8(new u8(b[i+4]))), $0)))];
            case 0x3260: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shl($0, new i8(new u8(b[i+4])))))];
            case 0x3268: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shl($0, new u8(1))))];
            case 0x3269: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shl($0, R8[1])))];
            case 0x327b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
            case 0x327f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[8], new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))];
            case 0x3640: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff)))))), new Mov($0, (new Add($0, new i16(-((((b[i+4] | ((b[i+5] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))))];
            case 0x3641: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), new i16(new i8(new u8(b[i+4])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+4])))))), new Mov($0, (new Add($0, new i16(-((((b[i+4]) << 24 >> 24)) << 16 >> 16)))))];
            case 0x3660: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shr(new u16($0), new i8(new u8(b[i+4])))))];
            case 0x3668: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shr(new u16($0), new u8(1))))];
            case 0x3669: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shr(new u16($0), R8[1])))];
            case 0x367b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
            case 0x3a40: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Xor($0, new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))))];
            case 0x3a41: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Xor($0, new i8(new u8(b[i+4])))))];
            case 0x3a60: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shl($0, new i8(new u8(b[i+4])))))];
            case 0x3a68: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shl($0, new u8(1))))];
            case 0x3a69: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shl($0, R8[1])))];
            case 0x3a7b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
            case 0x3a7f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))];
            case 0x3e40: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))))];
            case 0x3e41: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), new i16(new i8(new u8(b[i+4])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+4]))))))];
            case 0x3e60: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shr($0, new i8(new u8(b[i+4])))))];
            case 0x3e68: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shr($0, new u8(1))))];
            case 0x3e69: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shr($0, R8[1])))];
            case 0x3e7b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
            case 0x4240: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x4241: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+7])))))];
            case 0x4247: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
            case 0x4260: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4263: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))];
            case 0x4268: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x4269: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x427b: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x427f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new u8(1))))];
            case 0x4640: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))), $0)))];
            case 0x4641: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u16(new i8(new u8(b[i+7]))), $0)))];
            case 0x4660: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4668: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x4669: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x467f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i16(-1))))];
            case 0x4a40: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))), R1[1])))];
            case 0x4a41: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
            case 0x4a60: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4a68: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x4a69: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x4a7b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Not($0)))];
            case 0x4a7f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 7)))), new Mov($1, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x4e40: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i16(-((((b[i+7] | ((b[i+8] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x4e41: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i16(-((((b[i+7]) << 24 >> 24)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x4e60: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4e68: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x4e69: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x4e7b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Neg($0)))];
            case 0x5240: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))), $0)))];
            case 0x5241: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u16(new i8(new u8(b[i+7]))), $0)))];
            case 0x5260: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
            case 0x5268: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
            case 0x5269: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
            case 0x527b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x527f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[8], new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x5640: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff)))))), new Mov($0, (new Add($0, new i16(-((((b[i+7] | ((b[i+8] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))))];
            case 0x5641: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i16(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+7])))))), new Mov($0, (new Add($0, new i16(-((((b[i+7]) << 24 >> 24)) << 16 >> 16)))))];
            case 0x5660: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u16($0), new i8(new u8(b[i+7])))))];
            case 0x5668: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u16($0), new u8(1))))];
            case 0x5669: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u16($0), R8[1])))];
            case 0x567b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x5a40: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x5a41: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
            case 0x5a60: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
            case 0x5a68: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
            case 0x5a69: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
            case 0x5a7b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x5a7f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x5e40: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x5e41: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i16(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+7]))))))];
            case 0x5e60: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new i8(new u8(b[i+7])))))];
            case 0x5e68: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new u8(1))))];
            case 0x5e69: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, R8[1])))];
            case 0x5e7b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x6407: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[0]), (new Or((new Or((new Or((new And(new u32((new Shr($0, new u8(8)))), new u32(65280))), (new Shr($0, new u8(24))))), (new And(new u32((new Shl($0, new u8(8)))), new u32(0xff000))))), (new Shl($0, new u8(24))))))];
            case 0x6487: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[1]), (new Or((new Or((new Or((new And(new u32((new Shr($0, new u8(8)))), new u32(65280))), (new Shr($0, new u8(24))))), (new And(new u32((new Shl($0, new u8(8)))), new u32(0xff000))))), (new Shl($0, new u8(24))))))];
            case 0x6507: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[2]), (new Or((new Or((new Or((new And(new u32((new Shr($0, new u8(8)))), new u32(65280))), (new Shr($0, new u8(24))))), (new And(new u32((new Shl($0, new u8(8)))), new u32(0xff000))))), (new Shl($0, new u8(24))))))];
            case 0x6587: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[3]), (new Or((new Or((new Or((new And(new u32((new Shr($0, new u8(8)))), new u32(65280))), (new Shr($0, new u8(24))))), (new And(new u32((new Shl($0, new u8(8)))), new u32(0xff000))))), (new Shl($0, new u8(24))))))];
            case 0x6607: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[4]), (new Or((new Or((new Or((new And(new u32((new Shr($0, new u8(8)))), new u32(65280))), (new Shr($0, new u8(24))))), (new And(new u32((new Shl($0, new u8(8)))), new u32(0xff000))))), (new Shl($0, new u8(24))))))];
            case 0x6687: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[5]), (new Or((new Or((new Or((new And(new u32((new Shr($0, new u8(8)))), new u32(65280))), (new Shr($0, new u8(24))))), (new And(new u32((new Shl($0, new u8(8)))), new u32(0xff000))))), (new Shl($0, new u8(24))))))];
            case 0x6707: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[6]), (new Or((new Or((new Or((new And(new u32((new Shr($0, new u8(8)))), new u32(65280))), (new Shr($0, new u8(24))))), (new And(new u32((new Shl($0, new u8(8)))), new u32(0xff000))))), (new Shl($0, new u8(24))))))];
            case 0x6787: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[7]), (new Or((new Or((new Or((new And(new u32((new Shr($0, new u8(8)))), new u32(65280))), (new Shr($0, new u8(24))))), (new And(new u32((new Shl($0, new u8(8)))), new u32(0xff000))))), (new Shl($0, new u8(24))))))];
        }

        if((b[i] & 0x81) === 0x81)
        switch(((((((b[i] & 254) & 0xffff) >>> 1) & 0xffff) | ((b[i+1] << 7) & 0xffff)) & 0xffff) & 0x7c3f) {
            case 0x0: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add($0, new i16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff))))))];
            case 0x1: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add($0, new i8(new u8(b[i+2])))))];
            case 0x7: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
            case 0x20: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new i8(new u8(b[i+2])))), (new Shr($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x23: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff))))];
            case 0x28: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x29: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x3b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff))))), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x3f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add($0, new u8(1))))];
            case 0x400: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or(new u16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff))), $0)))];
            case 0x401: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or(new u16(new i8(new u8(b[i+2]))), $0)))];
            case 0x420: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new i8(new u8(b[i+2])))), (new Shl($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x428: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x429: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x43f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add($0, new i16(-1))))];
            case 0x800: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff))))), R1[1])))];
            case 0x801: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i8(new u8(b[i+2])))), R1[1])))];
            case 0x820: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new i8(new u8(b[i+2])))), (new Shr($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x828: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x829: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x83b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Not($0)))];
            case 0x83f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 2)))), new Mov($1, new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))];
            case 0xc00: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i16(-((((b[i+2] | ((b[i+3] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0xc01: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i16(-((((b[i+2]) << 24 >> 24)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0xc20: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new i8(new u8(b[i+2])))), (new Shl($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0xc28: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0xc29: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0xc3b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Neg($0)))];
            case 0x1000: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new And(new u16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff))), $0)))];
            case 0x1001: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new And(new u16(new i8(new u8(b[i+2]))), $0)))];
            case 0x1020: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shl($0, new i8(new u8(b[i+2])))))];
            case 0x1028: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shl($0, new u8(1))))];
            case 0x1029: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shl($0, R8[1])))];
            case 0x103b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
            case 0x103f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R32[8], new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))];
            case 0x1400: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), new i16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff)))))), new Mov($0, (new Add($0, new i16(-((((b[i+2] | ((b[i+3] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))))];
            case 0x1401: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), new i16(new i8(new u8(b[i+2])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+2])))))), new Mov($0, (new Add($0, new i16(-((((b[i+2]) << 24 >> 24)) << 16 >> 16)))))];
            case 0x1420: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shr(new u16($0), new i8(new u8(b[i+2])))))];
            case 0x1428: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shr(new u16($0), new u8(1))))];
            case 0x1429: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shr(new u16($0), R8[1])))];
            case 0x143b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
            case 0x1800: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Xor($0, new i16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff))))))];
            case 0x1801: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Xor($0, new i8(new u8(b[i+2])))))];
            case 0x1820: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shl($0, new i8(new u8(b[i+2])))))];
            case 0x1828: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shl($0, new u8(1))))];
            case 0x1829: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shl($0, R8[1])))];
            case 0x183b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
            case 0x183f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))];
            case 0x1c00: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), new i16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff))))))];
            case 0x1c01: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), new i16(new i8(new u8(b[i+2])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+2]))))))];
            case 0x1c20: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+2])))))];
            case 0x1c28: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shr($0, new u8(1))))];
            case 0x1c29: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shr($0, R8[1])))];
            case 0x1c3b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
            case 0x2000: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add($0, new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))))];
            case 0x2001: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add($0, new i8(new u8(b[i+3])))))];
            case 0x2007: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
            case 0x2020: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2023: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))];
            case 0x2028: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x2029: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x203b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x203f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add($0, new u8(1))))];
            case 0x2400: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or(new u16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))), $0)))];
            case 0x2401: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or(new u16(new i8(new u8(b[i+3]))), $0)))];
            case 0x2420: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shr($0, new i8(new u8(b[i+3])))), (new Shl($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2428: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x2429: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x243f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add($0, new i16(-1))))];
            case 0x2800: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add((new Add($0, new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))), R1[1])))];
            case 0x2801: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add((new Add($0, new i8(new u8(b[i+3])))), R1[1])))];
            case 0x2820: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2828: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x2829: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x283b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Not($0)))];
            case 0x283f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 3)))), new Mov($1, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))];
            case 0x2c00: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add((new Add($0, new i16(-((((b[i+3] | ((b[i+4] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x2c01: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add((new Add($0, new i16(-((((b[i+3]) << 24 >> 24)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x2c20: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shr($0, new i8(new u8(b[i+3])))), (new Shl($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x2c28: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x2c29: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x2c3b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Neg($0)))];
            case 0x3000: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new And(new u16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))), $0)))];
            case 0x3001: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new And(new u16(new i8(new u8(b[i+3]))), $0)))];
            case 0x3020: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shl($0, new i8(new u8(b[i+3])))))];
            case 0x3028: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shl($0, new u8(1))))];
            case 0x3029: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shl($0, R8[1])))];
            case 0x303b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
            case 0x303f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[8], new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))];
            case 0x3400: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff)))))), new Mov($0, (new Add($0, new i16(-((((b[i+3] | ((b[i+4] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))))];
            case 0x3401: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), new i16(new i8(new u8(b[i+3])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+3])))))), new Mov($0, (new Add($0, new i16(-((((b[i+3]) << 24 >> 24)) << 16 >> 16)))))];
            case 0x3420: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shr(new u16($0), new i8(new u8(b[i+3])))))];
            case 0x3428: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shr(new u16($0), new u8(1))))];
            case 0x3429: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shr(new u16($0), R8[1])))];
            case 0x343b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
            case 0x3800: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Xor($0, new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))))];
            case 0x3801: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Xor($0, new i8(new u8(b[i+3])))))];
            case 0x3820: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shl($0, new i8(new u8(b[i+3])))))];
            case 0x3828: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shl($0, new u8(1))))];
            case 0x3829: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shl($0, R8[1])))];
            case 0x383b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
            case 0x383f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))];
            case 0x3c00: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))))];
            case 0x3c01: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), new i16(new i8(new u8(b[i+3])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+3]))))))];
            case 0x3c20: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shr($0, new i8(new u8(b[i+3])))))];
            case 0x3c28: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shr($0, new u8(1))))];
            case 0x3c29: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shr($0, R8[1])))];
            case 0x3c3b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
            case 0x4000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add($0, new i16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff))))))];
            case 0x4001: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+6])))))];
            case 0x4007: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
            case 0x4020: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+6])))), (new Shr($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4023: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new i16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff))))];
            case 0x4028: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x4029: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x403b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new i16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff))))), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x403f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add($0, new u8(1))))];
            case 0x4400: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or(new u16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff))), $0)))];
            case 0x4401: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or(new u16(new i8(new u8(b[i+6]))), $0)))];
            case 0x4420: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+6])))), (new Shl($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4428: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x4429: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x443f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add($0, new i16(-1))))];
            case 0x4800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add((new Add($0, new i16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff))))), R1[1])))];
            case 0x4801: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+6])))), R1[1])))];
            case 0x4820: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+6])))), (new Shr($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4828: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x4829: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x483b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Not($0)))];
            case 0x483f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 6)))), new Mov($1, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
            case 0x4c00: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add((new Add($0, new i16(-((((b[i+6] | ((b[i+7] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x4c01: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add((new Add($0, new i16(-((((b[i+6]) << 24 >> 24)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x4c20: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+6])))), (new Shl($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x4c28: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x4c29: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x4c3b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Neg($0)))];
            case 0x5000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new And(new u16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff))), $0)))];
            case 0x5001: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new And(new u16(new i8(new u8(b[i+6]))), $0)))];
            case 0x5020: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+6])))))];
            case 0x5028: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
            case 0x5029: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
            case 0x503b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
            case 0x503f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R32[8], new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
            case 0x5400: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), new i16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff)))))), new Mov($0, (new Add($0, new i16(-((((b[i+6] | ((b[i+7] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))))];
            case 0x5401: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), new i16(new i8(new u8(b[i+6])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+6])))))), new Mov($0, (new Add($0, new i16(-((((b[i+6]) << 24 >> 24)) << 16 >> 16)))))];
            case 0x5420: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shr(new u16($0), new i8(new u8(b[i+6])))))];
            case 0x5428: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shr(new u16($0), new u8(1))))];
            case 0x5429: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shr(new u16($0), R8[1])))];
            case 0x543b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
            case 0x5800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Xor($0, new i16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff))))))];
            case 0x5801: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+6])))))];
            case 0x5820: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+6])))))];
            case 0x5828: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
            case 0x5829: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
            case 0x583b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
            case 0x583f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
            case 0x5c00: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), new i16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff))))))];
            case 0x5c01: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), new i16(new i8(new u8(b[i+6])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+6]))))))];
            case 0x5c20: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shr($0, new i8(new u8(b[i+6])))))];
            case 0x5c28: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shr($0, new u8(1))))];
            case 0x5c29: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shr($0, R8[1])))];
            case 0x5c3b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
            case 0x6000: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add($0, new i16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff))))))];
            case 0x6001: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add($0, new i8(new u8(b[i+2])))))];
            case 0x6007: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R16[((((b[i+1] & 7) & 0xff)) & 0xff)], new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
            case 0x6020: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, new i8(new u8(b[i+2])))), (new Shr($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x6023: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[((((b[i+1] & 7) & 0xff)) & 0xff)], new i16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff))))];
            case 0x6028: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x6029: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x603b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq((new And(R16[((((b[i+1] & 7) & 0xff)) & 0xff)], new i16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff))))), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x603f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add($0, new u8(1))))];
            case 0x6400: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or(new u16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff))), $0)))];
            case 0x6401: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or(new u16(new i8(new u8(b[i+2]))), $0)))];
            case 0x6420: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shr($0, new i8(new u8(b[i+2])))), (new Shl($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x6428: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x6429: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x643f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add($0, new i16(-1))))];
            case 0x6800: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add((new Add($0, new i16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff))))), R1[1])))];
            case 0x6801: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add((new Add($0, new i8(new u8(b[i+2])))), R1[1])))];
            case 0x6820: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, new i8(new u8(b[i+2])))), (new Shr($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x6828: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(15))))))];
            case 0x6829: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x683b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Not($0)))];
            case 0x683f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 2)))), new Mov($1, R16[((((b[i+1] & 7) & 0xff)) & 0xff)])];
            case 0x6c00: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add((new Add($0, new i16(-((((b[i+2] | ((b[i+3] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x6c01: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add((new Add($0, new i16(-((((b[i+2]) << 24 >> 24)) << 16 >> 16)))), (new Neg(new i16(R1[1]))))))];
            case 0x6c20: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shr($0, new i8(new u8(b[i+2])))), (new Shl($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 16))))))];
            case 0x6c28: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(15))))))];
            case 0x6c29: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(16))))))))];
            case 0x6c3b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Neg($0)))];
            case 0x7000: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new And(new u16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff))), $0)))];
            case 0x7001: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new And(new u16(new i8(new u8(b[i+2]))), $0)))];
            case 0x7020: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shl($0, new i8(new u8(b[i+2])))))];
            case 0x7028: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shl($0, new u8(1))))];
            case 0x7029: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shl($0, R8[1])))];
            case 0x703b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, R16[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
            case 0x703f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R32[8], R16[((((b[i+1] & 7) & 0xff)) & 0xff)])];
            case 0x7400: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff)))))), new Mov($0, (new Add($0, new i16(-((((b[i+2] | ((b[i+3] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)))))];
            case 0x7401: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i16(new i8(new u8(b[i+2])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+2])))))), new Mov($0, (new Add($0, new i16(-((((b[i+2]) << 24 >> 24)) << 16 >> 16)))))];
            case 0x7420: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shr(new u16($0), new i8(new u8(b[i+2])))))];
            case 0x7428: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shr(new u16($0), new u8(1))))];
            case 0x7429: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shr(new u16($0), R8[1])))];
            case 0x743b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, R16[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
            case 0x7800: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Xor($0, new i16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff))))))];
            case 0x7801: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Xor($0, new i8(new u8(b[i+2])))))];
            case 0x7820: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shl($0, new i8(new u8(b[i+2])))))];
            case 0x7828: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shl($0, new u8(1))))];
            case 0x7829: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shl($0, R8[1])))];
            case 0x783b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[0]), (new Div($0, R16[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
            case 0x783f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), R16[((((b[i+1] & 7) & 0xff)) & 0xff)])];
            case 0x7c00: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff)))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff))))))];
            case 0x7c01: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i16(new i8(new u8(b[i+2])))))), new Mov(R1[1], (new Lt(new u16($0), new u16(new i8(new u8(b[i+2]))))))];
            case 0x7c20: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shr($0, new i8(new u8(b[i+2])))))];
            case 0x7c28: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shr($0, new u8(1))))];
            case 0x7c29: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shr($0, R8[1])))];
            case 0x7c3b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[0]), (new Div($0, R16[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
        }

        if((((((b[i+1] & 6) & 0xff) >>> 1) & 0xff) & 0x3) === 0x2)
        switch(((b[i] | ((b[i+1] << 8) & 0xffff)) & 0xffff) & 0xc1ff) {
            case 0x1: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x3: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
            case 0x9: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0xb: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
            case 0x11: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add((new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
            case 0x13: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))), R1[1])))];
            case 0x19: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add((new Add($0, (new Neg(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i16(R1[1]))))))];
            case 0x1b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))), (new Neg(new i16(R1[1]))))))];
            case 0x21: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new And($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x23: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
            case 0x29: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x2b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x31: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Xor($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x33: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
            case 0x39: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x3b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x69: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))))];
            case 0x6b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new i32(new i8(new u8(b[i+3]))), new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
            case 0x85: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x87: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($2 = (new Register16)), ($0 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))), new Mov($0, ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
            case 0x89: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
            case 0x8b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))];
            case 0x8c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
            case 0x101: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x103: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
            case 0x109: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x10b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
            case 0x111: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add((new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
            case 0x113: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), R1[1])))];
            case 0x119: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add((new Add($0, (new Neg(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i16(R1[1]))))))];
            case 0x11b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))), (new Neg(new i16(R1[1]))))))];
            case 0x121: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new And($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x123: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
            case 0x129: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x12b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x131: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Xor($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x133: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
            case 0x139: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x13b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x169: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), new i16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff))))))];
            case 0x16b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new i32(new i8(new u8(b[i+6]))), new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
            case 0x185: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x187: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($2 = (new Register16)), ($0 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new Mov($0, ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
            case 0x189: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
            case 0x18b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))];
            case 0x18c: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
            case 0x4001: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x4003: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
            case 0x4009: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x400b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
            case 0x4011: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add((new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
            case 0x4013: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))), R1[1])))];
            case 0x4019: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add((new Add($0, (new Neg(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i16(R1[1]))))))];
            case 0x401b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))), (new Neg(new i16(R1[1]))))))];
            case 0x4021: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new And($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x4023: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
            case 0x4029: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x402b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x4031: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Xor($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x4033: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
            case 0x4039: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x403b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x4069: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), new i16(new u16(b[i+4] | ((b[i+5] << 8) & 0xffff))))))];
            case 0x406b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new i32(new i8(new u8(b[i+4]))), new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
            case 0x4085: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x4087: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($2 = (new Register16)), ($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))), new Mov($0, ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
            case 0x4089: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
            case 0x408b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))];
            case 0x408c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
            case 0x8001: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x8003: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x8009: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x800b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x8011: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
            case 0x8013: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R1[1])))];
            case 0x8019: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, (new Neg(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i16(R1[1]))))))];
            case 0x801b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), (new Neg(new i16(R1[1]))))))];
            case 0x8021: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x8023: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x8029: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x802b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x8031: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x8033: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x8039: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x803b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x8069: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16(new u16(b[i+7] | ((b[i+8] << 8) & 0xffff))))))];
            case 0x806b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new i32(new i8(new u8(b[i+7]))), new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
            case 0x8085: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x8087: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($2 = (new Register16)), ($0 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov($0, ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
            case 0x8089: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
            case 0x808b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
            case 0x808c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        }

        switch(((b[i] | ((b[i+1] << 8) & 0xffff)) & 0xffff) & 0xc0ff) {
            case 0x1: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x3: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
            case 0x9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0xb: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
            case 0x11: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
            case 0x13: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))), R1[1])))];
            case 0x19: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, (new Neg(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i16(R1[1]))))))];
            case 0x1b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))), (new Neg(new i16(R1[1]))))))];
            case 0x21: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new And($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x23: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
            case 0x29: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x2b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x31: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Xor($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x33: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
            case 0x39: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x3b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x69: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff))))))];
            case 0x6b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new i32(new i8(new u8(b[i+2]))), new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
            case 0x85: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x87: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($2 = (new Register16)), ($0 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))), new Mov($0, ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
            case 0x89: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
            case 0x8b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))];
            case 0x8c: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
            case 0x4001: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x4003: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
            case 0x4009: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x400b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
            case 0x4011: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add((new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
            case 0x4013: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))), R1[1])))];
            case 0x4019: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add((new Add($0, (new Neg(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i16(R1[1]))))))];
            case 0x401b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))), (new Neg(new i16(R1[1]))))))];
            case 0x4021: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new And($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x4023: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
            case 0x4029: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x402b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x4031: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Xor($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x4033: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
            case 0x4039: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x403b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x4069: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))))];
            case 0x406b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new i32(new i8(new u8(b[i+3]))), new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
            case 0x4085: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x4087: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($2 = (new Register16)), ($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))), new Mov($0, ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
            case 0x4089: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
            case 0x408b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))];
            case 0x408c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
            case 0x8001: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x8003: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
            case 0x8009: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x800b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
            case 0x8011: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add((new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
            case 0x8013: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))), R1[1])))];
            case 0x8019: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add((new Add($0, (new Neg(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i16(R1[1]))))))];
            case 0x801b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))), (new Neg(new i16(R1[1]))))))];
            case 0x8021: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new And($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x8023: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
            case 0x8029: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x802b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0x8031: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Xor($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0x8033: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
            case 0x8039: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x803b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0x8069: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new i16(new u16(b[i+6] | ((b[i+7] << 8) & 0xffff))))))];
            case 0x806b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new i32(new i8(new u8(b[i+6]))), new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
            case 0x8085: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0x8087: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($2 = (new Register16)), ($0 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))), new Mov($0, ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
            case 0x8089: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
            case 0x808b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
            case 0x808c: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
            case 0xc001: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0xc003: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, R16[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
            case 0xc009: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0xc00b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, R16[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
            case 0xc011: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add((new Add($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
            case 0xc013: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, R16[((((b[i+1] & 7) & 0xff)) & 0xff)])), R1[1])))];
            case 0xc019: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i16(R1[1]))))))];
            case 0xc01b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(R16[((((b[i+1] & 7) & 0xff)) & 0xff)])))), (new Neg(new i16(R1[1]))))))];
            case 0xc021: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new And($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0xc023: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, R16[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
            case 0xc029: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0xc02b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
            case 0xc031: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Xor($0, R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
            case 0xc033: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, R16[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
            case 0xc039: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)]), ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0xc03b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u16($0), new u16($1))))];
            case 0xc069: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(R16[((((b[i+1] & 7) & 0xff)) & 0xff)], new i16(new u16(b[i+2] | ((b[i+3] << 8) & 0xffff))))))];
            case 0xc06b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new i32(new i8(new u8(b[i+2]))), R16[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
            case 0xc085: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq((new And(R16[((((b[i+1] & 7) & 0xff)) & 0xff)], R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i16(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0xc087: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($2 = (new Register16)), ($0 = R16[((((b[i+1] & 7) & 0xff)) & 0xff)])), new Mov($0, ($1 = R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
            case 0xc089: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R16[((((b[i+1] & 7) & 0xff)) & 0xff)], R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
            case 0xc08b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R16[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R16[((((b[i+1] & 7) & 0xff)) & 0xff)])];
            case 0xc08c: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R16[((((b[i+1] & 7) & 0xff)) & 0xff)], R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        }

        switch(b[i] & 0xff) {
            case 0x5: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Add($0, new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff))))))];
            case 0xd: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Or($0, new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff))))))];
            case 0x15: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Add((new Add($0, new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff))))), R1[1])))];
            case 0x1d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Add((new Add($0, new i32(-((((((b[i+1] | ((b[i+2] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)) >> 0)))), (new Neg(new i32(R1[1]))))))];
            case 0x25: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new And($0, new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff))))))];
            case 0x2d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[0]), new i32(new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff))))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff))))))), new Mov($0, (new Add($0, new i32(-((((((b[i+1] | ((b[i+2] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)) >> 0)))))];
            case 0x35: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Xor($0, new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff))))))];
            case 0x3d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[0]), new i32(new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff))))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff)))))))];
            case 0x40: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[0]), (new Add($0, new u8(1))))];
            case 0x41: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[1]), (new Add($0, new u8(1))))];
            case 0x42: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[2]), (new Add($0, new u8(1))))];
            case 0x43: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[3]), (new Add($0, new u8(1))))];
            case 0x44: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new u8(1))))];
            case 0x45: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[5]), (new Add($0, new u8(1))))];
            case 0x46: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[6]), (new Add($0, new u8(1))))];
            case 0x47: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[7]), (new Add($0, new u8(1))))];
            case 0x48: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[0]), (new Add($0, new i32(-1))))];
            case 0x49: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[1]), (new Add($0, new i32(-1))))];
            case 0x4a: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[2]), (new Add($0, new i32(-1))))];
            case 0x4b: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[3]), (new Add($0, new i32(-1))))];
            case 0x4c: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-1))))];
            case 0x4d: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[5]), (new Add($0, new i32(-1))))];
            case 0x4e: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[6]), (new Add($0, new i32(-1))))];
            case 0x4f: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[7]), (new Add($0, new i32(-1))))];
            case 0x50: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[0])];
            case 0x51: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[1])];
            case 0x52: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[2])];
            case 0x53: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[3])];
            case 0x54: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), $0)];
            case 0x55: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[5])];
            case 0x56: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[6])];
            case 0x57: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[7])];
            case 0x58: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[0], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
            case 0x59: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[1], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
            case 0x5a: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[2], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
            case 0x5b: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[3], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
            case 0x5c: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), new Mem32($0)), new Mov($0, (new Add($0, new u8(4))))];
            case 0x5d: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[5], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
            case 0x5e: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[6], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
            case 0x5f: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[7], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
            case 0x60: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($1 = (new Register32)), ($0 = R32[4])), new Mov($0, (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[7]), new Mov($0, (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[6]), new Mov($0, (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[5]), new Mov($0, (new Add($0, new i32(-4)))), new Mov(new Mem32($0), $1), new Mov($0, (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[3]), new Mov($0, (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[2]), new Mov($0, (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[0])];
            case 0x61: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[7], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4)))), new Mov(R32[6], new Mem32($0)), new Mov($0, (new Add($0, new u8(4)))), new Mov(R32[5], new Mem32($0)), new Mov($0, (new Add($0, new u8(4)))), new Mov($0, (new Add($0, new u8(4)))), new Mov(R32[3], new Mem32($0)), new Mov($0, (new Add($0, new u8(4)))), new Mov(R32[2], new Mem32($0)), new Mov($0, (new Add($0, new u8(4)))), new Mov(R32[0], new Mem32($0)), new Mov($0, (new Add($0, new u8(4))))];
            case 0x68: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff))))];
            case 0x91: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($2 = (new Register32)), ($0 = R32[0])), new Mov($0, ($1 = R32[1])), new Mov($1, $2)];
            case 0x92: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($2 = (new Register32)), ($0 = R32[0])), new Mov($0, ($1 = R32[2])), new Mov($1, $2)];
            case 0x93: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($2 = (new Register32)), ($0 = R32[0])), new Mov($0, ($1 = R32[3])), new Mov($1, $2)];
            case 0x94: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($2 = (new Register32)), ($0 = R32[0])), new Mov($0, ($1 = R32[4])), new Mov($1, $2)];
            case 0x95: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($2 = (new Register32)), ($0 = R32[0])), new Mov($0, ($1 = R32[5])), new Mov($1, $2)];
            case 0x96: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($2 = (new Register32)), ($0 = R32[0])), new Mov($0, ($1 = R32[6])), new Mov($1, $2)];
            case 0x97: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($2 = (new Register32)), ($0 = R32[0])), new Mov($0, ($1 = R32[7])), new Mov($1, $2)];
            case 0x98: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[0], new i32(R16[0]))];
            case 0x99: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[2], (new Neg(new i32((new Lt(R32[0], new i8(0)))))))];
            case 0x9a: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), ($1 = R16[17])), new Mov($1, new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff)))), new Mov($0, (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($2 = R32[8]), new i8(_pfxLength + 5)))), new Mov($2, new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))];
            case 0xa1: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[0], new Mem16(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))))];
            case 0xa3: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem16(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))), R32[0])];
            case 0xa9: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq((new And(R32[0], new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff))))), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
            case 0xab: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(new Mem16(R32[7]), R32[0])];
            case 0xad: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[0], new Mem16(R32[6]))];
            case 0xaf: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[0]), new i32(($1 = new Mem16(R32[6])))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
            case 0xb8: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[0], new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff))))];
            case 0xb9: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[1], new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff))))];
            case 0xba: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[2], new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff))))];
            case 0xbb: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[3], new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff))))];
            case 0xbc: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[4], new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff))))];
            case 0xbd: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[5], new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff))))];
            case 0xbe: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[6], new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff))))];
            case 0xbf: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[7], new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff))))];
            case 0xe0: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[1]), (new Add($0, new i32(-1)))), new If((new And((new Not((new Eq($0, new i32(0))))), (new Not(R1[2])))), new Mov(($1 = R32[8]), (new Add($1, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
            case 0xe1: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[1]), (new Add($0, new i32(-1)))), new If((new And((new Not((new Eq($0, new i32(0))))), R1[2])), new Mov(($1 = R32[8]), (new Add($1, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
            case 0xe2: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[1]), (new Add($0, new i32(-1)))), new If((new Not((new Eq($0, new i32(0))))), new Mov(($1 = R32[8]), (new Add($1, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
            case 0xea: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R16[17], new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff)))), new Mov(R32[8], new i16(new u16(b[i+3] | ((b[i+4] << 8) & 0xffff))))];
            case 0xed: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[0], new FnCall('INPORT', R16[2]))];
            case 0xef: return [((((_pfxLength) & 0xff) + 1) & 0xff), new FnCall('OUTPORT', R16[2], R32[0])];
        }

    }
    var $0, $1, $2, $3, $4;

    if((((((((b[i] | ((b[i+1] << 8) >>> 0)) >>> 0) | ((b[i+2] << 16) >>> 0)) >>> 0) | ((((b[i+3] & 63) >>> 0) << 24) >>> 0)) >>> 0) & 0x3f0700ff) === 0x2504000f)
    switch(((b[i+1] | ((b[i+2] << 8) & 0xffff)) & 0xffff) & 0xc0ff) {
        case 0x1f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new FnCall('Nop', new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))];
        case 0x40: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[0], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x41: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[0])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x42: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[1], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x43: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[1])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x44: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[2], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x45: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x46: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x47: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x48: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[3], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x49: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x4a: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[4], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x4b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[4])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x4c: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x4d: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x4e: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x4f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x90: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))), R1[0])];
        case 0x91: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))), (new Not(R1[0])))];
        case 0x92: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))), R1[1])];
        case 0x93: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))), (new Not(R1[1])))];
        case 0x94: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))), R1[2])];
        case 0x95: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))), (new Not(R1[2])))];
        case 0x96: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))), (new Or(R1[1], R1[2])))];
        case 0x97: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))), (new And((new Not(R1[1])), (new Not(R1[2])))))];
        case 0x98: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))), R1[3])];
        case 0x99: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))), (new Not(R1[3])))];
        case 0x9a: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))), R1[4])];
        case 0x9b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))), (new Not(R1[4])))];
        case 0x9c: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))), (new Not((new Eq(R1[0], R1[3])))))];
        case 0x9d: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))), (new Eq(R1[0], R1[3])))];
        case 0x9e: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))), (new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])))];
        case 0x9f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))), (new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))))];
        case 0xa3: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), new i8(0))))))];
        case 0xa4: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))), (new Or((new Shl($0, new i8(new u8(b[i+8])))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0xa5: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0xab: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), ($1 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u32(1), $1)), $0)))];
        case 0xac: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))), (new Or((new And(new u32(((((1 << (((b[i+8]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32) & 0xff) & 0x1f)), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+8])))))))];
        case 0xad: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($1 = new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(32))))), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
        case 0xaf: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem32(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))];
        case 0xb6: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))];
        case 0xb7: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))];
        case 0xbe: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem8(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0xbf: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem16(new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x401f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new FnCall('Nop', new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4])))))))];
        case 0x4040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[0], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))))];
        case 0x4041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[0])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))))];
        case 0x4042: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[1], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))))];
        case 0x4043: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[1])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))))];
        case 0x4044: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[2], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))))];
        case 0x4045: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))))];
        case 0x4046: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))))];
        case 0x4047: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))))];
        case 0x4048: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[3], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))))];
        case 0x4049: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))))];
        case 0x404a: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[4], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))))];
        case 0x404b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[4])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))))];
        case 0x404c: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))))];
        case 0x404d: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))))];
        case 0x404e: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))))];
        case 0x404f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))))];
        case 0x4090: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], new i8(new u8(b[i+4]))))), R1[0])];
        case 0x4091: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], new i8(new u8(b[i+4]))))), (new Not(R1[0])))];
        case 0x4092: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], new i8(new u8(b[i+4]))))), R1[1])];
        case 0x4093: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], new i8(new u8(b[i+4]))))), (new Not(R1[1])))];
        case 0x4094: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], new i8(new u8(b[i+4]))))), R1[2])];
        case 0x4095: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], new i8(new u8(b[i+4]))))), (new Not(R1[2])))];
        case 0x4096: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], new i8(new u8(b[i+4]))))), (new Or(R1[1], R1[2])))];
        case 0x4097: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], new i8(new u8(b[i+4]))))), (new And((new Not(R1[1])), (new Not(R1[2])))))];
        case 0x4098: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], new i8(new u8(b[i+4]))))), R1[3])];
        case 0x4099: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], new i8(new u8(b[i+4]))))), (new Not(R1[3])))];
        case 0x409a: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], new i8(new u8(b[i+4]))))), R1[4])];
        case 0x409b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], new i8(new u8(b[i+4]))))), (new Not(R1[4])))];
        case 0x409c: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], new i8(new u8(b[i+4]))))), (new Not((new Eq(R1[0], R1[3])))))];
        case 0x409d: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], new i8(new u8(b[i+4]))))), (new Eq(R1[0], R1[3])))];
        case 0x409e: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], new i8(new u8(b[i+4]))))), (new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])))];
        case 0x409f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], new i8(new u8(b[i+4]))))), (new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))))];
        case 0x40a3: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4])))))))), new i8(0))))))];
        case 0x40a4: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))), (new Or((new Shl($0, new i8(new u8(b[i+5])))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+5]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x40a5: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x40ab: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), ($1 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u32(1), $1)), $0)))];
        case 0x40ac: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))), (new Or((new And(new u32(((((1 << (((b[i+5]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+5]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32) & 0xff) & 0x1f)), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+5])))))))];
        case 0x40ad: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($1 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4]))))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(32))))), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
        case 0x40af: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+4])))))))))];
        case 0x40b6: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add(R32[5], new i8(new u8(b[i+4]))))))];
        case 0x40b7: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4])))))))];
        case 0x40be: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem8((new Add(R32[5], new i8(new u8(b[i+4])))))))];
        case 0x40bf: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+4]))))))))];
        case 0x801f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new FnCall('Nop', new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))];
        case 0x8040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[0], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[0])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8042: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[1], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8043: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[1])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8044: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[2], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8045: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8046: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8047: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8048: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[3], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8049: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x804a: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[4], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x804b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[4])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x804c: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x804d: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x804e: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x804f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8090: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[0])];
        case 0x8091: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[0])))];
        case 0x8092: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[1])];
        case 0x8093: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[1])))];
        case 0x8094: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[2])];
        case 0x8095: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[2])))];
        case 0x8096: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Or(R1[1], R1[2])))];
        case 0x8097: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new And((new Not(R1[1])), (new Not(R1[2])))))];
        case 0x8098: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[3])];
        case 0x8099: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[3])))];
        case 0x809a: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[4])];
        case 0x809b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[4])))];
        case 0x809c: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not((new Eq(R1[0], R1[3])))))];
        case 0x809d: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Eq(R1[0], R1[3])))];
        case 0x809e: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])))];
        case 0x809f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))))];
        case 0x80a3: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), new i8(0))))))];
        case 0x80a4: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+8])))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x80a5: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x80ab: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), ($1 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u32(1), $1)), $0)))];
        case 0x80ac: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new And(new u32(((((1 << (((b[i+8]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32) & 0xff) & 0x1f)), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+8])))))))];
        case 0x80ad: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($1 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(32))))), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
        case 0x80af: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem32((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))))];
        case 0x80b6: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))];
        case 0x80b7: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))];
        case 0x80be: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x80bf: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem16((new Add(R32[5], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
    }

    if((((((((b[i] | ((b[i+1] << 8) >>> 0)) >>> 0) | ((b[i+2] << 16) >>> 0)) >>> 0) | ((((b[i+3] & 63) >>> 0) << 24) >>> 0)) >>> 0) & 0x380700ff) === 0x2004000f)
    switch(((b[i+1] | ((b[i+2] << 8) & 0xffff)) & 0xffff) & 0xc0ff) {
        case 0x1f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new FnCall('Nop', new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]))];
        case 0x40: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[0], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
        case 0x41: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[0])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
        case 0x42: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[1], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
        case 0x43: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[1])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
        case 0x44: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[2], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
        case 0x45: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
        case 0x46: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
        case 0x47: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
        case 0x48: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[3], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
        case 0x49: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
        case 0x4a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[4], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
        case 0x4b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[4])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
        case 0x4c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
        case 0x4d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
        case 0x4e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
        case 0x4f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
        case 0x90: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]), R1[0])];
        case 0x91: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]), (new Not(R1[0])))];
        case 0x92: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]), R1[1])];
        case 0x93: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]), (new Not(R1[1])))];
        case 0x94: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]), R1[2])];
        case 0x95: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]), (new Not(R1[2])))];
        case 0x96: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]), (new Or(R1[1], R1[2])))];
        case 0x97: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]), (new And((new Not(R1[1])), (new Not(R1[2])))))];
        case 0x98: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]), R1[3])];
        case 0x99: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]), (new Not(R1[3])))];
        case 0x9a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]), R1[4])];
        case 0x9b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]), (new Not(R1[4])))];
        case 0x9c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]), (new Not((new Eq(R1[0], R1[3])))))];
        case 0x9d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]), (new Eq(R1[0], R1[3])))];
        case 0x9e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]), (new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])))];
        case 0x9f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]), (new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))))];
        case 0xa3: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]))), new i8(0))))))];
        case 0xa4: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0xa5: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0xab: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), ($1 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u32(1), $1)), $0)))];
        case 0xac: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])), (new Or((new And(new u32(((((1 << (((b[i+4]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32) & 0xff) & 0x1f)), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+4])))))))];
        case 0xad: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($1 = new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(32))))), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
        case 0xaf: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem32(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]))))];
        case 0xb6: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]))];
        case 0xb7: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)]))];
        case 0xbe: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem8(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
        case 0xbf: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem16(R32[((((b[i+3] & 7) & 0xff)) & 0xff)])))];
        case 0x401f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new FnCall('Nop', new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))))];
        case 0x4040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[0], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
        case 0x4041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[0])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
        case 0x4042: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[1], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
        case 0x4043: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[1])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
        case 0x4044: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[2], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
        case 0x4045: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
        case 0x4046: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
        case 0x4047: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
        case 0x4048: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[3], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
        case 0x4049: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
        case 0x404a: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[4], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
        case 0x404b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[4])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
        case 0x404c: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
        case 0x404d: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
        case 0x404e: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
        case 0x404f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
        case 0x4090: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))), R1[0])];
        case 0x4091: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))), (new Not(R1[0])))];
        case 0x4092: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))), R1[1])];
        case 0x4093: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))), (new Not(R1[1])))];
        case 0x4094: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))), R1[2])];
        case 0x4095: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))), (new Not(R1[2])))];
        case 0x4096: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))), (new Or(R1[1], R1[2])))];
        case 0x4097: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))), (new And((new Not(R1[1])), (new Not(R1[2])))))];
        case 0x4098: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))), R1[3])];
        case 0x4099: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))), (new Not(R1[3])))];
        case 0x409a: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))), R1[4])];
        case 0x409b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))), (new Not(R1[4])))];
        case 0x409c: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))), (new Not((new Eq(R1[0], R1[3])))))];
        case 0x409d: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))), (new Eq(R1[0], R1[3])))];
        case 0x409e: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))), (new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])))];
        case 0x409f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))), (new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))))];
        case 0x40a3: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))))), new i8(0))))))];
        case 0x40a4: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))), (new Or((new Shl($0, new i8(new u8(b[i+5])))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+5]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x40a5: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x40ab: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), ($1 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u32(1), $1)), $0)))];
        case 0x40ac: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))), (new Or((new And(new u32(((((1 << (((b[i+5]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+5]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32) & 0xff) & 0x1f)), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+5])))))))];
        case 0x40ad: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($1 = new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(32))))), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
        case 0x40af: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))))))];
        case 0x40b6: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))))];
        case 0x40b7: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4]))))))];
        case 0x40be: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
        case 0x40bf: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+4])))))))];
        case 0x801f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new FnCall('Nop', new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))];
        case 0x8040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[0], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[0])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8042: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[1], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8043: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[1])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8044: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[2], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8045: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8046: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8047: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8048: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[3], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8049: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x804a: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[4], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x804b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[4])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x804c: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x804d: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x804e: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x804f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8090: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[0])];
        case 0x8091: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[0])))];
        case 0x8092: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[1])];
        case 0x8093: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[1])))];
        case 0x8094: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[2])];
        case 0x8095: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[2])))];
        case 0x8096: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Or(R1[1], R1[2])))];
        case 0x8097: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new And((new Not(R1[1])), (new Not(R1[2])))))];
        case 0x8098: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[3])];
        case 0x8099: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[3])))];
        case 0x809a: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[4])];
        case 0x809b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[4])))];
        case 0x809c: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not((new Eq(R1[0], R1[3])))))];
        case 0x809d: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Eq(R1[0], R1[3])))];
        case 0x809e: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])))];
        case 0x809f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))))];
        case 0x80a3: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), new i8(0))))))];
        case 0x80a4: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+8])))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x80a5: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x80ab: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), ($1 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u32(1), $1)), $0)))];
        case 0x80ac: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new And(new u32(((((1 << (((b[i+8]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32) & 0xff) & 0x1f)), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+8])))))))];
        case 0x80ad: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($1 = new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(32))))), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
        case 0x80af: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))))];
        case 0x80b6: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))];
        case 0x80b7: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))];
        case 0x80be: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x80bf: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
    }

    if((((((((b[i] | ((b[i+1] << 8) >>> 0)) >>> 0) | ((b[i+2] << 16) >>> 0)) >>> 0) | ((((b[i+3] & 7) >>> 0) << 24) >>> 0)) >>> 0) & 0x70700ff) === 0x504000f)
    switch(((b[i+1] | ((b[i+2] << 8) & 0xffff)) & 0xffff) & 0xc0ff) {
        case 0x1f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new FnCall('Nop', new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))];
        case 0x40: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[0], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x41: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[0])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x42: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[1], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x43: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[1])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x44: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[2], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x45: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x46: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x47: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x48: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[3], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x49: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x4a: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[4], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x4b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[4])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x4c: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x4d: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x4e: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x4f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x90: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[0])];
        case 0x91: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[0])))];
        case 0x92: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[1])];
        case 0x93: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[1])))];
        case 0x94: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[2])];
        case 0x95: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[2])))];
        case 0x96: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Or(R1[1], R1[2])))];
        case 0x97: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new And((new Not(R1[1])), (new Not(R1[2])))))];
        case 0x98: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[3])];
        case 0x99: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[3])))];
        case 0x9a: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[4])];
        case 0x9b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[4])))];
        case 0x9c: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not((new Eq(R1[0], R1[3])))))];
        case 0x9d: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Eq(R1[0], R1[3])))];
        case 0x9e: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])))];
        case 0x9f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))))];
        case 0xa3: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), new i8(0))))))];
        case 0xa4: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+8])))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0xa5: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0xab: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), ($1 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u32(1), $1)), $0)))];
        case 0xac: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new And(new u32(((((1 << (((b[i+8]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32) & 0xff) & 0x1f)), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+8])))))))];
        case 0xad: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($1 = new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(32))))), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
        case 0xaf: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem32((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))))];
        case 0xb6: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))];
        case 0xb7: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))];
        case 0xbe: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem8((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0xbf: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem16((new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x401f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new FnCall('Nop', new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))))];
        case 0x4040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[0], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
        case 0x4041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[0])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
        case 0x4042: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[1], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
        case 0x4043: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[1])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
        case 0x4044: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[2], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
        case 0x4045: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
        case 0x4046: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
        case 0x4047: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
        case 0x4048: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[3], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
        case 0x4049: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
        case 0x404a: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[4], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
        case 0x404b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[4])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
        case 0x404c: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
        case 0x404d: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
        case 0x404e: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
        case 0x404f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
        case 0x4090: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))), R1[0])];
        case 0x4091: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))), (new Not(R1[0])))];
        case 0x4092: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))), R1[1])];
        case 0x4093: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))), (new Not(R1[1])))];
        case 0x4094: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))), R1[2])];
        case 0x4095: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))), (new Not(R1[2])))];
        case 0x4096: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))), (new Or(R1[1], R1[2])))];
        case 0x4097: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))), (new And((new Not(R1[1])), (new Not(R1[2])))))];
        case 0x4098: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))), R1[3])];
        case 0x4099: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))), (new Not(R1[3])))];
        case 0x409a: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))), R1[4])];
        case 0x409b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))), (new Not(R1[4])))];
        case 0x409c: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))), (new Not((new Eq(R1[0], R1[3])))))];
        case 0x409d: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))), (new Eq(R1[0], R1[3])))];
        case 0x409e: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))), (new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])))];
        case 0x409f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))), (new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))))];
        case 0x40a3: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))))), new i8(0))))))];
        case 0x40a4: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))), (new Or((new Shl($0, new i8(new u8(b[i+5])))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+5]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x40a5: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x40ab: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), ($1 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u32(1), $1)), $0)))];
        case 0x40ac: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))), (new Or((new And(new u32(((((1 << (((b[i+5]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+5]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32) & 0xff) & 0x1f)), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+5])))))))];
        case 0x40ad: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($1 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(32))))), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
        case 0x40af: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))))))];
        case 0x40b6: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))))];
        case 0x40b7: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4]))))))))];
        case 0x40be: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
        case 0x40bf: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+4])))))))))];
        case 0x801f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new FnCall('Nop', new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))))];
        case 0x8040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[0], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
        case 0x8041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[0])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
        case 0x8042: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[1], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
        case 0x8043: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[1])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
        case 0x8044: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[2], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
        case 0x8045: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
        case 0x8046: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
        case 0x8047: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
        case 0x8048: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[3], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
        case 0x8049: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
        case 0x804a: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[4], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
        case 0x804b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[4])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
        case 0x804c: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
        case 0x804d: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
        case 0x804e: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
        case 0x804f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
        case 0x8090: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), R1[0])];
        case 0x8091: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), (new Not(R1[0])))];
        case 0x8092: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), R1[1])];
        case 0x8093: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), (new Not(R1[1])))];
        case 0x8094: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), R1[2])];
        case 0x8095: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), (new Not(R1[2])))];
        case 0x8096: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), (new Or(R1[1], R1[2])))];
        case 0x8097: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), (new And((new Not(R1[1])), (new Not(R1[2])))))];
        case 0x8098: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), R1[3])];
        case 0x8099: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), (new Not(R1[3])))];
        case 0x809a: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), R1[4])];
        case 0x809b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), (new Not(R1[4])))];
        case 0x809c: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), (new Not((new Eq(R1[0], R1[3])))))];
        case 0x809d: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), (new Eq(R1[0], R1[3])))];
        case 0x809e: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), (new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])))];
        case 0x809f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), (new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))))];
        case 0x80a3: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))))), new i8(0))))))];
        case 0x80a4: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))), (new Or((new Shl($0, new i8(new u8(b[i+8])))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x80a5: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x80ab: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), ($1 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u32(1), $1)), $0)))];
        case 0x80ac: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))), (new Or((new And(new u32(((((1 << (((b[i+8]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32) & 0xff) & 0x1f)), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+8])))))))];
        case 0x80ad: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($1 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(32))))), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
        case 0x80af: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))))))];
        case 0x80b6: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))))];
        case 0x80b7: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))))];
        case 0x80be: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
        case 0x80bf: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))))];
    }

    if((((((b[i] | ((b[i+1] << 8) >>> 0)) >>> 0) | ((((b[i+2] & 7) >>> 0) << 16) >>> 0)) >>> 0) & 0x600ff) === 0x4000f)
    switch(((b[i+1] | ((b[i+2] << 8) & 0xffff)) & 0xffff) & 0xc1ff) {
        case 0x1f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new FnCall('Nop', new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))))];
        case 0x40: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[0], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
        case 0x41: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[0])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
        case 0x42: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[1], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
        case 0x43: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[1])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
        case 0x44: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[2], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
        case 0x45: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
        case 0x46: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
        case 0x47: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
        case 0x48: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[3], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
        case 0x49: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
        case 0x4a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[4], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
        case 0x4b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[4])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
        case 0x4c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
        case 0x4d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
        case 0x4e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
        case 0x4f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
        case 0x90: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))), R1[0])];
        case 0x91: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))), (new Not(R1[0])))];
        case 0x92: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))), R1[1])];
        case 0x93: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))), (new Not(R1[1])))];
        case 0x94: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))), R1[2])];
        case 0x95: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))), (new Not(R1[2])))];
        case 0x96: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))), (new Or(R1[1], R1[2])))];
        case 0x97: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))), (new And((new Not(R1[1])), (new Not(R1[2])))))];
        case 0x98: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))), R1[3])];
        case 0x99: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))), (new Not(R1[3])))];
        case 0x9a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))), R1[4])];
        case 0x9b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))), (new Not(R1[4])))];
        case 0x9c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))), (new Not((new Eq(R1[0], R1[3])))))];
        case 0x9d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))), (new Eq(R1[0], R1[3])))];
        case 0x9e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))), (new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])))];
        case 0x9f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))), (new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))))];
        case 0xa3: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))))), new i8(0))))))];
        case 0xa4: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0xa5: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0xab: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), ($1 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u32(1), $1)), $0)))];
        case 0xac: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))), (new Or((new And(new u32(((((1 << (((b[i+4]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32) & 0xff) & 0x1f)), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+4])))))))];
        case 0xad: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($1 = new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(32))))), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
        case 0xaf: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem32((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))))))];
        case 0xb6: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))))];
        case 0xb7: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6)))))))];
        case 0xbe: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem8((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
        case 0xbf: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem16((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))))))];
        case 0x11f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new FnCall('Nop', new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))];
        case 0x140: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[0], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x141: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[0])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x142: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[1], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x143: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[1])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x144: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[2], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x145: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x146: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x147: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x148: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[3], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x149: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x14a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[4], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x14b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[4])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x14c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x14d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x14e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x14f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x190: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), R1[0])];
        case 0x191: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), (new Not(R1[0])))];
        case 0x192: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), R1[1])];
        case 0x193: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), (new Not(R1[1])))];
        case 0x194: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), R1[2])];
        case 0x195: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), (new Not(R1[2])))];
        case 0x196: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), (new Or(R1[1], R1[2])))];
        case 0x197: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), (new And((new Not(R1[1])), (new Not(R1[2])))))];
        case 0x198: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), R1[3])];
        case 0x199: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), (new Not(R1[3])))];
        case 0x19a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), R1[4])];
        case 0x19b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), (new Not(R1[4])))];
        case 0x19c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), (new Not((new Eq(R1[0], R1[3])))))];
        case 0x19d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), (new Eq(R1[0], R1[3])))];
        case 0x19e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), (new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])))];
        case 0x19f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), (new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))))];
        case 0x1a3: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i8(0))))))];
        case 0x1a4: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x1a5: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x1ab: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), ($1 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u32(1), $1)), $0)))];
        case 0x1ac: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new And(new u32(((((1 << (((b[i+7]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32) & 0xff) & 0x1f)), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+7])))))))];
        case 0x1ad: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($1 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(32))))), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
        case 0x1af: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x1b6: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))];
        case 0x1b7: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))];
        case 0x1be: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem8(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x1bf: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x401f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new FnCall('Nop', new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))))];
        case 0x4040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[0], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
        case 0x4041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[0])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
        case 0x4042: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[1], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
        case 0x4043: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[1])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
        case 0x4044: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[2], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
        case 0x4045: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
        case 0x4046: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
        case 0x4047: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
        case 0x4048: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[3], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
        case 0x4049: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
        case 0x404a: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If(R1[4], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
        case 0x404b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not(R1[4])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
        case 0x404c: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
        case 0x404d: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
        case 0x404e: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
        case 0x404f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
        case 0x4090: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))), R1[0])];
        case 0x4091: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))), (new Not(R1[0])))];
        case 0x4092: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))), R1[1])];
        case 0x4093: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))), (new Not(R1[1])))];
        case 0x4094: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))), R1[2])];
        case 0x4095: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))), (new Not(R1[2])))];
        case 0x4096: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))), (new Or(R1[1], R1[2])))];
        case 0x4097: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))), (new And((new Not(R1[1])), (new Not(R1[2])))))];
        case 0x4098: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))), R1[3])];
        case 0x4099: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))), (new Not(R1[3])))];
        case 0x409a: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))), R1[4])];
        case 0x409b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))), (new Not(R1[4])))];
        case 0x409c: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))), (new Not((new Eq(R1[0], R1[3])))))];
        case 0x409d: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))), (new Eq(R1[0], R1[3])))];
        case 0x409e: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))), (new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])))];
        case 0x409f: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))), (new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))))];
        case 0x40a3: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))))), new i8(0))))))];
        case 0x40a4: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))), (new Or((new Shl($0, new i8(new u8(b[i+5])))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+5]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x40a5: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x40ab: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), ($1 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u32(1), $1)), $0)))];
        case 0x40ac: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))), (new Or((new And(new u32(((((1 << (((b[i+5]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+5]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32) & 0xff) & 0x1f)), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+5])))))))];
        case 0x40ad: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($1 = new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(32))))), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
        case 0x40af: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))))))];
        case 0x40b6: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))))];
        case 0x40b7: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4]))))))];
        case 0x40be: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
        case 0x40bf: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+4])))))))];
        case 0x801f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new FnCall('Nop', new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))];
        case 0x8040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[0], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[0])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8042: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[1], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8043: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[1])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8044: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[2], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8045: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8046: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8047: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8048: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[3], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8049: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x804a: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If(R1[4], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x804b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not(R1[4])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x804c: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x804d: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x804e: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x804f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x8090: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[0])];
        case 0x8091: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[0])))];
        case 0x8092: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[1])];
        case 0x8093: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[1])))];
        case 0x8094: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[2])];
        case 0x8095: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[2])))];
        case 0x8096: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Or(R1[1], R1[2])))];
        case 0x8097: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new And((new Not(R1[1])), (new Not(R1[2])))))];
        case 0x8098: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[3])];
        case 0x8099: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[3])))];
        case 0x809a: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), R1[4])];
        case 0x809b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not(R1[4])))];
        case 0x809c: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Not((new Eq(R1[0], R1[3])))))];
        case 0x809d: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Eq(R1[0], R1[3])))];
        case 0x809e: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])))];
        case 0x809f: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), (new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))))];
        case 0x80a3: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))), new i8(0))))))];
        case 0x80a4: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+8])))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x80a5: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x80ab: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), ($1 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u32(1), $1)), $0)))];
        case 0x80ac: return [((((_pfxLength) & 0xff) + 9) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new And(new u32(((((1 << (((b[i+8]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+8]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32) & 0xff) & 0x1f)), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+8])))))))];
        case 0x80ad: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($1 = new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(32))))), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
        case 0x80af: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem32((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))))];
        case 0x80b6: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))];
        case 0x80b7: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))))];
        case 0x80be: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem8((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
        case 0x80bf: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem16((new Add((new Add(R32[((((b[i+3] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+3] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+3] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))))];
    }

    if((b[i] & 0xff) === 0xf)
    switch(((b[i+1] | ((b[i+2] << 8) & 0xffff)) & 0xffff) & 0xc0ff) {
        case 0x1f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new FnCall('Nop', new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0x40: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[0], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x41: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[0])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x42: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[1], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x43: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[1])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x44: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[2], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x45: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x46: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x47: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x48: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[3], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x49: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x4a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[4], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x4b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[4])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x4c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x4d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x4e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x4f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x90: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), R1[0])];
        case 0x91: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), (new Not(R1[0])))];
        case 0x92: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), R1[1])];
        case 0x93: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), (new Not(R1[1])))];
        case 0x94: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), R1[2])];
        case 0x95: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), (new Not(R1[2])))];
        case 0x96: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), (new Or(R1[1], R1[2])))];
        case 0x97: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), (new And((new Not(R1[1])), (new Not(R1[2])))))];
        case 0x98: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), R1[3])];
        case 0x99: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), (new Not(R1[3])))];
        case 0x9a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), R1[4])];
        case 0x9b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), (new Not(R1[4])))];
        case 0x9c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), (new Not((new Eq(R1[0], R1[3])))))];
        case 0x9d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), (new Eq(R1[0], R1[3])))];
        case 0x9e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), (new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])))];
        case 0x9f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), (new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))))];
        case 0xa3: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))), new i8(0))))))];
        case 0xa4: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0xa5: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0xab: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), ($1 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u32(1), $1)), $0)))];
        case 0xac: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new And(new u32(((((1 << (((b[i+3]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32) & 0xff) & 0x1f)), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+3])))))))];
        case 0xad: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($1 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(32))))), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
        case 0xaf: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0xb6: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xb7: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xbe: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0xbf: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x401f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new FnCall('Nop', new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))];
        case 0x4040: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[0], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x4041: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[0])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x4042: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[1], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x4043: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[1])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x4044: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[2], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x4045: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x4046: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x4047: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x4048: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[3], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x4049: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x404a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If(R1[4], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x404b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not(R1[4])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x404c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x404d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x404e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x404f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x4090: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), R1[0])];
        case 0x4091: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), (new Not(R1[0])))];
        case 0x4092: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), R1[1])];
        case 0x4093: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), (new Not(R1[1])))];
        case 0x4094: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), R1[2])];
        case 0x4095: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), (new Not(R1[2])))];
        case 0x4096: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), (new Or(R1[1], R1[2])))];
        case 0x4097: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), (new And((new Not(R1[1])), (new Not(R1[2])))))];
        case 0x4098: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), R1[3])];
        case 0x4099: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), (new Not(R1[3])))];
        case 0x409a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), R1[4])];
        case 0x409b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), (new Not(R1[4])))];
        case 0x409c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), (new Not((new Eq(R1[0], R1[3])))))];
        case 0x409d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), (new Eq(R1[0], R1[3])))];
        case 0x409e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), (new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])))];
        case 0x409f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), (new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))))];
        case 0x40a3: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))), new i8(0))))))];
        case 0x40a4: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x40a5: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x40ab: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), ($1 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u32(1), $1)), $0)))];
        case 0x40ac: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new And(new u32(((((1 << (((b[i+4]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32) & 0xff) & 0x1f)), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+4])))))))];
        case 0x40ad: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($1 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(32))))), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
        case 0x40af: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x40b6: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))];
        case 0x40b7: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))];
        case 0x40be: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x40bf: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x801f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new FnCall('Nop', new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x8040: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[0], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x8041: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[0])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x8042: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[1], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x8043: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[1])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x8044: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[2], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x8045: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x8046: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x8047: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x8048: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[3], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x8049: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x804a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If(R1[4], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x804b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not(R1[4])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x804c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x804d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x804e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x804f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x8090: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R1[0])];
        case 0x8091: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), (new Not(R1[0])))];
        case 0x8092: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R1[1])];
        case 0x8093: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), (new Not(R1[1])))];
        case 0x8094: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R1[2])];
        case 0x8095: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), (new Not(R1[2])))];
        case 0x8096: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), (new Or(R1[1], R1[2])))];
        case 0x8097: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), (new And((new Not(R1[1])), (new Not(R1[2])))))];
        case 0x8098: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R1[3])];
        case 0x8099: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), (new Not(R1[3])))];
        case 0x809a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R1[4])];
        case 0x809b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), (new Not(R1[4])))];
        case 0x809c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), (new Not((new Eq(R1[0], R1[3])))))];
        case 0x809d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), (new Eq(R1[0], R1[3])))];
        case 0x809e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), (new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])))];
        case 0x809f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), (new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))))];
        case 0x80a3: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new i8(0))))))];
        case 0x80a4: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x80a5: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x80ab: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), ($1 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u32(1), $1)), $0)))];
        case 0x80ac: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new And(new u32(((((1 << (((b[i+7]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32) & 0xff) & 0x1f)), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+7])))))))];
        case 0x80ad: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($1 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(32))))), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
        case 0x80af: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x80b6: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x80b7: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x80be: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x80bf: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0xc01f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new FnCall('Nop', R32[((((b[i+2] & 7) & 0xff)) & 0xff)])];
        case 0xc040: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[0], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xc041: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[0])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xc042: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[1], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xc043: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[1])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xc044: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[2], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xc045: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xc046: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xc047: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xc048: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[3], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xc049: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xc04a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If(R1[4], new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xc04b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not(R1[4])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xc04c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xc04d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xc04e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xc04f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xc090: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((b[i+2] & 7) & 0xff)) & 0xff)], R1[0])];
        case 0xc091: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Not(R1[0])))];
        case 0xc092: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((b[i+2] & 7) & 0xff)) & 0xff)], R1[1])];
        case 0xc093: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Not(R1[1])))];
        case 0xc094: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((b[i+2] & 7) & 0xff)) & 0xff)], R1[2])];
        case 0xc095: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Not(R1[2])))];
        case 0xc096: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Or(R1[1], R1[2])))];
        case 0xc097: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((b[i+2] & 7) & 0xff)) & 0xff)], (new And((new Not(R1[1])), (new Not(R1[2])))))];
        case 0xc098: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((b[i+2] & 7) & 0xff)) & 0xff)], R1[3])];
        case 0xc099: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Not(R1[3])))];
        case 0xc09a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((b[i+2] & 7) & 0xff)) & 0xff)], R1[4])];
        case 0xc09b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Not(R1[4])))];
        case 0xc09c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Not((new Eq(R1[0], R1[3])))))];
        case 0xc09d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Eq(R1[0], R1[3])))];
        case 0xc09e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])))];
        case 0xc09f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((b[i+2] & 7) & 0xff)) & 0xff)], (new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))))];
        case 0xc0a3: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), new i8(0))))))];
        case 0xc0a4: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0xc0a5: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0xc0ab: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[1], (new Not((new Eq((new And((new Shl(new u32(1), ($1 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]))), ($0 = R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))), new i8(0)))))), new Mov($0, (new Or((new Shl(new u32(1), $1)), $0)))];
        case 0xc0ac: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), (new Or((new And(new u32(((((1 << (((b[i+3]) << 24 >> 24) & 0x1f)) >>> 0) + -1) >>> 0) << (((((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32) & 0xff) & 0x1f)), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+3])))))))];
        case 0xc0ad: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($1 = R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), (new Or((new And((new Shl((new Add((new Shl(new u32(1), ($0 = R8[1]))), new i32(-1))), (new Add(new u8((new Neg($0))), new u8(32))))), R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), (new Shr($1, $0)))))];
        case 0xc0af: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Mul($0, R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0xc0b6: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R8[((((b[i+2] & 7) & 0xff)) & 0xff)])];
        case 0xc0b7: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R16[((((b[i+2] & 7) & 0xff)) & 0xff)])];
        case 0xc0be: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(R8[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xc0bf: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new i32(R16[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
    }

    if((((((((((b[i] & 128) & 0xffff) >>> 7) & 0xffff) | ((b[i+1] << 1) & 0xffff)) & 0xffff) | ((((b[i+2] & 63) & 0xffff) << 9) & 0xffff)) & 0xffff) & 0x7e0f) === 0x4a09)
    switch(((b[i] | ((b[i+1] << 8) & 0xffff)) & 0xffff) & 0xf87f) {
        case 0x0: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add($0, new i8(new u8(b[i+7])))))];
        case 0x1: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add($0, new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0x2: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add($0, new i8(new u8(b[i+7])))))];
        case 0x3: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add($0, new i8(new u8(b[i+7])))))];
        case 0xf: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x40: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x41: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x46: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), new i8(new u8(b[i+7])))];
        case 0x47: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))];
        case 0x50: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x51: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x52: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x53: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x58: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f32(new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x59: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f32(new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x5a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x5b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x5c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f64(new Mem64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x5d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f64(new Mem64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x5e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x5f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x76: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), new i8(new u8(b[i+7])))), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x77: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x7e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add(new u8($0), new u8(1))))];
        case 0x7f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add($0, new u8(1))))];
        case 0x800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or(new u8(new u8(b[i+7])), $0)))];
        case 0x801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or(new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))), $0)))];
        case 0x802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or(new u8(new u8(b[i+7])), $0)))];
        case 0x803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or(new u32(new i8(new u8(b[i+7]))), $0)))];
        case 0x840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x858: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f32(new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x85a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x85c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f64(new Mem64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x85e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x87e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add($0, new i8(-1))))];
        case 0x87f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add($0, new i32(-1))))];
        case 0x1000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
        case 0x1001: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add((new Add($0, new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))), R1[1])))];
        case 0x1002: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
        case 0x1003: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
        case 0x1040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x1041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x1050: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x1051: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x1052: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x1053: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x1059: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), new f32(R80[0]))];
        case 0x105c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x105d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new f64(R80[0]))];
        case 0x105e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x105f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), new i16(R80[0]))];
        case 0x1076: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Not($0)))];
        case 0x1077: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Not($0)))];
        case 0x107f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 7)))), new Mov($1, new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))];
        case 0x1800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add((new Add($0, new i8(-((b[i+7]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x1801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add((new Add($0, new i32(-((((((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)) >>> 0)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x1802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add((new Add($0, new i8(-((b[i+7]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x1803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add((new Add($0, new i32(-((((b[i+7]) << 24 >> 24)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x1840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x1841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x1850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x1851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x1852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x1853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x1859: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), new f32($0))];
        case 0x185c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x185d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new f64($0))];
        case 0x185e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x185f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), new i16($0))];
        case 0x1876: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Neg($0)))];
        case 0x1877: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Neg($0)))];
        case 0x2000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new And(new u8(new u8(b[i+7])), $0)))];
        case 0x2001: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new And(new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))), $0)))];
        case 0x2002: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new And(new u8(new u8(b[i+7])), $0)))];
        case 0x2003: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new And(new u32(new i8(new u8(b[i+7]))), $0)))];
        case 0x2040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0x2041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0x2050: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shl($0, new u8(1))))];
        case 0x2051: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shl($0, new u8(1))))];
        case 0x2052: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shl($0, R8[1])))];
        case 0x2053: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shl($0, R8[1])))];
        case 0x205c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(new f64(new Mem64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))))];
        case 0x2076: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x2077: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x207f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[8], new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))];
        case 0x2800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7]))))), new Mov($0, (new Add($0, new i8(-((b[i+7]) << 24 >> 24)))))];
        case 0x2801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)))))), new Mov($0, (new Add($0, new i32(-((((((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)) >>> 0)) >> 0)))))];
        case 0x2802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7]))))), new Mov($0, (new Add($0, new i8(-((b[i+7]) << 24 >> 24)))))];
        case 0x2803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), new i32(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+7])))))), new Mov($0, (new Add($0, new i32(-((((b[i+7]) << 24 >> 24)) >> 0)))))];
        case 0x2840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shr(new u8($0), new i8(new u8(b[i+7])))))];
        case 0x2841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shr(new u32($0), new i8(new u8(b[i+7])))))];
        case 0x2850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shr(new u8($0), new u8(1))))];
        case 0x2851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shr(new u32($0), new u8(1))))];
        case 0x2852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shr(new u8($0), R8[1])))];
        case 0x2853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shr(new u32($0), R8[1])))];
        case 0x2859: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[49], new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))];
        case 0x285c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add(new f64(new Mem64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Neg(new f64($0))))))];
        case 0x285f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x2876: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x2877: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x3000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Xor($0, new i8(new u8(b[i+7])))))];
        case 0x3001: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Xor($0, new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0x3002: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Xor($0, new i8(new u8(b[i+7])))))];
        case 0x3003: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Xor($0, new i8(new u8(b[i+7])))))];
        case 0x3040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0x3041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0x3050: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shl($0, new u8(1))))];
        case 0x3051: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shl($0, new u8(1))))];
        case 0x3052: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shl($0, R8[1])))];
        case 0x3053: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shl($0, R8[1])))];
        case 0x305c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Div($0, new f64(new Mem64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x3076: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x3077: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x307f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))];
        case 0x3800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7])))))];
        case 0x3801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0x3802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7])))))];
        case 0x3803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), new i32(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+7]))))))];
        case 0x3840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shr($0, new i8(new u8(b[i+7])))))];
        case 0x3841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shr($0, new i8(new u8(b[i+7])))))];
        case 0x3850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shr($0, new u8(1))))];
        case 0x3851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shr($0, new u8(1))))];
        case 0x3852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shr($0, R8[1])))];
        case 0x3853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Shr($0, R8[1])))];
        case 0x3859: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), R16[49])];
        case 0x385c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Div(new f64(new Mem64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), $0)))];
        case 0x385d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), R16[48])];
        case 0x385f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i64($0))];
        case 0x3876: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x3877: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x4000: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Add($0, new i8(new u8(b[i+4])))))];
        case 0x4001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Add($0, new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x4002: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Add($0, new i8(new u8(b[i+4])))))];
        case 0x4003: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Add($0, new i8(new u8(b[i+4])))))];
        case 0x400f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))), new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x4040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x4041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x4046: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], new i8(new u8(b[i+3]))))), new i8(new u8(b[i+4])))];
        case 0x4047: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))];
        case 0x4050: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x4051: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x4052: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x4053: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x4058: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f32(new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))))))];
        case 0x4059: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f32(new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))))];
        case 0x405a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))))];
        case 0x405b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))))];
        case 0x405c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f64(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i8(new u8(b[i+3]))))), R32[5])))))))];
        case 0x405d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f64(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i8(new u8(b[i+3]))))), R32[5]))))))];
        case 0x405e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))))];
        case 0x405f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3]))))))))];
        case 0x4076: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add(R32[5], new i8(new u8(b[i+3]))))), new i8(new u8(b[i+4])))), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x4077: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x407e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Add(new u8($0), new u8(1))))];
        case 0x407f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Add($0, new u8(1))))];
        case 0x4800: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Or(new u8(new u8(b[i+4])), $0)))];
        case 0x4801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Or(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))), $0)))];
        case 0x4802: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Or(new u8(new u8(b[i+4])), $0)))];
        case 0x4803: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Or(new u32(new i8(new u8(b[i+4]))), $0)))];
        case 0x4840: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x4841: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x4850: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x4851: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x4852: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x4853: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x4858: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f32(new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))))))];
        case 0x485a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))))];
        case 0x485c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f64(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i8(new u8(b[i+3]))))), R32[5])))))))];
        case 0x485e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))))];
        case 0x487e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Add($0, new i8(-1))))];
        case 0x487f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Add($0, new i32(-1))))];
        case 0x5000: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i8(new u8(b[i+4])))), R1[1])))];
        case 0x5001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Add((new Add($0, new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))), R1[1])))];
        case 0x5002: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i8(new u8(b[i+4])))), R1[1])))];
        case 0x5003: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Add((new Add($0, new i8(new u8(b[i+4])))), R1[1])))];
        case 0x5040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x5041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x5050: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x5051: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x5052: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x5053: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x5059: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))), new f32(R80[0]))];
        case 0x505c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i8(new u8(b[i+3]))))), R32[5])))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x505d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i8(new u8(b[i+3]))))), R32[5]))), new f64(R80[0]))];
        case 0x505e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x505f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))), new i16(R80[0]))];
        case 0x5076: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Not($0)))];
        case 0x5077: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Not($0)))];
        case 0x507f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 4)))), new Mov($1, new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))];
        case 0x5800: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i8(-((b[i+4]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x5801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Add((new Add($0, new i32(-((((((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)) >>> 0)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x5802: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i8(-((b[i+4]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x5803: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Add((new Add($0, new i32(-((((b[i+4]) << 24 >> 24)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x5840: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x5841: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x5850: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x5851: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x5852: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x5853: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x5859: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))), new f32($0))];
        case 0x585c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i8(new u8(b[i+3]))))), R32[5])))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x585d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i8(new u8(b[i+3]))))), R32[5]))), new f64($0))];
        case 0x585e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x585f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))), new i16($0))];
        case 0x5876: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Neg($0)))];
        case 0x5877: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Neg($0)))];
        case 0x6000: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new And(new u8(new u8(b[i+4])), $0)))];
        case 0x6001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new And(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))), $0)))];
        case 0x6002: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new And(new u8(new u8(b[i+4])), $0)))];
        case 0x6003: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new And(new u32(new i8(new u8(b[i+4]))), $0)))];
        case 0x6040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Shl($0, new i8(new u8(b[i+4])))))];
        case 0x6041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Shl($0, new i8(new u8(b[i+4])))))];
        case 0x6050: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Shl($0, new u8(1))))];
        case 0x6051: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Shl($0, new u8(1))))];
        case 0x6052: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Shl($0, R8[1])))];
        case 0x6053: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Shl($0, R8[1])))];
        case 0x605c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(new f64(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i8(new u8(b[i+3]))))), R32[5])))))))))];
        case 0x6076: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add(R32[5], new i8(new u8(b[i+3]))))))))];
        case 0x6077: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))))];
        case 0x607f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[8], new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))];
        case 0x6800: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), new i8(new u8(b[i+4]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+4]))))), new Mov($0, (new Add($0, new i8(-((b[i+4]) << 24 >> 24)))))];
        case 0x6801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), new Mov($0, (new Add($0, new i32(-((((((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)) >>> 0)) >> 0)))))];
        case 0x6802: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), new i8(new u8(b[i+4]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+4]))))), new Mov($0, (new Add($0, new i8(-((b[i+4]) << 24 >> 24)))))];
        case 0x6803: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), new i32(new i8(new u8(b[i+4])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+4])))))), new Mov($0, (new Add($0, new i32(-((((b[i+4]) << 24 >> 24)) >> 0)))))];
        case 0x6840: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Shr(new u8($0), new i8(new u8(b[i+4])))))];
        case 0x6841: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Shr(new u32($0), new i8(new u8(b[i+4])))))];
        case 0x6850: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Shr(new u8($0), new u8(1))))];
        case 0x6851: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Shr(new u32($0), new u8(1))))];
        case 0x6852: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Shr(new u8($0), R8[1])))];
        case 0x6853: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Shr(new u32($0), R8[1])))];
        case 0x6859: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[49], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))];
        case 0x685c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add(new f64(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i8(new u8(b[i+3]))))), R32[5])))), (new Neg(new f64($0))))))];
        case 0x685f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i8(new u8(b[i+3]))))), R32[5])))))];
        case 0x6876: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add(R32[5], new i8(new u8(b[i+3]))))))))];
        case 0x6877: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))))];
        case 0x7000: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Xor($0, new i8(new u8(b[i+4])))))];
        case 0x7001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Xor($0, new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x7002: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Xor($0, new i8(new u8(b[i+4])))))];
        case 0x7003: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Xor($0, new i8(new u8(b[i+4])))))];
        case 0x7040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Shl($0, new i8(new u8(b[i+4])))))];
        case 0x7041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Shl($0, new i8(new u8(b[i+4])))))];
        case 0x7050: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Shl($0, new u8(1))))];
        case 0x7051: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Shl($0, new u8(1))))];
        case 0x7052: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Shl($0, R8[1])))];
        case 0x7053: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Shl($0, R8[1])))];
        case 0x705c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Div($0, new f64(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i8(new u8(b[i+3]))))), R32[5])))))))];
        case 0x7076: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add(R32[5], new i8(new u8(b[i+3]))))))))];
        case 0x7077: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))))];
        case 0x707f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))];
        case 0x7800: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), new i8(new u8(b[i+4]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+4])))))];
        case 0x7801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x7802: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), new i8(new u8(b[i+4]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+4])))))];
        case 0x7803: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), new i32(new i8(new u8(b[i+4])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+4]))))))];
        case 0x7840: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Shr($0, new i8(new u8(b[i+4])))))];
        case 0x7841: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Shr($0, new i8(new u8(b[i+4])))))];
        case 0x7850: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Shr($0, new u8(1))))];
        case 0x7851: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Shr($0, new u8(1))))];
        case 0x7852: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Shr($0, R8[1])))];
        case 0x7853: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Shr($0, R8[1])))];
        case 0x7859: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))), R16[49])];
        case 0x785c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Div(new f64(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i8(new u8(b[i+3]))))), R32[5])))), $0)))];
        case 0x785d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))), R16[48])];
        case 0x785f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i8(new u8(b[i+3]))))), R32[5]))), new i64($0))];
        case 0x7876: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add(R32[5], new i8(new u8(b[i+3]))))))))];
        case 0x7877: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))))];
        case 0x8000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+7])))))];
        case 0x8001: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0x8002: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+7])))))];
        case 0x8003: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+7])))))];
        case 0x800f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x8040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x8041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x8046: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i8(new u8(b[i+7])))];
        case 0x8047: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))];
        case 0x8050: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x8051: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x8052: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x8053: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x8058: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f32(new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x8059: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f32(new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x805a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x805b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x805c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f64(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[5])))))))];
        case 0x805d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f64(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[5]))))))];
        case 0x805e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x805f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x8076: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i8(new u8(b[i+7])))), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x8077: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x807e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add(new u8($0), new u8(1))))];
        case 0x807f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new u8(1))))];
        case 0x8800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u8(new u8(b[i+7])), $0)))];
        case 0x8801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))), $0)))];
        case 0x8802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u8(new u8(b[i+7])), $0)))];
        case 0x8803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u32(new i8(new u8(b[i+7]))), $0)))];
        case 0x8840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x8841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x8850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x8851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x8852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x8853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x8858: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f32(new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x885a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x885c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f64(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[5])))))))];
        case 0x885e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x887e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(-1))))];
        case 0x887f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i32(-1))))];
        case 0x9000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
        case 0x9001: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))), R1[1])))];
        case 0x9002: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
        case 0x9003: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
        case 0x9040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x9041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x9050: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x9051: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x9052: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x9053: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x9059: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new f32(R80[0]))];
        case 0x905c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[5])))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x905d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[5]))), new f64(R80[0]))];
        case 0x905e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x905f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16(R80[0]))];
        case 0x9076: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Not($0)))];
        case 0x9077: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Not($0)))];
        case 0x907f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 7)))), new Mov($1, new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x9800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(-((b[i+7]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x9801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i32(-((((((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)) >>> 0)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x9802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(-((b[i+7]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x9803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i32(-((((b[i+7]) << 24 >> 24)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x9840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x9841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x9850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x9851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x9852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x9853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x9859: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new f32($0))];
        case 0x985c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[5])))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x985d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[5]))), new f64($0))];
        case 0x985e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x985f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16($0))];
        case 0x9876: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Neg($0)))];
        case 0x9877: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Neg($0)))];
        case 0xa000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u8(new u8(b[i+7])), $0)))];
        case 0xa001: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))), $0)))];
        case 0xa002: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u8(new u8(b[i+7])), $0)))];
        case 0xa003: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u32(new i8(new u8(b[i+7]))), $0)))];
        case 0xa040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0xa041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0xa050: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0xa051: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0xa052: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0xa053: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0xa05c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(new f64(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[5])))))))))];
        case 0xa076: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xa077: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xa07f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[8], new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0xa800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7]))))), new Mov($0, (new Add($0, new i8(-((b[i+7]) << 24 >> 24)))))];
        case 0xa801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)))))), new Mov($0, (new Add($0, new i32(-((((((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)) >>> 0)) >> 0)))))];
        case 0xa802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7]))))), new Mov($0, (new Add($0, new i8(-((b[i+7]) << 24 >> 24)))))];
        case 0xa803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i32(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+7])))))), new Mov($0, (new Add($0, new i32(-((((b[i+7]) << 24 >> 24)) >> 0)))))];
        case 0xa840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u8($0), new i8(new u8(b[i+7])))))];
        case 0xa841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u32($0), new i8(new u8(b[i+7])))))];
        case 0xa850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u8($0), new u8(1))))];
        case 0xa851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u32($0), new u8(1))))];
        case 0xa852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u8($0), R8[1])))];
        case 0xa853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u32($0), R8[1])))];
        case 0xa859: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[49], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0xa85c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add(new f64(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[5])))), (new Neg(new f64($0))))))];
        case 0xa85f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[5])))))];
        case 0xa876: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xa877: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xb000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
        case 0xb001: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0xb002: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
        case 0xb003: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
        case 0xb040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0xb041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0xb050: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0xb051: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0xb052: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0xb053: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0xb05c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Div($0, new f64(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[5])))))))];
        case 0xb076: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xb077: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xb07f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0xb800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7])))))];
        case 0xb801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0xb802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7])))))];
        case 0xb803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i32(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+7]))))))];
        case 0xb840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new i8(new u8(b[i+7])))))];
        case 0xb841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new i8(new u8(b[i+7])))))];
        case 0xb850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new u8(1))))];
        case 0xb851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new u8(1))))];
        case 0xb852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, R8[1])))];
        case 0xb853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, R8[1])))];
        case 0xb859: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[49])];
        case 0xb85c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Div(new f64(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[5])))), $0)))];
        case 0xb85d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[48])];
        case 0xb85f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(new i64((new Add(new u64(0, 0), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[5]))), new i64($0))];
        case 0xb876: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xb877: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
    }

    if((((b[i+1] | ((((b[i+2] & 63) & 0xffff) << 8) & 0xffff)) & 0xffff) & 0x3f07) === 0x2504)
    switch(((b[i] | ((b[i+1] << 8) & 0xffff)) & 0xffff) & 0xc0ff) {
        case 0x0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x2: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x3: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x8: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x9: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Or($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0xa: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0xb: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x10: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add((new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x11: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add((new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x12: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R1[1])))];
        case 0x13: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R1[1])))];
        case 0x18: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add((new Add($0, (new Neg(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i8(R1[1]))))))];
        case 0x19: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Add((new Add($0, (new Neg(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i32(R1[1]))))))];
        case 0x1a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), (new Neg(new i8(R1[1]))))))];
        case 0x1b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), (new Neg(new i32(R1[1]))))))];
        case 0x20: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new And($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x21: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new And($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x22: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x23: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x28: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x29: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x2a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x2b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x30: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Xor($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x31: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), (new Xor($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x32: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x33: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x38: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x39: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x3a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x3b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x69: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0x6b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), new i32(new i8(new u8(b[i+7]))))))];
        case 0x84: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x85: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x86: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($2 = (new Register8)), ($0 = new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mov($0, ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x87: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($2 = (new Register32)), ($0 = new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mov($0, ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x88: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x89: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x8a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))];
        case 0x8b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))];
        case 0x8c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        case 0x8d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))];
        case 0x8e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)], new Mem16(new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))];
        case 0xc4: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[16], new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(((((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)) >>> 0) + 2)))];
        case 0xc5: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[19], new Mem16(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(((((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)) >>> 0) + 2)))];
        case 0x4000: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4001: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4002: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem8((new Add(R32[5], new i8(new u8(b[i+3]))))))))];
        case 0x4003: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))))];
        case 0x4008: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Or($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4009: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Or($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x400a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem8((new Add(R32[5], new i8(new u8(b[i+3]))))))))];
        case 0x400b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))))];
        case 0x4010: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Add((new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x4011: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Add((new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x4012: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem8((new Add(R32[5], new i8(new u8(b[i+3]))))))), R1[1])))];
        case 0x4013: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))), R1[1])))];
        case 0x4018: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Add((new Add($0, (new Neg(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i8(R1[1]))))))];
        case 0x4019: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Add((new Add($0, (new Neg(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i32(R1[1]))))))];
        case 0x401a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem8((new Add(R32[5], new i8(new u8(b[i+3]))))))))), (new Neg(new i8(R1[1]))))))];
        case 0x401b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))))), (new Neg(new i32(R1[1]))))))];
        case 0x4020: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new And($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4021: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new And($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4022: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem8((new Add(R32[5], new i8(new u8(b[i+3]))))))))];
        case 0x4023: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))))];
        case 0x4028: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x4029: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x402a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3]))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x402b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x4030: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), (new Xor($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4031: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), (new Xor($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4032: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem8((new Add(R32[5], new i8(new u8(b[i+3]))))))))];
        case 0x4033: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))))];
        case 0x4038: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3])))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x4039: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x403a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3]))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x403b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x4069: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x406b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))), new i32(new i8(new u8(b[i+4]))))))];
        case 0x4084: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add(R32[5], new i8(new u8(b[i+3]))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x4085: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x4086: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($2 = (new Register8)), ($0 = new Mem8((new Add(R32[5], new i8(new u8(b[i+3]))))))), new Mov($0, ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x4087: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($2 = (new Register32)), ($0 = new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))), new Mov($0, ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x4088: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[5], new i8(new u8(b[i+3]))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x4089: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x408a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add(R32[5], new i8(new u8(b[i+3]))))))];
        case 0x408b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))];
        case 0x408c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem32((new Add(R32[5], new i32(new i8(new u8(b[i+3])))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        case 0x408d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(R32[5], new i32(new i8(new u8(b[i+3]))))))];
        case 0x408e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)], new Mem16((new Add(R32[5], new i16(new i8(new u8(b[i+3])))))))];
        case 0x40c4: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[16], new Mem16(($0 = (new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0x40c5: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[19], new Mem16(($0 = (new Add(R32[5], new i32(new i8(new u8(b[i+3])))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0x8000: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8001: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8002: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8003: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8008: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8009: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x800a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x800b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8010: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x8011: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x8012: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R1[1])))];
        case 0x8013: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R1[1])))];
        case 0x8018: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, (new Neg(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i8(R1[1]))))))];
        case 0x8019: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, (new Neg(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i32(R1[1]))))))];
        case 0x801a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), (new Neg(new i8(R1[1]))))))];
        case 0x801b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), (new Neg(new i32(R1[1]))))))];
        case 0x8020: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8021: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8022: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8023: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8028: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x8029: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x802a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x802b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x8030: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8031: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8032: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8033: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8038: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x8039: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x803a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x803b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x8069: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0x806b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i32(new i8(new u8(b[i+7]))))))];
        case 0x8084: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x8085: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x8086: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($2 = (new Register8)), ($0 = new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov($0, ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x8087: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($2 = (new Register32)), ($0 = new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov($0, ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x8088: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x8089: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x808a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x808b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x808c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        case 0x808d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x808e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)], new Mem16((new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x80c4: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[16], new Mem16(($0 = (new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0x80c5: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[19], new Mem16(($0 = (new Add(R32[5], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
    }

    if((((((((((b[i] & 128) & 0xffff) >>> 7) & 0xffff) | ((b[i+1] << 1) & 0xffff)) & 0xffff) | ((((b[i+2] & 63) & 0xffff) << 9) & 0xffff)) & 0xffff) & 0x700f) === 0x4009)
    switch(((b[i] | ((b[i+1] << 8) & 0xffff)) & 0xffff) & 0xf87f) {
        case 0x0: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add($0, new i8(new u8(b[i+3])))))];
        case 0x1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add($0, new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x2: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add($0, new i8(new u8(b[i+3])))))];
        case 0x3: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add($0, new i8(new u8(b[i+3])))))];
        case 0xf: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x40: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x41: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x46: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), new i8(new u8(b[i+3])))];
        case 0x47: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))];
        case 0x50: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x51: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x52: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x53: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x58: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f32(new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))))];
        case 0x59: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f32(new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x5a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x5b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x5c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f64(new Mem64(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))))];
        case 0x5d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f64(new Mem64(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x5e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x5f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x76: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), new i8(new u8(b[i+3])))), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x77: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x7e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add(new u8($0), new u8(1))))];
        case 0x7f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add($0, new u8(1))))];
        case 0x800: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or(new u8(new u8(b[i+3])), $0)))];
        case 0x801: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))), $0)))];
        case 0x802: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or(new u8(new u8(b[i+3])), $0)))];
        case 0x803: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or(new u32(new i8(new u8(b[i+3]))), $0)))];
        case 0x840: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new i8(new u8(b[i+3])))), (new Shl($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x841: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new i8(new u8(b[i+3])))), (new Shl($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x850: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x851: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x852: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x853: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x858: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f32(new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))))];
        case 0x85a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x85c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f64(new Mem64(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))))];
        case 0x85e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x87e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add($0, new i8(-1))))];
        case 0x87f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add($0, new i32(-1))))];
        case 0x1000: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i8(new u8(b[i+3])))), R1[1])))];
        case 0x1001: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), R1[1])))];
        case 0x1002: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i8(new u8(b[i+3])))), R1[1])))];
        case 0x1003: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i8(new u8(b[i+3])))), R1[1])))];
        case 0x1040: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x1041: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x1050: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x1051: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x1052: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x1053: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x1059: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), new f32(R80[0]))];
        case 0x105c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x105d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem64(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), new f64(R80[0]))];
        case 0x105e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x105f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), new i16(R80[0]))];
        case 0x1076: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Not($0)))];
        case 0x1077: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Not($0)))];
        case 0x107f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 3)))), new Mov($1, new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0x1800: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i8(-((b[i+3]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x1801: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i32(-((((((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)) >>> 0)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x1802: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i8(-((b[i+3]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x1803: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i32(-((((b[i+3]) << 24 >> 24)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x1840: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new i8(new u8(b[i+3])))), (new Shl($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x1841: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new i8(new u8(b[i+3])))), (new Shl($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x1850: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x1851: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x1852: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x1853: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x1859: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), new f32($0))];
        case 0x185c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x185d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), new f64($0))];
        case 0x185e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x185f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), new i16($0))];
        case 0x1876: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Neg($0)))];
        case 0x1877: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Neg($0)))];
        case 0x2000: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new And(new u8(new u8(b[i+3])), $0)))];
        case 0x2001: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new And(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))), $0)))];
        case 0x2002: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new And(new u8(new u8(b[i+3])), $0)))];
        case 0x2003: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new And(new u32(new i8(new u8(b[i+3]))), $0)))];
        case 0x2040: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shl($0, new i8(new u8(b[i+3])))))];
        case 0x2041: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shl($0, new i8(new u8(b[i+3])))))];
        case 0x2050: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shl($0, new u8(1))))];
        case 0x2051: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shl($0, new u8(1))))];
        case 0x2052: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shl($0, R8[1])))];
        case 0x2053: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shl($0, R8[1])))];
        case 0x205c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(new f64(new Mem64(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))))))];
        case 0x2076: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x2077: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x207f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[8], new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0x2800: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), new i8(new u8(b[i+3]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+3]))))), new Mov($0, (new Add($0, new i8(-((b[i+3]) << 24 >> 24)))))];
        case 0x2801: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mov($0, (new Add($0, new i32(-((((((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)) >>> 0)) >> 0)))))];
        case 0x2802: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), new i8(new u8(b[i+3]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+3]))))), new Mov($0, (new Add($0, new i8(-((b[i+3]) << 24 >> 24)))))];
        case 0x2803: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), new i32(new i8(new u8(b[i+3])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+3])))))), new Mov($0, (new Add($0, new i32(-((((b[i+3]) << 24 >> 24)) >> 0)))))];
        case 0x2840: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shr(new u8($0), new i8(new u8(b[i+3])))))];
        case 0x2841: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shr(new u32($0), new i8(new u8(b[i+3])))))];
        case 0x2850: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shr(new u8($0), new u8(1))))];
        case 0x2851: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shr(new u32($0), new u8(1))))];
        case 0x2852: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shr(new u8($0), R8[1])))];
        case 0x2853: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shr(new u32($0), R8[1])))];
        case 0x2859: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[49], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0x285c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Add(new f64(new Mem64(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Neg(new f64($0))))))];
        case 0x285f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem64(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))];
        case 0x2876: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x2877: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x3000: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Xor($0, new i8(new u8(b[i+3])))))];
        case 0x3001: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Xor($0, new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x3002: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Xor($0, new i8(new u8(b[i+3])))))];
        case 0x3003: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Xor($0, new i8(new u8(b[i+3])))))];
        case 0x3040: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shl($0, new i8(new u8(b[i+3])))))];
        case 0x3041: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shl($0, new i8(new u8(b[i+3])))))];
        case 0x3050: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shl($0, new u8(1))))];
        case 0x3051: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shl($0, new u8(1))))];
        case 0x3052: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shl($0, R8[1])))];
        case 0x3053: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shl($0, R8[1])))];
        case 0x305c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Div($0, new f64(new Mem64(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])))))];
        case 0x3076: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x3077: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x307f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0x3800: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), new i8(new u8(b[i+3]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+3])))))];
        case 0x3801: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x3802: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), new i8(new u8(b[i+3]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+3])))))];
        case 0x3803: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), new i32(new i8(new u8(b[i+3])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+3]))))))];
        case 0x3840: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+3])))))];
        case 0x3841: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+3])))))];
        case 0x3850: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shr($0, new u8(1))))];
        case 0x3851: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shr($0, new u8(1))))];
        case 0x3852: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shr($0, R8[1])))];
        case 0x3853: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Shr($0, R8[1])))];
        case 0x3859: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), R16[49])];
        case 0x385c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Div(new f64(new Mem64(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), $0)))];
        case 0x385d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), R16[48])];
        case 0x385f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), new i64($0))];
        case 0x3876: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x3877: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x4000: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add($0, new i8(new u8(b[i+4])))))];
        case 0x4001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add($0, new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x4002: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add($0, new i8(new u8(b[i+4])))))];
        case 0x4003: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add($0, new i8(new u8(b[i+4])))))];
        case 0x400f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x4040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x4041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x4046: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), new i8(new u8(b[i+4])))];
        case 0x4047: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))];
        case 0x4050: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x4051: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x4052: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x4053: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x4058: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f32(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))))];
        case 0x4059: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f32(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x405a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x405b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x405c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))))];
        case 0x405d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x405e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x405f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x4076: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), new i8(new u8(b[i+4])))), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x4077: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x407e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add(new u8($0), new u8(1))))];
        case 0x407f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add($0, new u8(1))))];
        case 0x4800: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or(new u8(new u8(b[i+4])), $0)))];
        case 0x4801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))), $0)))];
        case 0x4802: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or(new u8(new u8(b[i+4])), $0)))];
        case 0x4803: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or(new u32(new i8(new u8(b[i+4]))), $0)))];
        case 0x4840: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x4841: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x4850: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x4851: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x4852: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x4853: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x4858: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f32(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))))];
        case 0x485a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x485c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))))];
        case 0x485e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x487e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add($0, new i8(-1))))];
        case 0x487f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add($0, new i32(-1))))];
        case 0x5000: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i8(new u8(b[i+4])))), R1[1])))];
        case 0x5001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))), R1[1])))];
        case 0x5002: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i8(new u8(b[i+4])))), R1[1])))];
        case 0x5003: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i8(new u8(b[i+4])))), R1[1])))];
        case 0x5040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x5041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x5050: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x5051: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x5052: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x5053: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x5059: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), new f32(R80[0]))];
        case 0x505c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x505d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), new f64(R80[0]))];
        case 0x505e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x505f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), new i16(R80[0]))];
        case 0x5076: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Not($0)))];
        case 0x5077: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Not($0)))];
        case 0x507f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 4)))), new Mov($1, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))];
        case 0x5800: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i8(-((b[i+4]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x5801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i32(-((((((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)) >>> 0)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x5802: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i8(-((b[i+4]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x5803: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i32(-((((b[i+4]) << 24 >> 24)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x5840: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x5841: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x5850: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x5851: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x5852: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x5853: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x5859: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), new f32($0))];
        case 0x585c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x585d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), new f64($0))];
        case 0x585e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x585f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), new i16($0))];
        case 0x5876: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Neg($0)))];
        case 0x5877: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Neg($0)))];
        case 0x6000: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new And(new u8(new u8(b[i+4])), $0)))];
        case 0x6001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new And(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))), $0)))];
        case 0x6002: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new And(new u8(new u8(b[i+4])), $0)))];
        case 0x6003: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new And(new u32(new i8(new u8(b[i+4]))), $0)))];
        case 0x6040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shl($0, new i8(new u8(b[i+4])))))];
        case 0x6041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shl($0, new i8(new u8(b[i+4])))))];
        case 0x6050: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shl($0, new u8(1))))];
        case 0x6051: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shl($0, new u8(1))))];
        case 0x6052: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shl($0, R8[1])))];
        case 0x6053: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shl($0, R8[1])))];
        case 0x605c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))))))];
        case 0x6076: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x6077: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x607f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[8], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))];
        case 0x6800: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), new i8(new u8(b[i+4]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+4]))))), new Mov($0, (new Add($0, new i8(-((b[i+4]) << 24 >> 24)))))];
        case 0x6801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), new Mov($0, (new Add($0, new i32(-((((((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)) >>> 0)) >> 0)))))];
        case 0x6802: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), new i8(new u8(b[i+4]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+4]))))), new Mov($0, (new Add($0, new i8(-((b[i+4]) << 24 >> 24)))))];
        case 0x6803: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), new i32(new i8(new u8(b[i+4])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+4])))))), new Mov($0, (new Add($0, new i32(-((((b[i+4]) << 24 >> 24)) >> 0)))))];
        case 0x6840: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shr(new u8($0), new i8(new u8(b[i+4])))))];
        case 0x6841: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shr(new u32($0), new i8(new u8(b[i+4])))))];
        case 0x6850: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shr(new u8($0), new u8(1))))];
        case 0x6851: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shr(new u32($0), new u8(1))))];
        case 0x6852: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shr(new u8($0), R8[1])))];
        case 0x6853: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shr(new u32($0), R8[1])))];
        case 0x6859: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[49], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))];
        case 0x685c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add(new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Neg(new f64($0))))))];
        case 0x685f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))];
        case 0x6876: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x6877: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x7000: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Xor($0, new i8(new u8(b[i+4])))))];
        case 0x7001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Xor($0, new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x7002: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Xor($0, new i8(new u8(b[i+4])))))];
        case 0x7003: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Xor($0, new i8(new u8(b[i+4])))))];
        case 0x7040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shl($0, new i8(new u8(b[i+4])))))];
        case 0x7041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shl($0, new i8(new u8(b[i+4])))))];
        case 0x7050: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shl($0, new u8(1))))];
        case 0x7051: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shl($0, new u8(1))))];
        case 0x7052: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shl($0, R8[1])))];
        case 0x7053: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shl($0, R8[1])))];
        case 0x705c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Div($0, new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))))))];
        case 0x7076: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x7077: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x707f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))];
        case 0x7800: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), new i8(new u8(b[i+4]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+4])))))];
        case 0x7801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x7802: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), new i8(new u8(b[i+4]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+4])))))];
        case 0x7803: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), new i32(new i8(new u8(b[i+4])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+4]))))))];
        case 0x7840: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shr($0, new i8(new u8(b[i+4])))))];
        case 0x7841: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shr($0, new i8(new u8(b[i+4])))))];
        case 0x7850: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shr($0, new u8(1))))];
        case 0x7851: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shr($0, new u8(1))))];
        case 0x7852: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shr($0, R8[1])))];
        case 0x7853: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Shr($0, R8[1])))];
        case 0x7859: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), R16[49])];
        case 0x785c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Div(new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), $0)))];
        case 0x785d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), R16[48])];
        case 0x785f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), new i64($0))];
        case 0x7876: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x7877: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x8000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+7])))))];
        case 0x8001: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0x8002: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+7])))))];
        case 0x8003: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+7])))))];
        case 0x800f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x8040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x8041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x8046: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i8(new u8(b[i+7])))];
        case 0x8047: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))];
        case 0x8050: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x8051: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x8052: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x8053: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x8058: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f32(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x8059: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f32(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x805a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x805b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x805c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x805d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x805e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x805f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x8076: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i8(new u8(b[i+7])))), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x8077: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x807e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add(new u8($0), new u8(1))))];
        case 0x807f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new u8(1))))];
        case 0x8800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u8(new u8(b[i+7])), $0)))];
        case 0x8801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))), $0)))];
        case 0x8802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u8(new u8(b[i+7])), $0)))];
        case 0x8803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u32(new i8(new u8(b[i+7]))), $0)))];
        case 0x8840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x8841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x8850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x8851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x8852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x8853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x8858: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f32(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x885a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x885c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x885e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x887e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(-1))))];
        case 0x887f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i32(-1))))];
        case 0x9000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
        case 0x9001: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))), R1[1])))];
        case 0x9002: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
        case 0x9003: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
        case 0x9040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x9041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x9050: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x9051: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x9052: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x9053: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x9059: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new f32(R80[0]))];
        case 0x905c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x905d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new f64(R80[0]))];
        case 0x905e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x905f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16(R80[0]))];
        case 0x9076: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Not($0)))];
        case 0x9077: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Not($0)))];
        case 0x907f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 7)))), new Mov($1, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x9800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(-((b[i+7]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x9801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i32(-((((((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)) >>> 0)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x9802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(-((b[i+7]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x9803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i32(-((((b[i+7]) << 24 >> 24)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x9840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x9841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x9850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x9851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x9852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x9853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x9859: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new f32($0))];
        case 0x985c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x985d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new f64($0))];
        case 0x985e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x985f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16($0))];
        case 0x9876: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Neg($0)))];
        case 0x9877: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Neg($0)))];
        case 0xa000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u8(new u8(b[i+7])), $0)))];
        case 0xa001: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))), $0)))];
        case 0xa002: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u8(new u8(b[i+7])), $0)))];
        case 0xa003: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u32(new i8(new u8(b[i+7]))), $0)))];
        case 0xa040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0xa041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0xa050: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0xa051: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0xa052: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0xa053: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0xa05c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))))];
        case 0xa076: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xa077: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xa07f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[8], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0xa800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7]))))), new Mov($0, (new Add($0, new i8(-((b[i+7]) << 24 >> 24)))))];
        case 0xa801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)))))), new Mov($0, (new Add($0, new i32(-((((((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)) >>> 0)) >> 0)))))];
        case 0xa802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7]))))), new Mov($0, (new Add($0, new i8(-((b[i+7]) << 24 >> 24)))))];
        case 0xa803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i32(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+7])))))), new Mov($0, (new Add($0, new i32(-((((b[i+7]) << 24 >> 24)) >> 0)))))];
        case 0xa840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u8($0), new i8(new u8(b[i+7])))))];
        case 0xa841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u32($0), new i8(new u8(b[i+7])))))];
        case 0xa850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u8($0), new u8(1))))];
        case 0xa851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u32($0), new u8(1))))];
        case 0xa852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u8($0), R8[1])))];
        case 0xa853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u32($0), R8[1])))];
        case 0xa859: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[49], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0xa85c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add(new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Neg(new f64($0))))))];
        case 0xa85f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0xa876: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xa877: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xb000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
        case 0xb001: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0xb002: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
        case 0xb003: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
        case 0xb040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0xb041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0xb050: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0xb051: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0xb052: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0xb053: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0xb05c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Div($0, new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0xb076: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xb077: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xb07f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0xb800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7])))))];
        case 0xb801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0xb802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7])))))];
        case 0xb803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i32(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+7]))))))];
        case 0xb840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new i8(new u8(b[i+7])))))];
        case 0xb841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new i8(new u8(b[i+7])))))];
        case 0xb850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new u8(1))))];
        case 0xb851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new u8(1))))];
        case 0xb852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, R8[1])))];
        case 0xb853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, R8[1])))];
        case 0xb859: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[49])];
        case 0xb85c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Div(new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), $0)))];
        case 0xb85d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[48])];
        case 0xb85f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i64($0))];
        case 0xb876: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xb877: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
    }

    if((((b[i+1] | ((((b[i+2] & 63) & 0xffff) << 8) & 0xffff)) & 0xffff) & 0x3807) === 0x2004)
    switch(((b[i] | ((b[i+1] << 8) & 0xffff)) & 0xffff) & 0xc0ff) {
        case 0x0: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x1: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x2: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x3: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x8: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x9: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Or($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0xa: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0xb: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x10: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x11: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x12: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))), R1[1])))];
        case 0x13: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))), R1[1])))];
        case 0x18: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, (new Neg(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i8(R1[1]))))))];
        case 0x19: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, (new Neg(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i32(R1[1]))))))];
        case 0x1a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))), (new Neg(new i8(R1[1]))))))];
        case 0x1b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))), (new Neg(new i32(R1[1]))))))];
        case 0x20: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new And($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x21: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new And($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x22: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x23: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x28: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x29: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x2a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x2b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x30: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Xor($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x31: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), (new Xor($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x32: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x33: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))];
        case 0x38: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x39: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)])), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x3a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x3b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x69: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x6b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), new i32(new i8(new u8(b[i+3]))))))];
        case 0x84: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x85: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x86: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($2 = (new Register8)), ($0 = new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))), new Mov($0, ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x87: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($2 = (new Register32)), ($0 = new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))), new Mov($0, ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x88: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x89: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x8a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0x8b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0x8c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem32(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        case 0x8d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R32[((((b[i+2] & 7) & 0xff)) & 0xff)])];
        case 0x8e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)], new Mem16(R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))];
        case 0xc4: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[16], new Mem16(($0 = R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0xc5: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[19], new Mem16(($0 = R32[((((b[i+2] & 7) & 0xff)) & 0xff)]))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0x4000: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4001: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4002: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x4003: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x4008: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4009: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Or($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x400a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x400b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x4010: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add((new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x4011: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add((new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x4012: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))), R1[1])))];
        case 0x4013: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))), R1[1])))];
        case 0x4018: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add((new Add($0, (new Neg(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i8(R1[1]))))))];
        case 0x4019: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Add((new Add($0, (new Neg(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i32(R1[1]))))))];
        case 0x401a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))), (new Neg(new i8(R1[1]))))))];
        case 0x401b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))), (new Neg(new i32(R1[1]))))))];
        case 0x4020: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new And($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4021: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new And($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4022: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x4023: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x4028: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x4029: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x402a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x402b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x4030: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Xor($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4031: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), (new Xor($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4032: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x4033: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))];
        case 0x4038: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x4039: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x403a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x403b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x4069: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x406b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), new i32(new i8(new u8(b[i+4]))))))];
        case 0x4084: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x4085: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x4086: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($2 = (new Register8)), ($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))), new Mov($0, ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x4087: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($2 = (new Register32)), ($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))), new Mov($0, ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x4088: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x4089: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x408a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))];
        case 0x408b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))];
        case 0x408c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        case 0x408d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3])))))];
        case 0x408e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))];
        case 0x40c4: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[16], new Mem16(($0 = (new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0x40c5: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[19], new Mem16(($0 = (new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+3]))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0x8000: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8001: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8002: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8003: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8008: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8009: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x800a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x800b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8010: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x8011: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x8012: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R1[1])))];
        case 0x8013: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R1[1])))];
        case 0x8018: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, (new Neg(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i8(R1[1]))))))];
        case 0x8019: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, (new Neg(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i32(R1[1]))))))];
        case 0x801a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), (new Neg(new i8(R1[1]))))))];
        case 0x801b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), (new Neg(new i32(R1[1]))))))];
        case 0x8020: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8021: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8022: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8023: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8028: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x8029: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x802a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x802b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x8030: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8031: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8032: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8033: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8038: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x8039: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x803a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x803b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x8069: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0x806b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i32(new i8(new u8(b[i+7]))))))];
        case 0x8084: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x8085: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x8086: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($2 = (new Register8)), ($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov($0, ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x8087: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($2 = (new Register32)), ($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov($0, ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x8088: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x8089: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x808a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x808b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x808c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        case 0x808d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x808e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x80c4: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[16], new Mem16(($0 = (new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0x80c5: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[19], new Mem16(($0 = (new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
    }

    if((((((((((b[i] & 128) & 0xffff) >>> 7) & 0xffff) | ((b[i+1] << 1) & 0xffff)) & 0xffff) | ((((b[i+2] & 7) & 0xffff) << 9) & 0xffff)) & 0xffff) & 0xe0f) === 0xa09)
    switch(((b[i] | ((b[i+1] << 8) & 0xffff)) & 0xffff) & 0xf87f) {
        case 0x0: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+7])))))];
        case 0x1: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0x2: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+7])))))];
        case 0x3: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+7])))))];
        case 0xf: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x40: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x41: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x46: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i8(new u8(b[i+7])))];
        case 0x47: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))];
        case 0x50: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x51: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x52: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x53: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x58: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f32(new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x59: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f32(new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x5a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x5b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x5c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f64(new Mem64((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x5d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f64(new Mem64((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x5e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x5f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x76: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i8(new u8(b[i+7])))), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x77: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x7e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add(new u8($0), new u8(1))))];
        case 0x7f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new u8(1))))];
        case 0x800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u8(new u8(b[i+7])), $0)))];
        case 0x801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))), $0)))];
        case 0x802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u8(new u8(b[i+7])), $0)))];
        case 0x803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u32(new i8(new u8(b[i+7]))), $0)))];
        case 0x840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x858: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f32(new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x85a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x85c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f64(new Mem64((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x85e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x87e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(-1))))];
        case 0x87f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i32(-1))))];
        case 0x1000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
        case 0x1001: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))), R1[1])))];
        case 0x1002: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
        case 0x1003: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
        case 0x1040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x1041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x1050: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x1051: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x1052: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x1053: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x1059: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new f32(R80[0]))];
        case 0x105c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x105d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem64((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new f64(R80[0]))];
        case 0x105e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x105f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16(R80[0]))];
        case 0x1076: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Not($0)))];
        case 0x1077: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Not($0)))];
        case 0x107f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 7)))), new Mov($1, new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x1800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(-((b[i+7]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x1801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i32(-((((((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)) >>> 0)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x1802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(-((b[i+7]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x1803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i32(-((((b[i+7]) << 24 >> 24)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x1840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x1841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x1850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x1851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x1852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x1853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x1859: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new f32($0))];
        case 0x185c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x185d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new f64($0))];
        case 0x185e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x185f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16($0))];
        case 0x1876: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Neg($0)))];
        case 0x1877: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Neg($0)))];
        case 0x2000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u8(new u8(b[i+7])), $0)))];
        case 0x2001: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))), $0)))];
        case 0x2002: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u8(new u8(b[i+7])), $0)))];
        case 0x2003: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u32(new i8(new u8(b[i+7]))), $0)))];
        case 0x2040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0x2041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0x2050: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0x2051: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0x2052: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0x2053: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0x205c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(new f64(new Mem64((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))))];
        case 0x2076: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x2077: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x207f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[8], new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x2800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7]))))), new Mov($0, (new Add($0, new i8(-((b[i+7]) << 24 >> 24)))))];
        case 0x2801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)))))), new Mov($0, (new Add($0, new i32(-((((((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)) >>> 0)) >> 0)))))];
        case 0x2802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7]))))), new Mov($0, (new Add($0, new i8(-((b[i+7]) << 24 >> 24)))))];
        case 0x2803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i32(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+7])))))), new Mov($0, (new Add($0, new i32(-((((b[i+7]) << 24 >> 24)) >> 0)))))];
        case 0x2840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u8($0), new i8(new u8(b[i+7])))))];
        case 0x2841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u32($0), new i8(new u8(b[i+7])))))];
        case 0x2850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u8($0), new u8(1))))];
        case 0x2851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u32($0), new u8(1))))];
        case 0x2852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u8($0), R8[1])))];
        case 0x2853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u32($0), R8[1])))];
        case 0x2859: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[49], new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x285c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add(new f64(new Mem64((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Neg(new f64($0))))))];
        case 0x285f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem64((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x2876: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x2877: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x3000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
        case 0x3001: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0x3002: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
        case 0x3003: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
        case 0x3040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0x3041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0x3050: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0x3051: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0x3052: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0x3053: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0x305c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Div($0, new f64(new Mem64((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x3076: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x3077: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x307f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x3800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7])))))];
        case 0x3801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0x3802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7])))))];
        case 0x3803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i32(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+7]))))))];
        case 0x3840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new i8(new u8(b[i+7])))))];
        case 0x3841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new i8(new u8(b[i+7])))))];
        case 0x3850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new u8(1))))];
        case 0x3851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new u8(1))))];
        case 0x3852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, R8[1])))];
        case 0x3853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, R8[1])))];
        case 0x3859: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[49])];
        case 0x385c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Div(new f64(new Mem64((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), $0)))];
        case 0x385d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[48])];
        case 0x385f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i64($0))];
        case 0x3876: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x3877: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x4000: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add($0, new i8(new u8(b[i+4])))))];
        case 0x4001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add($0, new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x4002: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add($0, new i8(new u8(b[i+4])))))];
        case 0x4003: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add($0, new i8(new u8(b[i+4])))))];
        case 0x400f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x4040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x4041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x4046: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), new i8(new u8(b[i+4])))];
        case 0x4047: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))];
        case 0x4050: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x4051: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x4052: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x4053: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x4058: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f32(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))))))];
        case 0x4059: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f32(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x405a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x405b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))))];
        case 0x405c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f64(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))))))];
        case 0x405d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f64(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x405e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x405f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))))];
        case 0x4076: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), new i8(new u8(b[i+4])))), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x4077: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x407e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add(new u8($0), new u8(1))))];
        case 0x407f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add($0, new u8(1))))];
        case 0x4800: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or(new u8(new u8(b[i+4])), $0)))];
        case 0x4801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))), $0)))];
        case 0x4802: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or(new u8(new u8(b[i+4])), $0)))];
        case 0x4803: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or(new u32(new i8(new u8(b[i+4]))), $0)))];
        case 0x4840: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x4841: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x4850: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x4851: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x4852: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x4853: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x4858: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f32(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))))))];
        case 0x485a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x485c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f64(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))))))];
        case 0x485e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x487e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add($0, new i8(-1))))];
        case 0x487f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add($0, new i32(-1))))];
        case 0x5000: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add((new Add($0, new i8(new u8(b[i+4])))), R1[1])))];
        case 0x5001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add((new Add($0, new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))), R1[1])))];
        case 0x5002: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add((new Add($0, new i8(new u8(b[i+4])))), R1[1])))];
        case 0x5003: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add((new Add($0, new i8(new u8(b[i+4])))), R1[1])))];
        case 0x5040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x5041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x5050: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x5051: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x5052: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x5053: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x5059: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), new f32(R80[0]))];
        case 0x505c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x505d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), new f64(R80[0]))];
        case 0x505e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x505f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), new i16(R80[0]))];
        case 0x5076: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Not($0)))];
        case 0x5077: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Not($0)))];
        case 0x507f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 4)))), new Mov($1, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))];
        case 0x5800: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add((new Add($0, new i8(-((b[i+4]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x5801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add((new Add($0, new i32(-((((((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)) >>> 0)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x5802: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add((new Add($0, new i8(-((b[i+4]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x5803: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add((new Add($0, new i32(-((((b[i+4]) << 24 >> 24)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x5840: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x5841: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x5850: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x5851: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x5852: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x5853: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x5859: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), new f32($0))];
        case 0x585c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x585d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), new f64($0))];
        case 0x585e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x585f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), new i16($0))];
        case 0x5876: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Neg($0)))];
        case 0x5877: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Neg($0)))];
        case 0x6000: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new And(new u8(new u8(b[i+4])), $0)))];
        case 0x6001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new And(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))), $0)))];
        case 0x6002: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new And(new u8(new u8(b[i+4])), $0)))];
        case 0x6003: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new And(new u32(new i8(new u8(b[i+4]))), $0)))];
        case 0x6040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shl($0, new i8(new u8(b[i+4])))))];
        case 0x6041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shl($0, new i8(new u8(b[i+4])))))];
        case 0x6050: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shl($0, new u8(1))))];
        case 0x6051: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shl($0, new u8(1))))];
        case 0x6052: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shl($0, R8[1])))];
        case 0x6053: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shl($0, R8[1])))];
        case 0x605c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(new f64(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))))))))];
        case 0x6076: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x6077: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x607f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[8], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))];
        case 0x6800: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), new i8(new u8(b[i+4]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+4]))))), new Mov($0, (new Add($0, new i8(-((b[i+4]) << 24 >> 24)))))];
        case 0x6801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), new Mov($0, (new Add($0, new i32(-((((((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)) >>> 0)) >> 0)))))];
        case 0x6802: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), new i8(new u8(b[i+4]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+4]))))), new Mov($0, (new Add($0, new i8(-((b[i+4]) << 24 >> 24)))))];
        case 0x6803: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), new i32(new i8(new u8(b[i+4])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+4])))))), new Mov($0, (new Add($0, new i32(-((((b[i+4]) << 24 >> 24)) >> 0)))))];
        case 0x6840: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shr(new u8($0), new i8(new u8(b[i+4])))))];
        case 0x6841: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shr(new u32($0), new i8(new u8(b[i+4])))))];
        case 0x6850: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shr(new u8($0), new u8(1))))];
        case 0x6851: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shr(new u32($0), new u8(1))))];
        case 0x6852: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shr(new u8($0), R8[1])))];
        case 0x6853: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shr(new u32($0), R8[1])))];
        case 0x6859: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[49], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))];
        case 0x685c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add(new f64(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Neg(new f64($0))))))];
        case 0x685f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))))];
        case 0x6876: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x6877: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x7000: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Xor($0, new i8(new u8(b[i+4])))))];
        case 0x7001: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Xor($0, new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x7002: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Xor($0, new i8(new u8(b[i+4])))))];
        case 0x7003: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Xor($0, new i8(new u8(b[i+4])))))];
        case 0x7040: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shl($0, new i8(new u8(b[i+4])))))];
        case 0x7041: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shl($0, new i8(new u8(b[i+4])))))];
        case 0x7050: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shl($0, new u8(1))))];
        case 0x7051: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shl($0, new u8(1))))];
        case 0x7052: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shl($0, R8[1])))];
        case 0x7053: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shl($0, R8[1])))];
        case 0x705c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Div($0, new f64(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))))))];
        case 0x7076: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x7077: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x707f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))];
        case 0x7800: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), new i8(new u8(b[i+4]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+4])))))];
        case 0x7801: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x7802: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), new i8(new u8(b[i+4]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+4])))))];
        case 0x7803: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), new i32(new i8(new u8(b[i+4])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+4]))))))];
        case 0x7840: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shr($0, new i8(new u8(b[i+4])))))];
        case 0x7841: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shr($0, new i8(new u8(b[i+4])))))];
        case 0x7850: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shr($0, new u8(1))))];
        case 0x7851: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shr($0, new u8(1))))];
        case 0x7852: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shr($0, R8[1])))];
        case 0x7853: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Shr($0, R8[1])))];
        case 0x7859: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), R16[49])];
        case 0x785c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Div(new f64(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), $0)))];
        case 0x785d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), R16[48])];
        case 0x785f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), new i64($0))];
        case 0x7876: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x7877: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x8000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add($0, new i8(new u8(b[i+7])))))];
        case 0x8001: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add($0, new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0x8002: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add($0, new i8(new u8(b[i+7])))))];
        case 0x8003: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add($0, new i8(new u8(b[i+7])))))];
        case 0x800f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x8040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x8041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x8046: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new i8(new u8(b[i+7])))];
        case 0x8047: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))];
        case 0x8050: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x8051: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x8052: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x8053: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x8058: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f32(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))))];
        case 0x8059: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f32(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0x805a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0x805b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x805c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f64(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))))];
        case 0x805d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f64(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0x805e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0x805f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x8076: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new i8(new u8(b[i+7])))), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x8077: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x807e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add(new u8($0), new u8(1))))];
        case 0x807f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add($0, new u8(1))))];
        case 0x8800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or(new u8(new u8(b[i+7])), $0)))];
        case 0x8801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or(new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))), $0)))];
        case 0x8802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or(new u8(new u8(b[i+7])), $0)))];
        case 0x8803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or(new u32(new i8(new u8(b[i+7]))), $0)))];
        case 0x8840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x8841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x8850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x8851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x8852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x8853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x8858: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f32(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))))];
        case 0x885a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0x885c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f64(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))))];
        case 0x885e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0x887e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add($0, new i8(-1))))];
        case 0x887f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add($0, new i32(-1))))];
        case 0x9000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
        case 0x9001: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add((new Add($0, new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))), R1[1])))];
        case 0x9002: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
        case 0x9003: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
        case 0x9040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x9041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x9050: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x9051: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x9052: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x9053: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x9059: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new f32(R80[0]))];
        case 0x905c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x905d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new f64(R80[0]))];
        case 0x905e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x905f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new i16(R80[0]))];
        case 0x9076: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Not($0)))];
        case 0x9077: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Not($0)))];
        case 0x907f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 7)))), new Mov($1, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x9800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add((new Add($0, new i8(-((b[i+7]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x9801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add((new Add($0, new i32(-((((((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)) >>> 0)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x9802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add((new Add($0, new i8(-((b[i+7]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x9803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add((new Add($0, new i32(-((((b[i+7]) << 24 >> 24)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x9840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x9841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x9850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x9851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x9852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x9853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x9859: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new f32($0))];
        case 0x985c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x985d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new f64($0))];
        case 0x985e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x985f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new i16($0))];
        case 0x9876: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Neg($0)))];
        case 0x9877: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Neg($0)))];
        case 0xa000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new And(new u8(new u8(b[i+7])), $0)))];
        case 0xa001: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new And(new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))), $0)))];
        case 0xa002: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new And(new u8(new u8(b[i+7])), $0)))];
        case 0xa003: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new And(new u32(new i8(new u8(b[i+7]))), $0)))];
        case 0xa040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0xa041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0xa050: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shl($0, new u8(1))))];
        case 0xa051: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shl($0, new u8(1))))];
        case 0xa052: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shl($0, R8[1])))];
        case 0xa053: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shl($0, R8[1])))];
        case 0xa05c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(new f64(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))))))];
        case 0xa076: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0xa077: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0xa07f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[8], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xa800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7]))))), new Mov($0, (new Add($0, new i8(-((b[i+7]) << 24 >> 24)))))];
        case 0xa801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)))))), new Mov($0, (new Add($0, new i32(-((((((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)) >>> 0)) >> 0)))))];
        case 0xa802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7]))))), new Mov($0, (new Add($0, new i8(-((b[i+7]) << 24 >> 24)))))];
        case 0xa803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), new i32(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+7])))))), new Mov($0, (new Add($0, new i32(-((((b[i+7]) << 24 >> 24)) >> 0)))))];
        case 0xa840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shr(new u8($0), new i8(new u8(b[i+7])))))];
        case 0xa841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shr(new u32($0), new i8(new u8(b[i+7])))))];
        case 0xa850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shr(new u8($0), new u8(1))))];
        case 0xa851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shr(new u32($0), new u8(1))))];
        case 0xa852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shr(new u8($0), R8[1])))];
        case 0xa853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shr(new u32($0), R8[1])))];
        case 0xa859: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[49], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xa85c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add(new f64(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Neg(new f64($0))))))];
        case 0xa85f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0xa876: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0xa877: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0xb000: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
        case 0xb001: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Xor($0, new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0xb002: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
        case 0xb003: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
        case 0xb040: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0xb041: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0xb050: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shl($0, new u8(1))))];
        case 0xb051: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shl($0, new u8(1))))];
        case 0xb052: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shl($0, R8[1])))];
        case 0xb053: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shl($0, R8[1])))];
        case 0xb05c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Div($0, new f64(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))))];
        case 0xb076: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0xb077: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0xb07f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xb800: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7])))))];
        case 0xb801: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0xb802: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7])))))];
        case 0xb803: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), new i32(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+7]))))))];
        case 0xb840: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shr($0, new i8(new u8(b[i+7])))))];
        case 0xb841: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shr($0, new i8(new u8(b[i+7])))))];
        case 0xb850: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shr($0, new u8(1))))];
        case 0xb851: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shr($0, new u8(1))))];
        case 0xb852: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shr($0, R8[1])))];
        case 0xb853: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Shr($0, R8[1])))];
        case 0xb859: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R16[49])];
        case 0xb85c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Div(new f64(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), $0)))];
        case 0xb85d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R16[48])];
        case 0xb85f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new i64($0))];
        case 0xb876: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0xb877: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
    }

    if((((b[i+1] | ((((b[i+2] & 7) & 0xffff) << 8) & 0xffff)) & 0xffff) & 0x707) === 0x504)
    switch(((b[i] | ((b[i+1] << 8) & 0xffff)) & 0xffff) & 0xc0ff) {
        case 0x0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x2: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x3: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x9: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0xa: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xb: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x10: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x11: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x12: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R1[1])))];
        case 0x13: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R1[1])))];
        case 0x18: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, (new Neg(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i8(R1[1]))))))];
        case 0x19: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, (new Neg(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i32(R1[1]))))))];
        case 0x1a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), (new Neg(new i8(R1[1]))))))];
        case 0x1b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), (new Neg(new i32(R1[1]))))))];
        case 0x20: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x21: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x22: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x23: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x28: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x29: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x2a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x2b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x30: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x31: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x32: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x33: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x38: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x39: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x3a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x3b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x69: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0x6b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i32(new i8(new u8(b[i+7]))))))];
        case 0x84: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x85: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x86: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($2 = (new Register8)), ($0 = new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov($0, ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x87: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($2 = (new Register32)), ($0 = new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov($0, ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x88: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x89: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x8a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x8b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x8c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        case 0x8d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x8e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)], new Mem16((new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0xc4: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[16], new Mem16(($0 = (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0xc5: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[19], new Mem16(($0 = (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0x4000: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4001: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4002: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x4003: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x4008: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4009: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Or($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x400a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x400b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x4010: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add((new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x4011: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add((new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x4012: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))), R1[1])))];
        case 0x4013: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))), R1[1])))];
        case 0x4018: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add((new Add($0, (new Neg(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i8(R1[1]))))))];
        case 0x4019: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Add((new Add($0, (new Neg(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i32(R1[1]))))))];
        case 0x401a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))), (new Neg(new i8(R1[1]))))))];
        case 0x401b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))), (new Neg(new i32(R1[1]))))))];
        case 0x4020: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new And($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4021: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new And($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4022: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x4023: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x4028: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x4029: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x402a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x402b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x4030: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Xor($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4031: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), (new Xor($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4032: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x4033: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))];
        case 0x4038: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x4039: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x403a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x403b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x4069: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x406b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), new i32(new i8(new u8(b[i+4]))))))];
        case 0x4084: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x4085: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x4086: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($2 = (new Register8)), ($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))), new Mov($0, ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x4087: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($2 = (new Register32)), ($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))), new Mov($0, ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x4088: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x4089: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x408a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))];
        case 0x408b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))];
        case 0x408c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        case 0x408d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3])))))))];
        case 0x408e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))];
        case 0x40c4: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[16], new Mem16(($0 = (new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0x40c5: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[19], new Mem16(($0 = (new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i8(new u8(b[i+3]))))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0x8000: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8001: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8002: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0x8003: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0x8008: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8009: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Or($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x800a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0x800b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0x8010: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add((new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x8011: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add((new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x8012: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), R1[1])))];
        case 0x8013: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), R1[1])))];
        case 0x8018: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add((new Add($0, (new Neg(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i8(R1[1]))))))];
        case 0x8019: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Add((new Add($0, (new Neg(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i32(R1[1]))))))];
        case 0x801a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))), (new Neg(new i8(R1[1]))))))];
        case 0x801b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))), (new Neg(new i32(R1[1]))))))];
        case 0x8020: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new And($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8021: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new And($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8022: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0x8023: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0x8028: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x8029: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x802a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x802b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x8030: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Xor($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8031: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), (new Xor($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8032: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0x8033: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))];
        case 0x8038: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x8039: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x803a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x803b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x8069: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0x806b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new i32(new i8(new u8(b[i+7]))))))];
        case 0x8084: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x8085: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x8086: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($2 = (new Register8)), ($0 = new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov($0, ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x8087: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($2 = (new Register32)), ($0 = new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov($0, ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x8088: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x8089: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x808a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x808b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x808c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        case 0x808d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x808e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)], new Mem16((new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x80c4: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[16], new Mem16(($0 = (new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0x80c5: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[19], new Mem16(($0 = (new Add(R32[5], (new Add((new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
    }

    switch(((b[i] | ((b[i+1] << 8) & 0xffff)) & 0xffff) & 0xffff) {
        case 0x480: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add($0, new i8(new u8(b[i+3])))))];
        case 0x481: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add($0, new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x482: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add($0, new i8(new u8(b[i+3])))))];
        case 0x483: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add($0, new i8(new u8(b[i+3])))))];
        case 0x48f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x4c0: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x4c1: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x4c6: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), new i8(new u8(b[i+3])))];
        case 0x4c7: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))];
        case 0x4d0: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x4d1: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x4d2: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x4d3: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x4d8: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f32(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))))))];
        case 0x4d9: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f32(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0x4da: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0x4db: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))))];
        case 0x4dc: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))))))];
        case 0x4dd: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0x4de: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0x4df: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))))];
        case 0x4f6: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), new i8(new u8(b[i+3])))), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x4f7: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x4fe: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add(new u8($0), new u8(1))))];
        case 0x4ff: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add($0, new u8(1))))];
        case 0x580: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add($0, new i8(new u8(b[i+6])))))];
        case 0x581: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add($0, new i32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0))))))];
        case 0x582: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add($0, new i8(new u8(b[i+6])))))];
        case 0x583: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add($0, new i8(new u8(b[i+6])))))];
        case 0x58f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x5c0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shl($0, new i8(new u8(b[i+6])))), (new Shr($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x5c1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shl($0, new i8(new u8(b[i+6])))), (new Shr($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x5c6: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), new i8(new u8(b[i+6])))];
        case 0x5c7: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), new i32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0))))];
        case 0x5d0: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x5d1: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x5d2: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x5d3: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x5d8: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f32(new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))))];
        case 0x5d9: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f32(new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x5da: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x5db: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))];
        case 0x5dc: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f64(new Mem64(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))))];
        case 0x5dd: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f64(new Mem64(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x5de: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x5df: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))];
        case 0x5f6: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), new i8(new u8(b[i+6])))), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x5f7: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), new i32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0))))), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x5fe: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add(new u8($0), new u8(1))))];
        case 0x5ff: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add($0, new u8(1))))];
        case 0xc80: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or(new u8(new u8(b[i+3])), $0)))];
        case 0xc81: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))), $0)))];
        case 0xc82: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or(new u8(new u8(b[i+3])), $0)))];
        case 0xc83: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or(new u32(new i8(new u8(b[i+3]))), $0)))];
        case 0xcc0: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shr($0, new i8(new u8(b[i+3])))), (new Shl($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0xcc1: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shr($0, new i8(new u8(b[i+3])))), (new Shl($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0xcd0: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0xcd1: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0xcd2: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0xcd3: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0xcd8: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f32(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))))))];
        case 0xcda: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0xcdc: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))))))];
        case 0xcde: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0xcfe: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add($0, new i8(-1))))];
        case 0xcff: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add($0, new i32(-1))))];
        case 0xd80: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or(new u8(new u8(b[i+6])), $0)))];
        case 0xd81: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or(new u32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0))), $0)))];
        case 0xd82: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or(new u8(new u8(b[i+6])), $0)))];
        case 0xd83: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or(new u32(new i8(new u8(b[i+6]))), $0)))];
        case 0xdc0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shr($0, new i8(new u8(b[i+6])))), (new Shl($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0xdc1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shr($0, new i8(new u8(b[i+6])))), (new Shl($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0xdd0: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0xdd1: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0xdd2: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0xdd3: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0xdd8: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f32(new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))))];
        case 0xdda: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0xddc: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f64(new Mem64(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))))];
        case 0xdde: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0xdfe: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add($0, new i8(-1))))];
        case 0xdff: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add($0, new i32(-1))))];
        case 0x1480: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add((new Add($0, new i8(new u8(b[i+3])))), R1[1])))];
        case 0x1481: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add((new Add($0, new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), R1[1])))];
        case 0x1482: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add((new Add($0, new i8(new u8(b[i+3])))), R1[1])))];
        case 0x1483: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add((new Add($0, new i8(new u8(b[i+3])))), R1[1])))];
        case 0x14c0: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x14c1: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x14d0: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x14d1: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x14d2: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x14d3: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x14d9: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), new f32(R80[0]))];
        case 0x14dc: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x14dd: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), new f64(R80[0]))];
        case 0x14de: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x14df: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), new i16(R80[0]))];
        case 0x14f6: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Not($0)))];
        case 0x14f7: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Not($0)))];
        case 0x14ff: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 3)))), new Mov($1, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))];
        case 0x1580: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add((new Add($0, new i8(new u8(b[i+6])))), R1[1])))];
        case 0x1581: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add((new Add($0, new i32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0))))), R1[1])))];
        case 0x1582: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add((new Add($0, new i8(new u8(b[i+6])))), R1[1])))];
        case 0x1583: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add((new Add($0, new i8(new u8(b[i+6])))), R1[1])))];
        case 0x15c0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shl($0, new i8(new u8(b[i+6])))), (new Shr($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x15c1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shl($0, new i8(new u8(b[i+6])))), (new Shr($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x15d0: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x15d1: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x15d2: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x15d3: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x15d9: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), new f32(R80[0]))];
        case 0x15dc: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x15dd: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem64(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), new f64(R80[0]))];
        case 0x15de: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x15df: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), new i16(R80[0]))];
        case 0x15f6: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Not($0)))];
        case 0x15f7: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Not($0)))];
        case 0x15ff: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 6)))), new Mov($1, new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))];
        case 0x1c80: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add((new Add($0, new i8(-((b[i+3]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x1c81: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add((new Add($0, new i32(-((((((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)) >>> 0)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x1c82: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add((new Add($0, new i8(-((b[i+3]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x1c83: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add((new Add($0, new i32(-((((b[i+3]) << 24 >> 24)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x1cc0: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shr($0, new i8(new u8(b[i+3])))), (new Shl($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x1cc1: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shr($0, new i8(new u8(b[i+3])))), (new Shl($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x1cd0: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x1cd1: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x1cd2: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x1cd3: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x1cd9: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), new f32($0))];
        case 0x1cdc: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x1cdd: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), new f64($0))];
        case 0x1cde: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x1cdf: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), new i16($0))];
        case 0x1cf6: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Neg($0)))];
        case 0x1cf7: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Neg($0)))];
        case 0x1d80: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add((new Add($0, new i8(-((b[i+6]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x1d81: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add((new Add($0, new i32(-((((((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0)) >>> 0)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x1d82: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add((new Add($0, new i8(-((b[i+6]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x1d83: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add((new Add($0, new i32(-((((b[i+6]) << 24 >> 24)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x1dc0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shr($0, new i8(new u8(b[i+6])))), (new Shl($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x1dc1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shr($0, new i8(new u8(b[i+6])))), (new Shl($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x1dd0: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x1dd1: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x1dd2: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x1dd3: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x1dd9: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), new f32($0))];
        case 0x1ddc: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x1ddd: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), new f64($0))];
        case 0x1dde: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x1ddf: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), new i16($0))];
        case 0x1df6: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Neg($0)))];
        case 0x1df7: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Neg($0)))];
        case 0x2480: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new And(new u8(new u8(b[i+3])), $0)))];
        case 0x2481: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new And(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))), $0)))];
        case 0x2482: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new And(new u8(new u8(b[i+3])), $0)))];
        case 0x2483: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new And(new u32(new i8(new u8(b[i+3]))), $0)))];
        case 0x24c0: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shl($0, new i8(new u8(b[i+3])))))];
        case 0x24c1: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shl($0, new i8(new u8(b[i+3])))))];
        case 0x24d0: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shl($0, new u8(1))))];
        case 0x24d1: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shl($0, new u8(1))))];
        case 0x24d2: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shl($0, R8[1])))];
        case 0x24d3: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shl($0, R8[1])))];
        case 0x24dc: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))))))))];
        case 0x24f6: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0x24f7: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0x24ff: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[8], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))];
        case 0x2580: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new And(new u8(new u8(b[i+6])), $0)))];
        case 0x2581: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new And(new u32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0))), $0)))];
        case 0x2582: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new And(new u8(new u8(b[i+6])), $0)))];
        case 0x2583: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new And(new u32(new i8(new u8(b[i+6]))), $0)))];
        case 0x25c0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shl($0, new i8(new u8(b[i+6])))))];
        case 0x25c1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shl($0, new i8(new u8(b[i+6])))))];
        case 0x25d0: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shl($0, new u8(1))))];
        case 0x25d1: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shl($0, new u8(1))))];
        case 0x25d2: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shl($0, R8[1])))];
        case 0x25d3: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shl($0, R8[1])))];
        case 0x25dc: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(new f64(new Mem64(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))))))];
        case 0x25f6: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x25f7: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x25ff: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R32[8], new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))];
        case 0x2c80: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), new i8(new u8(b[i+3]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+3]))))), new Mov($0, (new Add($0, new i8(-((b[i+3]) << 24 >> 24)))))];
        case 0x2c81: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mov($0, (new Add($0, new i32(-((((((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)) >>> 0)) >> 0)))))];
        case 0x2c82: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), new i8(new u8(b[i+3]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+3]))))), new Mov($0, (new Add($0, new i8(-((b[i+3]) << 24 >> 24)))))];
        case 0x2c83: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), new i32(new i8(new u8(b[i+3])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+3])))))), new Mov($0, (new Add($0, new i32(-((((b[i+3]) << 24 >> 24)) >> 0)))))];
        case 0x2cc0: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shr(new u8($0), new i8(new u8(b[i+3])))))];
        case 0x2cc1: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shr(new u32($0), new i8(new u8(b[i+3])))))];
        case 0x2cd0: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shr(new u8($0), new u8(1))))];
        case 0x2cd1: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shr(new u32($0), new u8(1))))];
        case 0x2cd2: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shr(new u8($0), R8[1])))];
        case 0x2cd3: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shr(new u32($0), R8[1])))];
        case 0x2cd9: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[49], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))];
        case 0x2cdc: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Add(new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Neg(new f64($0))))))];
        case 0x2cdf: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))))];
        case 0x2cf6: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0x2cf7: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0x2d80: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), new i8(new u8(b[i+6]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+6]))))), new Mov($0, (new Add($0, new i8(-((b[i+6]) << 24 >> 24)))))];
        case 0x2d81: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), new i32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0)))))), new Mov($0, (new Add($0, new i32(-((((((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0)) >>> 0)) >> 0)))))];
        case 0x2d82: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), new i8(new u8(b[i+6]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+6]))))), new Mov($0, (new Add($0, new i8(-((b[i+6]) << 24 >> 24)))))];
        case 0x2d83: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), new i32(new i8(new u8(b[i+6])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+6])))))), new Mov($0, (new Add($0, new i32(-((((b[i+6]) << 24 >> 24)) >> 0)))))];
        case 0x2dc0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shr(new u8($0), new i8(new u8(b[i+6])))))];
        case 0x2dc1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shr(new u32($0), new i8(new u8(b[i+6])))))];
        case 0x2dd0: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shr(new u8($0), new u8(1))))];
        case 0x2dd1: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shr(new u32($0), new u8(1))))];
        case 0x2dd2: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shr(new u8($0), R8[1])))];
        case 0x2dd3: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shr(new u32($0), R8[1])))];
        case 0x2dd9: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[49], new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))];
        case 0x2ddc: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Add(new f64(new Mem64(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Neg(new f64($0))))))];
        case 0x2ddf: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem64(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))];
        case 0x2df6: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x2df7: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x3480: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Xor($0, new i8(new u8(b[i+3])))))];
        case 0x3481: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Xor($0, new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x3482: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Xor($0, new i8(new u8(b[i+3])))))];
        case 0x3483: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Xor($0, new i8(new u8(b[i+3])))))];
        case 0x34c0: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shl($0, new i8(new u8(b[i+3])))))];
        case 0x34c1: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shl($0, new i8(new u8(b[i+3])))))];
        case 0x34d0: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shl($0, new u8(1))))];
        case 0x34d1: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shl($0, new u8(1))))];
        case 0x34d2: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shl($0, R8[1])))];
        case 0x34d3: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shl($0, R8[1])))];
        case 0x34dc: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Div($0, new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))))))];
        case 0x34f6: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0x34f7: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0x34ff: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))];
        case 0x3580: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Xor($0, new i8(new u8(b[i+6])))))];
        case 0x3581: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Xor($0, new i32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0))))))];
        case 0x3582: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Xor($0, new i8(new u8(b[i+6])))))];
        case 0x3583: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Xor($0, new i8(new u8(b[i+6])))))];
        case 0x35c0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shl($0, new i8(new u8(b[i+6])))))];
        case 0x35c1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shl($0, new i8(new u8(b[i+6])))))];
        case 0x35d0: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shl($0, new u8(1))))];
        case 0x35d1: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shl($0, new u8(1))))];
        case 0x35d2: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shl($0, R8[1])))];
        case 0x35d3: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shl($0, R8[1])))];
        case 0x35dc: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Div($0, new f64(new Mem64(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))))];
        case 0x35f6: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x35f7: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x35ff: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))];
        case 0x3c80: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), new i8(new u8(b[i+3]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+3])))))];
        case 0x3c81: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x3c82: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), new i8(new u8(b[i+3]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+3])))))];
        case 0x3c83: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), new i32(new i8(new u8(b[i+3])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+3]))))))];
        case 0x3cc0: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shr($0, new i8(new u8(b[i+3])))))];
        case 0x3cc1: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shr($0, new i8(new u8(b[i+3])))))];
        case 0x3cd0: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shr($0, new u8(1))))];
        case 0x3cd1: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shr($0, new u8(1))))];
        case 0x3cd2: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shr($0, R8[1])))];
        case 0x3cd3: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Shr($0, R8[1])))];
        case 0x3cd9: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), R16[49])];
        case 0x3cdc: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Div(new f64(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), $0)))];
        case 0x3cdd: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), R16[48])];
        case 0x3cdf: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), new i64($0))];
        case 0x3cf6: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0x3cf7: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0x3d80: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), new i8(new u8(b[i+6]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+6])))))];
        case 0x3d81: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), new i32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0))))))];
        case 0x3d82: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), new i8(new u8(b[i+6]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+6])))))];
        case 0x3d83: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), new i32(new i8(new u8(b[i+6])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+6]))))))];
        case 0x3dc0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shr($0, new i8(new u8(b[i+6])))))];
        case 0x3dc1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shr($0, new i8(new u8(b[i+6])))))];
        case 0x3dd0: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shr($0, new u8(1))))];
        case 0x3dd1: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shr($0, new u8(1))))];
        case 0x3dd2: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shr($0, R8[1])))];
        case 0x3dd3: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Shr($0, R8[1])))];
        case 0x3dd9: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), R16[49])];
        case 0x3ddc: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Div(new f64(new Mem64(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), $0)))];
        case 0x3ddd: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), R16[48])];
        case 0x3ddf: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), new i64($0))];
        case 0x3df6: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x3df7: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x4480: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add($0, new i8(new u8(b[i+4])))))];
        case 0x4481: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add($0, new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x4482: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add($0, new i8(new u8(b[i+4])))))];
        case 0x4483: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add($0, new i8(new u8(b[i+4])))))];
        case 0x448f: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x44c0: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x44c1: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x44c6: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), new i8(new u8(b[i+4])))];
        case 0x44c7: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))];
        case 0x44d0: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x44d1: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x44d2: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x44d3: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x44d8: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f32(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))))))];
        case 0x44d9: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f32(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x44da: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x44db: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))))];
        case 0x44dc: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f64(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))))))];
        case 0x44dd: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f64(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x44de: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x44df: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))))];
        case 0x44f6: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), new i8(new u8(b[i+4])))), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x44f7: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x44fe: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add(new u8($0), new u8(1))))];
        case 0x44ff: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add($0, new u8(1))))];
        case 0x4c80: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or(new u8(new u8(b[i+4])), $0)))];
        case 0x4c81: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))), $0)))];
        case 0x4c82: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or(new u8(new u8(b[i+4])), $0)))];
        case 0x4c83: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or(new u32(new i8(new u8(b[i+4]))), $0)))];
        case 0x4cc0: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x4cc1: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x4cd0: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x4cd1: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x4cd2: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x4cd3: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x4cd8: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f32(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))))))];
        case 0x4cda: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x4cdc: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f64(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))))))];
        case 0x4cde: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x4cfe: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add($0, new i8(-1))))];
        case 0x4cff: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add($0, new i32(-1))))];
        case 0x5480: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i8(new u8(b[i+4])))), R1[1])))];
        case 0x5481: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))), R1[1])))];
        case 0x5482: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i8(new u8(b[i+4])))), R1[1])))];
        case 0x5483: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i8(new u8(b[i+4])))), R1[1])))];
        case 0x54c0: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x54c1: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new i8(new u8(b[i+4])))), (new Shr($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x54d0: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x54d1: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x54d2: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x54d3: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x54d9: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), new f32(R80[0]))];
        case 0x54dc: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x54dd: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), new f64(R80[0]))];
        case 0x54de: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x54df: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), new i16(R80[0]))];
        case 0x54f6: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Not($0)))];
        case 0x54f7: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Not($0)))];
        case 0x54ff: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 4)))), new Mov($1, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))];
        case 0x5c80: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i8(-((b[i+4]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x5c81: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i32(-((((((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)) >>> 0)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x5c82: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i8(-((b[i+4]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x5c83: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add((new Add($0, new i32(-((((b[i+4]) << 24 >> 24)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x5cc0: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x5cc1: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new i8(new u8(b[i+4])))), (new Shl($0, new u8(((((-((b[i+4]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x5cd0: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x5cd1: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x5cd2: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x5cd3: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x5cd9: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), new f32($0))];
        case 0x5cdc: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x5cdd: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), new f64($0))];
        case 0x5cde: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x5cdf: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), new i16($0))];
        case 0x5cf6: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Neg($0)))];
        case 0x5cf7: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Neg($0)))];
        case 0x6480: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new And(new u8(new u8(b[i+4])), $0)))];
        case 0x6481: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new And(new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))), $0)))];
        case 0x6482: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new And(new u8(new u8(b[i+4])), $0)))];
        case 0x6483: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new And(new u32(new i8(new u8(b[i+4]))), $0)))];
        case 0x64c0: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shl($0, new i8(new u8(b[i+4])))))];
        case 0x64c1: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shl($0, new i8(new u8(b[i+4])))))];
        case 0x64d0: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shl($0, new u8(1))))];
        case 0x64d1: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shl($0, new u8(1))))];
        case 0x64d2: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shl($0, R8[1])))];
        case 0x64d3: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shl($0, R8[1])))];
        case 0x64dc: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(new f64(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))))))))];
        case 0x64f6: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x64f7: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x64ff: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[8], new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))];
        case 0x6c80: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), new i8(new u8(b[i+4]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+4]))))), new Mov($0, (new Add($0, new i8(-((b[i+4]) << 24 >> 24)))))];
        case 0x6c81: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), new Mov($0, (new Add($0, new i32(-((((((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)) >>> 0)) >> 0)))))];
        case 0x6c82: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), new i8(new u8(b[i+4]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+4]))))), new Mov($0, (new Add($0, new i8(-((b[i+4]) << 24 >> 24)))))];
        case 0x6c83: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), new i32(new i8(new u8(b[i+4])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+4])))))), new Mov($0, (new Add($0, new i32(-((((b[i+4]) << 24 >> 24)) >> 0)))))];
        case 0x6cc0: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shr(new u8($0), new i8(new u8(b[i+4])))))];
        case 0x6cc1: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shr(new u32($0), new i8(new u8(b[i+4])))))];
        case 0x6cd0: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shr(new u8($0), new u8(1))))];
        case 0x6cd1: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shr(new u32($0), new u8(1))))];
        case 0x6cd2: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shr(new u8($0), R8[1])))];
        case 0x6cd3: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shr(new u32($0), R8[1])))];
        case 0x6cd9: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[49], new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))];
        case 0x6cdc: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Add(new f64(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Neg(new f64($0))))))];
        case 0x6cdf: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))))];
        case 0x6cf6: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x6cf7: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x7480: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Xor($0, new i8(new u8(b[i+4])))))];
        case 0x7481: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Xor($0, new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x7482: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Xor($0, new i8(new u8(b[i+4])))))];
        case 0x7483: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Xor($0, new i8(new u8(b[i+4])))))];
        case 0x74c0: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shl($0, new i8(new u8(b[i+4])))))];
        case 0x74c1: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shl($0, new i8(new u8(b[i+4])))))];
        case 0x74d0: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shl($0, new u8(1))))];
        case 0x74d1: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shl($0, new u8(1))))];
        case 0x74d2: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shl($0, R8[1])))];
        case 0x74d3: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shl($0, R8[1])))];
        case 0x74dc: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Div($0, new f64(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))))))];
        case 0x74f6: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x74f7: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x74ff: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))];
        case 0x770f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new FnCall('_mm_empty')];
        case 0x7c80: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), new i8(new u8(b[i+4]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+4])))))];
        case 0x7c81: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x7c82: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), new i8(new u8(b[i+4]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+4])))))];
        case 0x7c83: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), new i32(new i8(new u8(b[i+4])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+4]))))))];
        case 0x7cc0: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shr($0, new i8(new u8(b[i+4])))))];
        case 0x7cc1: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shr($0, new i8(new u8(b[i+4])))))];
        case 0x7cd0: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shr($0, new u8(1))))];
        case 0x7cd1: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shr($0, new u8(1))))];
        case 0x7cd2: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shr($0, R8[1])))];
        case 0x7cd3: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Shr($0, R8[1])))];
        case 0x7cd9: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), R16[49])];
        case 0x7cdc: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R80[0]), (new Div(new f64(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), $0)))];
        case 0x7cdd: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), R16[48])];
        case 0x7cdf: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), new i64($0))];
        case 0x7cf6: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x7cf7: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x800f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new If(R1[0], new Mov(($0 = R32[8]), (new Add($0, new i32(((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0) + ((_pfxLength + 6) << 24 >> 24))))))];
        case 0x810f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new If((new Not(R1[0])), new Mov(($0 = R32[8]), (new Add($0, new i32(((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0) + ((_pfxLength + 6) << 24 >> 24))))))];
        case 0x820f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new If(R1[1], new Mov(($0 = R32[8]), (new Add($0, new i32(((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0) + ((_pfxLength + 6) << 24 >> 24))))))];
        case 0x830f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new If((new Not(R1[1])), new Mov(($0 = R32[8]), (new Add($0, new i32(((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0) + ((_pfxLength + 6) << 24 >> 24))))))];
        case 0x840f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new If(R1[2], new Mov(($0 = R32[8]), (new Add($0, new i32(((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0) + ((_pfxLength + 6) << 24 >> 24))))))];
        case 0x8480: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+7])))))];
        case 0x8481: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0x8482: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+7])))))];
        case 0x8483: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+7])))))];
        case 0x848f: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x84c0: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x84c1: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x84c6: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i8(new u8(b[i+7])))];
        case 0x84c7: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))];
        case 0x84d0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x84d1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x84d2: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x84d3: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x84d8: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f32(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x84d9: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f32(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x84da: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x84db: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x84dc: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f64(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x84dd: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f64(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x84de: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x84df: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0x84f6: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i8(new u8(b[i+7])))), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x84f7: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x84fe: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add(new u8($0), new u8(1))))];
        case 0x84ff: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new u8(1))))];
        case 0x850f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new If((new Not(R1[2])), new Mov(($0 = R32[8]), (new Add($0, new i32(((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0) + ((_pfxLength + 6) << 24 >> 24))))))];
        case 0x860f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(($0 = R32[8]), (new Add($0, new i32(((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0) + ((_pfxLength + 6) << 24 >> 24))))))];
        case 0x870f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(($0 = R32[8]), (new Add($0, new i32(((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0) + ((_pfxLength + 6) << 24 >> 24))))))];
        case 0x880f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new If(R1[3], new Mov(($0 = R32[8]), (new Add($0, new i32(((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0) + ((_pfxLength + 6) << 24 >> 24))))))];
        case 0x890f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new If((new Not(R1[3])), new Mov(($0 = R32[8]), (new Add($0, new i32(((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0) + ((_pfxLength + 6) << 24 >> 24))))))];
        case 0x8a0f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new If(R1[4], new Mov(($0 = R32[8]), (new Add($0, new i32(((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0) + ((_pfxLength + 6) << 24 >> 24))))))];
        case 0x8b0f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new If((new Not(R1[4])), new Mov(($0 = R32[8]), (new Add($0, new i32(((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0) + ((_pfxLength + 6) << 24 >> 24))))))];
        case 0x8c0f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(($0 = R32[8]), (new Add($0, new i32(((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0) + ((_pfxLength + 6) << 24 >> 24))))))];
        case 0x8c80: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u8(new u8(b[i+7])), $0)))];
        case 0x8c81: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))), $0)))];
        case 0x8c82: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u8(new u8(b[i+7])), $0)))];
        case 0x8c83: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or(new u32(new i8(new u8(b[i+7]))), $0)))];
        case 0x8cc0: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x8cc1: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x8cd0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x8cd1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x8cd2: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x8cd3: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x8cd8: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f32(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x8cda: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8cdc: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f64(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0x8cde: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8cfe: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i8(-1))))];
        case 0x8cff: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, new i32(-1))))];
        case 0x8d0f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(($0 = R32[8]), (new Add($0, new i32(((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0) + ((_pfxLength + 6) << 24 >> 24))))))];
        case 0x8e0f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(($0 = R32[8]), (new Add($0, new i32(((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0) + ((_pfxLength + 6) << 24 >> 24))))))];
        case 0x8f0f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(($0 = R32[8]), (new Add($0, new i32(((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0) + ((_pfxLength + 6) << 24 >> 24))))))];
        case 0x9480: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
        case 0x9481: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))), R1[1])))];
        case 0x9482: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
        case 0x9483: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+7])))), R1[1])))];
        case 0x94c0: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x94c1: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+7])))), (new Shr($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x94d0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x94d1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x94d2: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x94d3: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x94d9: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new f32(R80[0]))];
        case 0x94dc: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x94dd: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new f64(R80[0]))];
        case 0x94de: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x94df: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16(R80[0]))];
        case 0x94f6: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Not($0)))];
        case 0x94f7: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Not($0)))];
        case 0x94ff: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 7)))), new Mov($1, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x9c80: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(-((b[i+7]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x9c81: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i32(-((((((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)) >>> 0)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x9c82: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i8(-((b[i+7]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x9c83: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, new i32(-((((b[i+7]) << 24 >> 24)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x9cc0: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x9cc1: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+7])))), (new Shl($0, new u8(((((-((b[i+7]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x9cd0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x9cd1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x9cd2: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x9cd3: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x9cd9: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new f32($0))];
        case 0x9cdc: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x9cdd: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new f64($0))];
        case 0x9cde: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x9cdf: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i16($0))];
        case 0x9cf6: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Neg($0)))];
        case 0x9cf7: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Neg($0)))];
        case 0xa20f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new FnCall('CPUID', R32[0], R32[3], R32[1], R32[2])];
        case 0xa480: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u8(new u8(b[i+7])), $0)))];
        case 0xa481: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))), $0)))];
        case 0xa482: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u8(new u8(b[i+7])), $0)))];
        case 0xa483: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And(new u32(new i8(new u8(b[i+7]))), $0)))];
        case 0xa4c0: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0xa4c1: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0xa4d0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0xa4d1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0xa4d2: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0xa4d3: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0xa4dc: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(new f64(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))))];
        case 0xa4f6: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xa4f7: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xa4ff: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[8], new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0xac80: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7]))))), new Mov($0, (new Add($0, new i8(-((b[i+7]) << 24 >> 24)))))];
        case 0xac81: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)))))), new Mov($0, (new Add($0, new i32(-((((((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)) >>> 0)) >> 0)))))];
        case 0xac82: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7]))))), new Mov($0, (new Add($0, new i8(-((b[i+7]) << 24 >> 24)))))];
        case 0xac83: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i32(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+7])))))), new Mov($0, (new Add($0, new i32(-((((b[i+7]) << 24 >> 24)) >> 0)))))];
        case 0xacc0: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u8($0), new i8(new u8(b[i+7])))))];
        case 0xacc1: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u32($0), new i8(new u8(b[i+7])))))];
        case 0xacd0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u8($0), new u8(1))))];
        case 0xacd1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u32($0), new u8(1))))];
        case 0xacd2: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u8($0), R8[1])))];
        case 0xacd3: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr(new u32($0), R8[1])))];
        case 0xacd9: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[49], new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0xacdc: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Add(new f64(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Neg(new f64($0))))))];
        case 0xacdf: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))];
        case 0xacf6: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xacf7: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xb480: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
        case 0xb481: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0xb482: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
        case 0xb483: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+7])))))];
        case 0xb4c0: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0xb4c1: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+7])))))];
        case 0xb4d0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0xb4d1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0xb4d2: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0xb4d3: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0xb4dc: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Div($0, new f64(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))))))];
        case 0xb4f6: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xb4f7: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xb4ff: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0xbc80: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7])))))];
        case 0xbc81: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0xbc82: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i8(new u8(b[i+7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+7])))))];
        case 0xbc83: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), new i32(new i8(new u8(b[i+7])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+7]))))))];
        case 0xbcc0: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new i8(new u8(b[i+7])))))];
        case 0xbcc1: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new i8(new u8(b[i+7])))))];
        case 0xbcd0: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new u8(1))))];
        case 0xbcd1: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, new u8(1))))];
        case 0xbcd2: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, R8[1])))];
        case 0xbcd3: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Shr($0, R8[1])))];
        case 0xbcd9: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[49])];
        case 0xbcdc: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R80[0]), (new Div(new f64(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), $0)))];
        case 0xbcdd: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[48])];
        case 0xbcdf: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i64($0))];
        case 0xbcf6: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xbcf7: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0xc0d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, $0)))];
        case 0xc0d9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), $0)];
        case 0xc0de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, $0))), new Mov(($1 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $1)];
        case 0xc1d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, R80[1])))];
        case 0xc1d9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[0], R80[1])];
        case 0xc1de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[1]), (new Add(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xc2d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, R80[2])))];
        case 0xc2d9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[0], R80[2])];
        case 0xc2de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[2]), (new Add(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xc3d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, R80[3])))];
        case 0xc3d9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[0], R80[3])];
        case 0xc3de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[3]), (new Add(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xc4d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, R80[4])))];
        case 0xc4d9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[0], R80[4])];
        case 0xc4de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[4]), (new Add(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xc5d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, R80[5])))];
        case 0xc5d9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[0], R80[5])];
        case 0xc5de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[5]), (new Add(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xc6d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, R80[6])))];
        case 0xc6d9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[0], R80[6])];
        case 0xc6de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[6]), (new Add(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xc7d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, R80[7])))];
        case 0xc7d9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[0], R80[7])];
        case 0xc7de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[7]), (new Add(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov($0, $2)];
        case 0xc80f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[0]), (new Or((new Or((new Or((new And(new u32((new Shr($0, new u8(8)))), new u32(65280))), (new Shr($0, new u8(24))))), (new And(new u32((new Shl($0, new u8(8)))), new u32(0xff000))))), (new Shl($0, new u8(24))))))];
        case 0xc8d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, $0)))];
        case 0xc8d9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($1 = (new Register80)), ($0 = R80[0])), new Mov($0, $0), new Mov($0, $1)];
        case 0xc8de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, $0))), new Mov(($1 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $1)];
        case 0xc90f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[1]), (new Or((new Or((new Or((new And(new u32((new Shr($0, new u8(8)))), new u32(65280))), (new Shr($0, new u8(24))))), (new And(new u32((new Shl($0, new u8(8)))), new u32(0xff000))))), (new Shl($0, new u8(24))))))];
        case 0xc9d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, R80[1])))];
        case 0xc9d9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($2 = (new Register80)), ($0 = R80[0])), new Mov($0, ($1 = R80[1])), new Mov($1, $2)];
        case 0xc9de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[1]), (new Mul(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xca0f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[2]), (new Or((new Or((new Or((new And(new u32((new Shr($0, new u8(8)))), new u32(65280))), (new Shr($0, new u8(24))))), (new And(new u32((new Shl($0, new u8(8)))), new u32(0xff000))))), (new Shl($0, new u8(24))))))];
        case 0xcad8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, R80[2])))];
        case 0xcad9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($2 = (new Register80)), ($0 = R80[0])), new Mov($0, ($1 = R80[2])), new Mov($1, $2)];
        case 0xcade: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[2]), (new Mul(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xcb0f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[3]), (new Or((new Or((new Or((new And(new u32((new Shr($0, new u8(8)))), new u32(65280))), (new Shr($0, new u8(24))))), (new And(new u32((new Shl($0, new u8(8)))), new u32(0xff000))))), (new Shl($0, new u8(24))))))];
        case 0xcbd8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, R80[3])))];
        case 0xcbd9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($2 = (new Register80)), ($0 = R80[0])), new Mov($0, ($1 = R80[3])), new Mov($1, $2)];
        case 0xcbde: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[3]), (new Mul(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xcc0f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[4]), (new Or((new Or((new Or((new And(new u32((new Shr($0, new u8(8)))), new u32(65280))), (new Shr($0, new u8(24))))), (new And(new u32((new Shl($0, new u8(8)))), new u32(0xff000))))), (new Shl($0, new u8(24))))))];
        case 0xccd8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, R80[4])))];
        case 0xccd9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($2 = (new Register80)), ($0 = R80[0])), new Mov($0, ($1 = R80[4])), new Mov($1, $2)];
        case 0xccde: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[4]), (new Mul(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xcd0f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[5]), (new Or((new Or((new Or((new And(new u32((new Shr($0, new u8(8)))), new u32(65280))), (new Shr($0, new u8(24))))), (new And(new u32((new Shl($0, new u8(8)))), new u32(0xff000))))), (new Shl($0, new u8(24))))))];
        case 0xcdd8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, R80[5])))];
        case 0xcdd9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($2 = (new Register80)), ($0 = R80[0])), new Mov($0, ($1 = R80[5])), new Mov($1, $2)];
        case 0xcdde: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[5]), (new Mul(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xce0f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[6]), (new Or((new Or((new Or((new And(new u32((new Shr($0, new u8(8)))), new u32(65280))), (new Shr($0, new u8(24))))), (new And(new u32((new Shl($0, new u8(8)))), new u32(0xff000))))), (new Shl($0, new u8(24))))))];
        case 0xced8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, R80[6])))];
        case 0xced9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($2 = (new Register80)), ($0 = R80[0])), new Mov($0, ($1 = R80[6])), new Mov($1, $2)];
        case 0xcede: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[6]), (new Mul(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xcf0f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[7]), (new Or((new Or((new Or((new And(new u32((new Shr($0, new u8(8)))), new u32(65280))), (new Shr($0, new u8(24))))), (new And(new u32((new Shl($0, new u8(8)))), new u32(0xff000))))), (new Shl($0, new u8(24))))))];
        case 0xcfd8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, R80[7])))];
        case 0xcfd9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($2 = (new Register80)), ($0 = R80[0])), new Mov($0, ($1 = R80[7])), new Mov($1, $2)];
        case 0xcfde: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[7]), (new Mul(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov($0, $2)];
        case 0xd0d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), $0))), new Mov(R1[51], (new Eq($0, $0)))];
        case 0xd0dd: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), $0)];
        case 0xd1d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = R80[1])))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0xd1dd: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[1], R80[0])];
        case 0xd2d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = R80[2])))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0xd2dd: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[2], R80[0])];
        case 0xd3d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = R80[3])))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0xd3dd: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[3], R80[0])];
        case 0xd4d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = R80[4])))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0xd4dd: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[4], R80[0])];
        case 0xd5d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = R80[5])))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0xd5dd: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[5], R80[0])];
        case 0xd6d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = R80[6])))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0xd6dd: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[6], R80[0])];
        case 0xd7d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = R80[7])))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0xd7dd: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[7], R80[0])];
        case 0xd8d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), $0))), new Mov(R1[51], (new Eq($0, $0))), new Mov(($1 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $1)];
        case 0xd8dd: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = (new Register80)), ($1 = R80[0])), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov($1, $0)];
        case 0xd9d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = R80[1])))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xd9dd: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(R80[1], $0)];
        case 0xd9de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = R80[1])))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(($3 = R80[7]), $2), new Mov(($4 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov($3, $4)];
        case 0xdad8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = R80[2])))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xdadd: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(R80[2], $0)];
        case 0xdbd8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = R80[3])))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xdbdd: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(R80[3], $0)];
        case 0xdcd8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = R80[4])))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xdcdd: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(R80[4], $0)];
        case 0xddd8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = R80[5])))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xdddd: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(R80[5], $0)];
        case 0xded8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = R80[6])))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xdedd: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(R80[6], $0)];
        case 0xdfd8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = R80[7])))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov($1, $2)];
        case 0xdfdd: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(($1 = R80[7]), $0), new Mov($1, $0)];
        case 0xe0d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[0], new f80(0))];
        case 0xe0d9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Neg($0)))];
        case 0xe0de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), new f80(0)), new Mov(($1 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $1)];
        case 0xe0df: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R16[0], R16[48])];
        case 0xe1d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(R80[1])))))];
        case 0xe1de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[1]), (new Add($0, (new Neg(($1 = R80[0])))))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xe2d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(R80[2])))))];
        case 0xe2de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[2]), (new Add($0, (new Neg(($1 = R80[0])))))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xe3d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(R80[3])))))];
        case 0xe3de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[3]), (new Add($0, (new Neg(($1 = R80[0])))))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xe4d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(R80[4])))))];
        case 0xe4de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[4]), (new Add($0, (new Neg(($1 = R80[0])))))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xe5d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(R80[5])))))];
        case 0xe5de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[5]), (new Add($0, (new Neg(($1 = R80[0])))))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xe6d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(R80[6])))))];
        case 0xe6de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[6]), (new Add($0, (new Neg(($1 = R80[0])))))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xe7d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(R80[7])))))];
        case 0xe7de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[7]), (new Add($0, (new Neg(($1 = R80[0])))))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov($0, $2)];
        case 0xe8d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[0], new f80(0))];
        case 0xe8d9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(1))];
        case 0xe8de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), new f80(0)), new Mov(($1 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $1)];
        case 0xe8df: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], (new Lt(($0 = R80[0]), $0))), new Mov(R1[2], (new Eq($0, $0))), new Mov(($1 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $1)];
        case 0xe9d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add(R80[1], (new Neg($0)))))];
        case 0xe9de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[1]), (new Add(($1 = R80[0]), (new Neg($0))))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xe9df: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], (new Lt(($0 = R80[0]), ($1 = R80[1])))), new Mov(R1[2], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xead8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add(R80[2], (new Neg($0)))))];
        case 0xeade: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[2]), (new Add(($1 = R80[0]), (new Neg($0))))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xeadf: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], (new Lt(($0 = R80[0]), ($1 = R80[2])))), new Mov(R1[2], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xebd8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add(R80[3], (new Neg($0)))))];
        case 0xebde: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[3]), (new Add(($1 = R80[0]), (new Neg($0))))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xebdf: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], (new Lt(($0 = R80[0]), ($1 = R80[3])))), new Mov(R1[2], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xecd8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add(R80[4], (new Neg($0)))))];
        case 0xecde: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[4]), (new Add(($1 = R80[0]), (new Neg($0))))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xecdf: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], (new Lt(($0 = R80[0]), ($1 = R80[4])))), new Mov(R1[2], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xedd8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add(R80[5], (new Neg($0)))))];
        case 0xedde: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[5]), (new Add(($1 = R80[0]), (new Neg($0))))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xeddf: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], (new Lt(($0 = R80[0]), ($1 = R80[5])))), new Mov(R1[2], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xeed8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add(R80[6], (new Neg($0)))))];
        case 0xeed9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(0))];
        case 0xeede: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[6]), (new Add(($1 = R80[0]), (new Neg($0))))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xeedf: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], (new Lt(($0 = R80[0]), ($1 = R80[6])))), new Mov(R1[2], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xefd8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add(R80[7], (new Neg($0)))))];
        case 0xefde: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[7]), (new Add(($1 = R80[0]), (new Neg($0))))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov($0, $2)];
        case 0xefdf: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], (new Lt(($0 = R80[0]), ($1 = R80[7])))), new Mov(R1[2], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov($1, $2)];
        case 0xf0d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div($0, $0)))];
        case 0xf0dc: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div($0, $0)))];
        case 0xf0de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div($0, $0))), new Mov(($1 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $1)];
        case 0xf0df: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], (new Lt(($0 = R80[0]), $0))), new Mov(R1[2], (new Eq($0, $0))), new Mov(($1 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $1)];
        case 0xf1d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div($0, R80[1])))];
        case 0xf1dc: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[1]), (new Div(R80[0], $0)))];
        case 0xf1de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[1]), (new Div($0, ($1 = R80[0])))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xf1df: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], (new Lt(($0 = R80[0]), ($1 = R80[1])))), new Mov(R1[2], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xf2d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div($0, R80[2])))];
        case 0xf2dc: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[2]), (new Div(R80[0], $0)))];
        case 0xf2de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[2]), (new Div($0, ($1 = R80[0])))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xf2df: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], (new Lt(($0 = R80[0]), ($1 = R80[2])))), new Mov(R1[2], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xf3d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div($0, R80[3])))];
        case 0xf3dc: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[3]), (new Div(R80[0], $0)))];
        case 0xf3de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[3]), (new Div($0, ($1 = R80[0])))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xf3df: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], (new Lt(($0 = R80[0]), ($1 = R80[3])))), new Mov(R1[2], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xf4d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div($0, R80[4])))];
        case 0xf4dc: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[4]), (new Div(R80[0], $0)))];
        case 0xf4de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[4]), (new Div($0, ($1 = R80[0])))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xf4df: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], (new Lt(($0 = R80[0]), ($1 = R80[4])))), new Mov(R1[2], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xf5d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div($0, R80[5])))];
        case 0xf5dc: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[5]), (new Div(R80[0], $0)))];
        case 0xf5de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[5]), (new Div($0, ($1 = R80[0])))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xf5df: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], (new Lt(($0 = R80[0]), ($1 = R80[5])))), new Mov(R1[2], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xf6d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div($0, R80[6])))];
        case 0xf6dc: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[6]), (new Div(R80[0], $0)))];
        case 0xf6de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[6]), (new Div($0, ($1 = R80[0])))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xf6df: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], (new Lt(($0 = R80[0]), ($1 = R80[6])))), new Mov(R1[2], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xf7d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div($0, R80[7])))];
        case 0xf7dc: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[7]), (new Div(R80[0], $0)))];
        case 0xf7de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[7]), (new Div($0, ($1 = R80[0])))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov($0, $2)];
        case 0xf7df: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], (new Lt(($0 = R80[0]), ($1 = R80[7])))), new Mov(R1[2], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov($1, $2)];
        case 0xf8d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div($0, $0)))];
        case 0xf8dc: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div($0, $0)))];
        case 0xf8de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div($0, $0))), new Mov(($1 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $1)];
        case 0xf9d8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div(R80[1], $0)))];
        case 0xf9dc: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[1]), (new Div($0, R80[0])))];
        case 0xf9de: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[1]), (new Div(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xfad8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div(R80[2], $0)))];
        case 0xfadc: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[2]), (new Div($0, R80[0])))];
        case 0xfade: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[2]), (new Div(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xfbd8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div(R80[3], $0)))];
        case 0xfbdc: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[3]), (new Div($0, R80[0])))];
        case 0xfbde: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[3]), (new Div(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xfcd8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div(R80[4], $0)))];
        case 0xfcdc: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[4]), (new Div($0, R80[0])))];
        case 0xfcde: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[4]), (new Div(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xfdd8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div(R80[5], $0)))];
        case 0xfddc: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[5]), (new Div($0, R80[0])))];
        case 0xfdde: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[5]), (new Div(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xfed8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div(R80[6], $0)))];
        case 0xfedc: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[6]), (new Div($0, R80[0])))];
        case 0xfede: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[6]), (new Div(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0xffd8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div(R80[7], $0)))];
        case 0xffdc: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[7]), (new Div($0, R80[0])))];
        case 0xffde: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[7]), (new Div(($1 = R80[0]), $0))), new Mov(($2 = (new Register80)), $1), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov($0, $2)];
    }

    if((((((b[i] & 128) & 0xff) >>> 7) & 0xff) & 0x1) === 0x1)
    switch(((b[i] | ((b[i+1] << 8) & 0xffff)) & 0xffff) & 0xf87f) {
        case 0x0: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add($0, new i8(new u8(b[i+2])))))];
        case 0x1: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add($0, new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))];
        case 0x2: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add($0, new i8(new u8(b[i+2])))))];
        case 0x3: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add($0, new i8(new u8(b[i+2])))))];
        case 0xf: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x40: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new i8(new u8(b[i+2])))), (new Shr($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x41: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new i8(new u8(b[i+2])))), (new Shr($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x46: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i8(new u8(b[i+2])))];
        case 0x47: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))];
        case 0x50: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x51: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x52: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x53: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x58: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f32(new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))))];
        case 0x59: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f32(new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x5a: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x5b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
        case 0x5c: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f64(new Mem64(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))))];
        case 0x5d: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f64(new Mem64(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x5e: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x5f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
        case 0x76: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i8(new u8(b[i+2])))), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x77: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x7e: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add(new u8($0), new u8(1))))];
        case 0x7f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add($0, new u8(1))))];
        case 0x800: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or(new u8(new u8(b[i+2])), $0)))];
        case 0x801: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))), $0)))];
        case 0x802: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or(new u8(new u8(b[i+2])), $0)))];
        case 0x803: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or(new u32(new i8(new u8(b[i+2]))), $0)))];
        case 0x840: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new i8(new u8(b[i+2])))), (new Shl($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x841: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new i8(new u8(b[i+2])))), (new Shl($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x850: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x851: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x852: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x853: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x858: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f32(new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))))];
        case 0x85a: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x85c: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f64(new Mem64(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))))];
        case 0x85e: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x87e: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add($0, new i8(-1))))];
        case 0x87f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add($0, new i32(-1))))];
        case 0x1000: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i8(new u8(b[i+2])))), R1[1])))];
        case 0x1001: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), R1[1])))];
        case 0x1002: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i8(new u8(b[i+2])))), R1[1])))];
        case 0x1003: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i8(new u8(b[i+2])))), R1[1])))];
        case 0x1040: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new i8(new u8(b[i+2])))), (new Shr($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x1041: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new i8(new u8(b[i+2])))), (new Shr($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x1050: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x1051: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x1052: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x1053: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x1059: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new f32(R80[0]))];
        case 0x105c: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x105d: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(new Mem64(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new f64(R80[0]))];
        case 0x105e: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x105f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i16(R80[0]))];
        case 0x1076: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Not($0)))];
        case 0x1077: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Not($0)))];
        case 0x107f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 2)))), new Mov($1, new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))];
        case 0x1800: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i8(-((b[i+2]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x1801: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i32(-((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x1802: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i8(-((b[i+2]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x1803: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, new i32(-((((b[i+2]) << 24 >> 24)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x1840: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new i8(new u8(b[i+2])))), (new Shl($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x1841: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new i8(new u8(b[i+2])))), (new Shl($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x1850: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x1851: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x1852: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x1853: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x1859: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new f32($0))];
        case 0x185c: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x185d: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new f64($0))];
        case 0x185e: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x185f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i16($0))];
        case 0x1876: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Neg($0)))];
        case 0x1877: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Neg($0)))];
        case 0x2000: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new And(new u8(new u8(b[i+2])), $0)))];
        case 0x2001: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new And(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))), $0)))];
        case 0x2002: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new And(new u8(new u8(b[i+2])), $0)))];
        case 0x2003: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new And(new u32(new i8(new u8(b[i+2]))), $0)))];
        case 0x2040: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shl($0, new i8(new u8(b[i+2])))))];
        case 0x2041: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shl($0, new i8(new u8(b[i+2])))))];
        case 0x2050: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shl($0, new u8(1))))];
        case 0x2051: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shl($0, new u8(1))))];
        case 0x2052: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shl($0, R8[1])))];
        case 0x2053: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shl($0, R8[1])))];
        case 0x205c: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(new f64(new Mem64(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))))))];
        case 0x2076: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x2077: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x207f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R32[8], new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))];
        case 0x2800: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), new i8(new u8(b[i+2]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+2]))))), new Mov($0, (new Add($0, new i8(-((b[i+2]) << 24 >> 24)))))];
        case 0x2801: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new Mov($0, (new Add($0, new i32(-((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0)))))];
        case 0x2802: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), new i8(new u8(b[i+2]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+2]))))), new Mov($0, (new Add($0, new i8(-((b[i+2]) << 24 >> 24)))))];
        case 0x2803: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), new i32(new i8(new u8(b[i+2])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+2])))))), new Mov($0, (new Add($0, new i32(-((((b[i+2]) << 24 >> 24)) >> 0)))))];
        case 0x2840: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shr(new u8($0), new i8(new u8(b[i+2])))))];
        case 0x2841: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shr(new u32($0), new i8(new u8(b[i+2])))))];
        case 0x2850: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shr(new u8($0), new u8(1))))];
        case 0x2851: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shr(new u32($0), new u8(1))))];
        case 0x2852: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shr(new u8($0), R8[1])))];
        case 0x2853: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shr(new u32($0), R8[1])))];
        case 0x2859: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R16[49], new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))];
        case 0x285c: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Add(new f64(new Mem64(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Neg(new f64($0))))))];
        case 0x285f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem64(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
        case 0x2876: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x2877: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x3000: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Xor($0, new i8(new u8(b[i+2])))))];
        case 0x3001: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Xor($0, new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))];
        case 0x3002: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Xor($0, new i8(new u8(b[i+2])))))];
        case 0x3003: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Xor($0, new i8(new u8(b[i+2])))))];
        case 0x3040: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shl($0, new i8(new u8(b[i+2])))))];
        case 0x3041: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shl($0, new i8(new u8(b[i+2])))))];
        case 0x3050: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shl($0, new u8(1))))];
        case 0x3051: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shl($0, new u8(1))))];
        case 0x3052: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shl($0, R8[1])))];
        case 0x3053: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shl($0, R8[1])))];
        case 0x305c: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div($0, new f64(new Mem64(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))))];
        case 0x3076: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x3077: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x307f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))];
        case 0x3800: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), new i8(new u8(b[i+2]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+2])))))];
        case 0x3801: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))];
        case 0x3802: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), new i8(new u8(b[i+2]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+2])))))];
        case 0x3803: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), new i32(new i8(new u8(b[i+2])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+2]))))))];
        case 0x3840: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+2])))))];
        case 0x3841: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shr($0, new i8(new u8(b[i+2])))))];
        case 0x3850: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shr($0, new u8(1))))];
        case 0x3851: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shr($0, new u8(1))))];
        case 0x3852: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shr($0, R8[1])))];
        case 0x3853: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Shr($0, R8[1])))];
        case 0x3859: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), R16[49])];
        case 0x385c: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R80[0]), (new Div(new f64(new Mem64(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), $0)))];
        case 0x385d: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), R16[48])];
        case 0x385f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i64($0))];
        case 0x3876: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x3877: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x4000: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add($0, new i8(new u8(b[i+3])))))];
        case 0x4001: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add($0, new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x4002: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add($0, new i8(new u8(b[i+3])))))];
        case 0x4003: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add($0, new i8(new u8(b[i+3])))))];
        case 0x400f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x4040: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x4041: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x4046: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), new i8(new u8(b[i+3])))];
        case 0x4047: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))];
        case 0x4050: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x4051: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x4052: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x4053: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x4058: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f32(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))))))];
        case 0x4059: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f32(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x405a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x405b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))))];
        case 0x405c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f64(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))))))];
        case 0x405d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f64(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x405e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x405f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))))];
        case 0x4076: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), new i8(new u8(b[i+3])))), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x4077: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x407e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add(new u8($0), new u8(1))))];
        case 0x407f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add($0, new u8(1))))];
        case 0x4800: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or(new u8(new u8(b[i+3])), $0)))];
        case 0x4801: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))), $0)))];
        case 0x4802: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or(new u8(new u8(b[i+3])), $0)))];
        case 0x4803: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or(new u32(new i8(new u8(b[i+3]))), $0)))];
        case 0x4840: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shr($0, new i8(new u8(b[i+3])))), (new Shl($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x4841: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shr($0, new i8(new u8(b[i+3])))), (new Shl($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x4850: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x4851: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x4852: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x4853: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x4858: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f32(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))))))];
        case 0x485a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x485c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f64(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))))))];
        case 0x485e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x487e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add($0, new i8(-1))))];
        case 0x487f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add($0, new i32(-1))))];
        case 0x5000: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add((new Add($0, new i8(new u8(b[i+3])))), R1[1])))];
        case 0x5001: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add((new Add($0, new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))), R1[1])))];
        case 0x5002: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add((new Add($0, new i8(new u8(b[i+3])))), R1[1])))];
        case 0x5003: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add((new Add($0, new i8(new u8(b[i+3])))), R1[1])))];
        case 0x5040: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x5041: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shl($0, new i8(new u8(b[i+3])))), (new Shr($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x5050: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x5051: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x5052: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x5053: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x5059: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), new f32(R80[0]))];
        case 0x505c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x505d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), new f64(R80[0]))];
        case 0x505e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x505f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), new i16(R80[0]))];
        case 0x5076: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Not($0)))];
        case 0x5077: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Not($0)))];
        case 0x507f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 3)))), new Mov($1, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))];
        case 0x5800: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add((new Add($0, new i8(-((b[i+3]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x5801: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add((new Add($0, new i32(-((((((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)) >>> 0)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x5802: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add((new Add($0, new i8(-((b[i+3]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x5803: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add((new Add($0, new i32(-((((b[i+3]) << 24 >> 24)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x5840: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shr($0, new i8(new u8(b[i+3])))), (new Shl($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x5841: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shr($0, new i8(new u8(b[i+3])))), (new Shl($0, new u8(((((-((b[i+3]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x5850: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x5851: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x5852: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x5853: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x5859: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), new f32($0))];
        case 0x585c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x585d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), new f64($0))];
        case 0x585e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x585f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), new i16($0))];
        case 0x5876: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Neg($0)))];
        case 0x5877: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Neg($0)))];
        case 0x6000: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new And(new u8(new u8(b[i+3])), $0)))];
        case 0x6001: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new And(new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))), $0)))];
        case 0x6002: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new And(new u8(new u8(b[i+3])), $0)))];
        case 0x6003: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new And(new u32(new i8(new u8(b[i+3]))), $0)))];
        case 0x6040: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shl($0, new i8(new u8(b[i+3])))))];
        case 0x6041: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shl($0, new i8(new u8(b[i+3])))))];
        case 0x6050: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shl($0, new u8(1))))];
        case 0x6051: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shl($0, new u8(1))))];
        case 0x6052: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shl($0, R8[1])))];
        case 0x6053: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shl($0, R8[1])))];
        case 0x605c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(new f64(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))))))))];
        case 0x6076: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x6077: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x607f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[8], new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))];
        case 0x6800: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), new i8(new u8(b[i+3]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+3]))))), new Mov($0, (new Add($0, new i8(-((b[i+3]) << 24 >> 24)))))];
        case 0x6801: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mov($0, (new Add($0, new i32(-((((((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)) >>> 0)) >> 0)))))];
        case 0x6802: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), new i8(new u8(b[i+3]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+3]))))), new Mov($0, (new Add($0, new i8(-((b[i+3]) << 24 >> 24)))))];
        case 0x6803: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), new i32(new i8(new u8(b[i+3])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+3])))))), new Mov($0, (new Add($0, new i32(-((((b[i+3]) << 24 >> 24)) >> 0)))))];
        case 0x6840: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shr(new u8($0), new i8(new u8(b[i+3])))))];
        case 0x6841: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shr(new u32($0), new i8(new u8(b[i+3])))))];
        case 0x6850: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shr(new u8($0), new u8(1))))];
        case 0x6851: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shr(new u32($0), new u8(1))))];
        case 0x6852: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shr(new u8($0), R8[1])))];
        case 0x6853: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shr(new u32($0), R8[1])))];
        case 0x6859: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[49], new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))];
        case 0x685c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Add(new f64(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Neg(new f64($0))))))];
        case 0x685f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))))];
        case 0x6876: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x6877: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x7000: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Xor($0, new i8(new u8(b[i+3])))))];
        case 0x7001: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Xor($0, new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x7002: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Xor($0, new i8(new u8(b[i+3])))))];
        case 0x7003: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Xor($0, new i8(new u8(b[i+3])))))];
        case 0x7040: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shl($0, new i8(new u8(b[i+3])))))];
        case 0x7041: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shl($0, new i8(new u8(b[i+3])))))];
        case 0x7050: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shl($0, new u8(1))))];
        case 0x7051: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shl($0, new u8(1))))];
        case 0x7052: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shl($0, R8[1])))];
        case 0x7053: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shl($0, R8[1])))];
        case 0x705c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Div($0, new f64(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))))))];
        case 0x7076: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x7077: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x707f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))];
        case 0x7800: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), new i8(new u8(b[i+3]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+3])))))];
        case 0x7801: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x7802: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), new i8(new u8(b[i+3]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+3])))))];
        case 0x7803: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), new i32(new i8(new u8(b[i+3])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+3]))))))];
        case 0x7840: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shr($0, new i8(new u8(b[i+3])))))];
        case 0x7841: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shr($0, new i8(new u8(b[i+3])))))];
        case 0x7850: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shr($0, new u8(1))))];
        case 0x7851: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shr($0, new u8(1))))];
        case 0x7852: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shr($0, R8[1])))];
        case 0x7853: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Shr($0, R8[1])))];
        case 0x7859: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), R16[49])];
        case 0x785c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R80[0]), (new Div(new f64(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), $0)))];
        case 0x785d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), R16[48])];
        case 0x785f: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), new i64($0))];
        case 0x7876: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x7877: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x8000: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+6])))))];
        case 0x8001: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add($0, new i32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0))))))];
        case 0x8002: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+6])))))];
        case 0x8003: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add($0, new i8(new u8(b[i+6])))))];
        case 0x800f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x8040: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+6])))), (new Shr($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x8041: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+6])))), (new Shr($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x8046: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new i8(new u8(b[i+6])))];
        case 0x8047: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new i32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0))))];
        case 0x8050: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x8051: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x8052: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x8053: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x8058: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f32(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))))))];
        case 0x8059: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f32(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0x805a: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0x805b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))))];
        case 0x805c: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new f64(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))))))];
        case 0x805d: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new f64(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0x805e: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Add($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0x805f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))))];
        case 0x8076: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new i8(new u8(b[i+6])))), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x8077: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new i32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0))))), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x807e: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add(new u8($0), new u8(1))))];
        case 0x807f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add($0, new u8(1))))];
        case 0x8800: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or(new u8(new u8(b[i+6])), $0)))];
        case 0x8801: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or(new u32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0))), $0)))];
        case 0x8802: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or(new u8(new u8(b[i+6])), $0)))];
        case 0x8803: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or(new u32(new i8(new u8(b[i+6]))), $0)))];
        case 0x8840: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+6])))), (new Shl($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x8841: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+6])))), (new Shl($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x8850: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x8851: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x8852: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x8853: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x8858: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f32(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))))))];
        case 0x885a: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0x885c: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new f64(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))))))];
        case 0x885e: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Mul($0, new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0x887e: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add($0, new i8(-1))))];
        case 0x887f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add($0, new i32(-1))))];
        case 0x9000: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+6])))), R1[1])))];
        case 0x9001: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add((new Add($0, new i32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0))))), R1[1])))];
        case 0x9002: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+6])))), R1[1])))];
        case 0x9003: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add((new Add($0, new i8(new u8(b[i+6])))), R1[1])))];
        case 0x9040: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+6])))), (new Shr($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x9041: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shl($0, new i8(new u8(b[i+6])))), (new Shr($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x9050: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0x9051: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0x9052: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x9053: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x9059: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new f32(R80[0]))];
        case 0x905c: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x905d: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new f64(R80[0]))];
        case 0x905e: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))), new Mov(R1[51], (new Eq($0, $1)))];
        case 0x905f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new i16(R80[0]))];
        case 0x9076: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Not($0)))];
        case 0x9077: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Not($0)))];
        case 0x907f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 6)))), new Mov($1, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x9800: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add((new Add($0, new i8(-((b[i+6]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x9801: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add((new Add($0, new i32(-((((((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0)) >>> 0)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x9802: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add((new Add($0, new i8(-((b[i+6]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x9803: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add((new Add($0, new i32(-((((b[i+6]) << 24 >> 24)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x9840: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+6])))), (new Shl($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0x9841: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shr($0, new i8(new u8(b[i+6])))), (new Shl($0, new u8(((((-((b[i+6]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0x9850: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0x9851: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0x9852: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0x9853: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0x9859: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new f32($0))];
        case 0x985c: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new f64(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x985d: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new f64($0))];
        case 0x985e: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[48], (new Lt(($0 = R80[0]), ($1 = new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))), new Mov(R1[51], (new Eq($0, $1))), new Mov(($2 = (new Register80)), $0), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $2)];
        case 0x985f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new i16($0))];
        case 0x9876: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Neg($0)))];
        case 0x9877: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Neg($0)))];
        case 0xa000: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new And(new u8(new u8(b[i+6])), $0)))];
        case 0xa001: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new And(new u32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0))), $0)))];
        case 0xa002: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new And(new u8(new u8(b[i+6])), $0)))];
        case 0xa003: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new And(new u32(new i8(new u8(b[i+6]))), $0)))];
        case 0xa040: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+6])))))];
        case 0xa041: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+6])))))];
        case 0xa050: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0xa051: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0xa052: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0xa053: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0xa05c: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Add($0, (new Neg(new f64(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))))))))];
        case 0xa076: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0xa077: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0xa07f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R32[8], new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0xa800: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), new i8(new u8(b[i+6]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+6]))))), new Mov($0, (new Add($0, new i8(-((b[i+6]) << 24 >> 24)))))];
        case 0xa801: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), new i32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0)))))), new Mov($0, (new Add($0, new i32(-((((((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0)) >>> 0)) >> 0)))))];
        case 0xa802: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), new i8(new u8(b[i+6]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+6]))))), new Mov($0, (new Add($0, new i8(-((b[i+6]) << 24 >> 24)))))];
        case 0xa803: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), new i32(new i8(new u8(b[i+6])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+6])))))), new Mov($0, (new Add($0, new i32(-((((b[i+6]) << 24 >> 24)) >> 0)))))];
        case 0xa840: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shr(new u8($0), new i8(new u8(b[i+6])))))];
        case 0xa841: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shr(new u32($0), new i8(new u8(b[i+6])))))];
        case 0xa850: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shr(new u8($0), new u8(1))))];
        case 0xa851: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shr(new u32($0), new u8(1))))];
        case 0xa852: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shr(new u8($0), R8[1])))];
        case 0xa853: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shr(new u32($0), R8[1])))];
        case 0xa859: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[49], new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0xa85c: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Add(new f64(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Neg(new f64($0))))))];
        case 0xa85f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R80[7], R80[6]), new Mov(R80[6], R80[5]), new Mov(R80[5], R80[4]), new Mov(R80[4], R80[3]), new Mov(R80[3], R80[2]), new Mov(R80[2], R80[1]), new Mov(R80[1], R80[0]), new Mov(R80[0], new f80(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))))];
        case 0xa876: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[0], (new Mul(R8[0], new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0xa877: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0xb000: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+6])))))];
        case 0xb001: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Xor($0, new i32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0))))))];
        case 0xb002: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+6])))))];
        case 0xb003: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Xor($0, new i8(new u8(b[i+6])))))];
        case 0xb040: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+6])))))];
        case 0xb041: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shl($0, new i8(new u8(b[i+6])))))];
        case 0xb050: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0xb051: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shl($0, new u8(1))))];
        case 0xb052: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0xb053: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shl($0, R8[1])))];
        case 0xb05c: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Div($0, new f64(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))))))];
        case 0xb076: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0xb077: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0xb07f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0xb800: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), new i8(new u8(b[i+6]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+6])))))];
        case 0xb801: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), new i32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0))))))];
        case 0xb802: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), new i8(new u8(b[i+6]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+6])))))];
        case 0xb803: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), new i32(new i8(new u8(b[i+6])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+6]))))))];
        case 0xb840: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shr($0, new i8(new u8(b[i+6])))))];
        case 0xb841: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shr($0, new i8(new u8(b[i+6])))))];
        case 0xb850: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shr($0, new u8(1))))];
        case 0xb851: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shr($0, new u8(1))))];
        case 0xb852: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shr($0, R8[1])))];
        case 0xb853: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Shr($0, R8[1])))];
        case 0xb859: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), R16[49])];
        case 0xb85c: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R80[0]), (new Div(new f64(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), $0)))];
        case 0xb85d: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), R16[48])];
        case 0xb85f: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = (new Register80)), R80[0]), new Mov(R80[0], R80[1]), new Mov(R80[1], R80[2]), new Mov(R80[2], R80[3]), new Mov(R80[3], R80[4]), new Mov(R80[4], R80[5]), new Mov(R80[5], R80[6]), new Mov(R80[6], R80[7]), new Mov(R80[7], $0), new Mov(new Mem64((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new i64($0))];
        case 0xb876: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[0], (new Div(R8[0], new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0xb877: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[0]), (new Div($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0xc000: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add($0, new i8(new u8(b[i+2])))))];
        case 0xc001: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add($0, new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))];
        case 0xc002: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add($0, new i8(new u8(b[i+2])))))];
        case 0xc003: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add($0, new i8(new u8(b[i+2])))))];
        case 0xc00f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0xc040: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, new i8(new u8(b[i+2])))), (new Shr($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0xc041: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, new i8(new u8(b[i+2])))), (new Shr($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0xc046: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))];
        case 0xc047: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))];
        case 0xc050: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0xc051: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0xc052: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0xc053: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0xc076: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq((new And(R8[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0xc077: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq((new And(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0xc07e: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add(new u8($0), new u8(1))))];
        case 0xc07f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add($0, new u8(1))))];
        case 0xc800: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or(new u8(new u8(b[i+2])), $0)))];
        case 0xc801: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))), $0)))];
        case 0xc802: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or(new u8(new u8(b[i+2])), $0)))];
        case 0xc803: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or(new u32(new i8(new u8(b[i+2]))), $0)))];
        case 0xc840: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shr($0, new i8(new u8(b[i+2])))), (new Shl($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0xc841: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shr($0, new i8(new u8(b[i+2])))), (new Shl($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0xc850: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0xc851: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0xc852: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0xc853: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0xc87e: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add($0, new i8(-1))))];
        case 0xc87f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add($0, new i32(-1))))];
        case 0xd000: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add((new Add($0, new i8(new u8(b[i+2])))), R1[1])))];
        case 0xd001: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add((new Add($0, new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), R1[1])))];
        case 0xd002: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add((new Add($0, new i8(new u8(b[i+2])))), R1[1])))];
        case 0xd003: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add((new Add($0, new i8(new u8(b[i+2])))), R1[1])))];
        case 0xd040: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, new i8(new u8(b[i+2])))), (new Shr($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0xd041: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, new i8(new u8(b[i+2])))), (new Shr($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0xd050: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(7))))))];
        case 0xd051: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, new u8(1))), (new Shr($0, new u8(31))))))];
        case 0xd052: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0xd053: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shl($0, ($1 = R8[1]))), (new Shr($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0xd076: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Not($0)))];
        case 0xd077: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Not($0)))];
        case 0xd07f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 2)))), new Mov($1, R32[((((b[i+1] & 7) & 0xff)) & 0xff)])];
        case 0xd800: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add((new Add($0, new i8(-((b[i+2]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0xd801: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add((new Add($0, new i32(-((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0xd802: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add((new Add($0, new i8(-((b[i+2]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0xd803: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add((new Add($0, new i32(-((((b[i+2]) << 24 >> 24)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0xd840: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shr($0, new i8(new u8(b[i+2])))), (new Shl($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 8))))))];
        case 0xd841: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shr($0, new i8(new u8(b[i+2])))), (new Shl($0, new u8(((((-((b[i+2]) << 24 >> 24)) << 24 >> 24)) & 0xff) + 32))))))];
        case 0xd850: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(7))))))];
        case 0xd851: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shr($0, new u8(1))), (new Shl($0, new u8(31))))))];
        case 0xd852: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(8))))))))];
        case 0xd853: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or((new Shr($0, ($1 = R8[1]))), (new Shl($0, (new Add(new u8((new Neg($1))), new u8(32))))))))];
        case 0xd876: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Neg($0)))];
        case 0xd877: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[1], new u1(0)), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Neg($0)))];
        case 0xe000: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new And(new u8(new u8(b[i+2])), $0)))];
        case 0xe001: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new And(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))), $0)))];
        case 0xe002: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new And(new u8(new u8(b[i+2])), $0)))];
        case 0xe003: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new And(new u32(new i8(new u8(b[i+2]))), $0)))];
        case 0xe040: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shl($0, new i8(new u8(b[i+2])))))];
        case 0xe041: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shl($0, new i8(new u8(b[i+2])))))];
        case 0xe050: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shl($0, new u8(1))))];
        case 0xe051: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shl($0, new u8(1))))];
        case 0xe052: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shl($0, R8[1])))];
        case 0xe053: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shl($0, R8[1])))];
        case 0xe076: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R16[0], (new Mul(R8[0], R8[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
        case 0xe077: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
        case 0xe07f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R32[8], R32[((((b[i+1] & 7) & 0xff)) & 0xff)])];
        case 0xe800: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i8(new u8(b[i+2]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+2]))))), new Mov($0, (new Add($0, new i8(-((b[i+2]) << 24 >> 24)))))];
        case 0xe801: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new Mov($0, (new Add($0, new i32(-((((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0)) >> 0)))))];
        case 0xe802: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i8(new u8(b[i+2]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+2]))))), new Mov($0, (new Add($0, new i8(-((b[i+2]) << 24 >> 24)))))];
        case 0xe803: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i32(new i8(new u8(b[i+2])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+2])))))), new Mov($0, (new Add($0, new i32(-((((b[i+2]) << 24 >> 24)) >> 0)))))];
        case 0xe840: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shr(new u8($0), new i8(new u8(b[i+2])))))];
        case 0xe841: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shr(new u32($0), new i8(new u8(b[i+2])))))];
        case 0xe850: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shr(new u8($0), new u8(1))))];
        case 0xe851: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shr(new u32($0), new u8(1))))];
        case 0xe852: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shr(new u8($0), R8[1])))];
        case 0xe853: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shr(new u32($0), R8[1])))];
        case 0xe876: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R16[0], (new Mul(R8[0], R8[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
        case 0xe877: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[0]), (new Mul($0, R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
        case 0xf000: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Xor($0, new i8(new u8(b[i+2])))))];
        case 0xf001: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Xor($0, new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))];
        case 0xf002: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Xor($0, new i8(new u8(b[i+2])))))];
        case 0xf003: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Xor($0, new i8(new u8(b[i+2])))))];
        case 0xf040: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shl($0, new i8(new u8(b[i+2])))))];
        case 0xf041: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shl($0, new i8(new u8(b[i+2])))))];
        case 0xf050: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shl($0, new u8(1))))];
        case 0xf051: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shl($0, new u8(1))))];
        case 0xf052: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shl($0, R8[1])))];
        case 0xf053: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shl($0, R8[1])))];
        case 0xf076: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R16[0], (new Div(R8[0], R8[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
        case 0xf077: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[0]), (new Div($0, R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
        case 0xf07f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[((((b[i+1] & 7) & 0xff)) & 0xff)])];
        case 0xf800: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i8(new u8(b[i+2]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+2])))))];
        case 0xf801: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))];
        case 0xf802: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i8(new u8(b[i+2]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+2])))))];
        case 0xf803: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i32(new i8(new u8(b[i+2])))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new i8(new u8(b[i+2]))))))];
        case 0xf840: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shr($0, new i8(new u8(b[i+2])))))];
        case 0xf841: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shr($0, new i8(new u8(b[i+2])))))];
        case 0xf850: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shr($0, new u8(1))))];
        case 0xf851: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shr($0, new u8(1))))];
        case 0xf852: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shr($0, R8[1])))];
        case 0xf853: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Shr($0, R8[1])))];
        case 0xf876: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R16[0], (new Div(R8[0], R8[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
        case 0xf877: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[0]), (new Div($0, R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
    }

    if((((((b[i+1] & 6) & 0xff) >>> 1) & 0xff) & 0x3) === 0x2)
    switch(((b[i] | ((b[i+1] << 8) & 0xffff)) & 0xffff) & 0xc1ff) {
        case 0x0: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x1: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x2: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0x3: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0x8: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x9: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Or($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0xa: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0xb: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0x10: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add((new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x11: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add((new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x12: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))), R1[1])))];
        case 0x13: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))), R1[1])))];
        case 0x18: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add((new Add($0, (new Neg(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i8(R1[1]))))))];
        case 0x19: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Add((new Add($0, (new Neg(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i32(R1[1]))))))];
        case 0x1a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))), (new Neg(new i8(R1[1]))))))];
        case 0x1b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))), (new Neg(new i32(R1[1]))))))];
        case 0x20: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new And($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x21: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new And($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x22: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0x23: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0x28: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x29: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x2a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x2b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x30: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Xor($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x31: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), (new Xor($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x32: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0x33: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))];
        case 0x38: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x39: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x3a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x3b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x69: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x6b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), new i32(new i8(new u8(b[i+3]))))))];
        case 0x84: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x85: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x86: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($2 = (new Register8)), ($0 = new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))), new Mov($0, ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x87: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($2 = (new Register32)), ($0 = new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))), new Mov($0, ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x88: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x89: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x8a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))];
        case 0x8b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))];
        case 0x8c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        case 0x8d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))))];
        case 0x8e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)], new Mem16((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))];
        case 0xc4: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[16], new Mem16(($0 = (new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0xc5: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[19], new Mem16(($0 = (new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6)))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0x100: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x101: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x102: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x103: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x108: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x109: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Or($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x10a: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x10b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x110: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add((new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x111: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add((new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x112: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), R1[1])))];
        case 0x113: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), R1[1])))];
        case 0x118: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add((new Add($0, (new Neg(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i8(R1[1]))))))];
        case 0x119: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Add((new Add($0, (new Neg(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i32(R1[1]))))))];
        case 0x11a: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))), (new Neg(new i8(R1[1]))))))];
        case 0x11b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))), (new Neg(new i32(R1[1]))))))];
        case 0x120: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new And($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x121: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new And($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x122: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x123: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x128: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x129: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x12a: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x12b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x130: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Xor($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x131: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), (new Xor($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x132: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x133: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x138: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x139: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x13a: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x13b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x169: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), new i32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0))))))];
        case 0x16b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), new i32(new i8(new u8(b[i+6]))))))];
        case 0x184: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x185: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x186: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($2 = (new Register8)), ($0 = new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new Mov($0, ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x187: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($2 = (new Register32)), ($0 = new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new Mov($0, ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x188: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x189: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x18a: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))];
        case 0x18b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))];
        case 0x18c: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem32(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        case 0x18d: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))];
        case 0x18e: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)], new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))];
        case 0x1c4: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[16], new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0) + 2)))];
        case 0x1c5: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[19], new Mem16(new u32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(new u32(((((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)) >>> 0) + 2)))];
        case 0x4000: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4001: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4002: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x4003: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x4008: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4009: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Or($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x400a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x400b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x4010: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add((new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x4011: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add((new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x4012: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))), R1[1])))];
        case 0x4013: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))), R1[1])))];
        case 0x4018: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add((new Add($0, (new Neg(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i8(R1[1]))))))];
        case 0x4019: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Add((new Add($0, (new Neg(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i32(R1[1]))))))];
        case 0x401a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))), (new Neg(new i8(R1[1]))))))];
        case 0x401b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))), (new Neg(new i32(R1[1]))))))];
        case 0x4020: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new And($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4021: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new And($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4022: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x4023: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x4028: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x4029: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x402a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x402b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x4030: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Xor($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4031: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), (new Xor($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4032: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x4033: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))];
        case 0x4038: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x4039: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x403a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x403b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x4069: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), new i32(new u32(((((b[i+4] | ((b[i+5] << 8) >>> 0)) >>> 0) | ((b[i+6] << 16) >>> 0)) >>> 0) | ((b[i+7] << 24) >>> 0))))))];
        case 0x406b: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), new i32(new i8(new u8(b[i+4]))))))];
        case 0x4084: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x4085: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x4086: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($2 = (new Register8)), ($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))), new Mov($0, ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x4087: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($2 = (new Register32)), ($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))), new Mov($0, ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x4088: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x4089: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x408a: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))];
        case 0x408b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))];
        case 0x408c: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        case 0x408d: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3])))))];
        case 0x408e: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))];
        case 0x40c4: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[16], new Mem16(($0 = (new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0x40c5: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R16[19], new Mem16(($0 = (new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i8(new u8(b[i+3]))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0x8000: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8001: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8002: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8003: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8008: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8009: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Or($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x800a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x800b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8010: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x8011: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x8012: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R1[1])))];
        case 0x8013: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), R1[1])))];
        case 0x8018: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, (new Neg(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i8(R1[1]))))))];
        case 0x8019: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Add((new Add($0, (new Neg(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i32(R1[1]))))))];
        case 0x801a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), (new Neg(new i8(R1[1]))))))];
        case 0x801b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), (new Neg(new i32(R1[1]))))))];
        case 0x8020: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8021: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new And($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8022: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8023: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8028: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x8029: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x802a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x802b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x8030: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8031: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), (new Xor($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8032: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8033: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))];
        case 0x8038: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x8039: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x803a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x803b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x8069: return [((((_pfxLength) & 0xff) + 11) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i32(new u32(((((b[i+7] | ((b[i+8] << 8) >>> 0)) >>> 0) | ((b[i+9] << 16) >>> 0)) >>> 0) | ((b[i+10] << 24) >>> 0))))))];
        case 0x806b: return [((((_pfxLength) & 0xff) + 8) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), new i32(new i8(new u8(b[i+7]))))))];
        case 0x8084: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x8085: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x8086: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($2 = (new Register8)), ($0 = new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov($0, ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x8087: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($2 = (new Register32)), ($0 = new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov($0, ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x8088: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x8089: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x808a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x808b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x808c: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(new Mem32((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        case 0x808d: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x808e: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)], new Mem16((new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))];
        case 0x80c4: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[16], new Mem16(($0 = (new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0x80c5: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[19], new Mem16(($0 = (new Add((new Add(R32[((((b[i+2] & 7) & 0xff)) & 0xff)], (new Shl(R32[((((((b[i+2] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new u8(((b[i+2] & 192) & 0xff) >>> 6))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0)))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
    }

    switch(((b[i] | ((b[i+1] << 8) & 0xffff)) & 0xffff) & 0xc0ff) {
        case 0x0: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x1: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x2: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x3: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x9: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Or($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0xa: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0xb: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x10: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x11: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x12: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))), R1[1])))];
        case 0x13: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))), R1[1])))];
        case 0x18: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, (new Neg(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i8(R1[1]))))))];
        case 0x19: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Add((new Add($0, (new Neg(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i32(R1[1]))))))];
        case 0x1a: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))), (new Neg(new i8(R1[1]))))))];
        case 0x1b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))), (new Neg(new i32(R1[1]))))))];
        case 0x20: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new And($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x21: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new And($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x22: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x23: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x28: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x29: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x2a: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x2b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x30: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Xor($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x31: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), (new Xor($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x32: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x33: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))];
        case 0x38: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x39: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x3a: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x3b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x69: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))];
        case 0x6b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), new i32(new i8(new u8(b[i+2]))))))];
        case 0x84: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x85: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x86: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($2 = (new Register8)), ($0 = new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))), new Mov($0, ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x87: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($2 = (new Register32)), ($0 = new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))), new Mov($0, ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x88: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x89: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x8a: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))];
        case 0x8b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))];
        case 0x8c: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(new Mem32(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        case 0x8d: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R32[((((b[i+1] & 7) & 0xff)) & 0xff)])];
        case 0x8e: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)], new Mem16(R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))];
        case 0xc4: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R16[16], new Mem16(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0xc5: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R16[19], new Mem16(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0x4000: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4001: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4002: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x4003: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x4008: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4009: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Or($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x400a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x400b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x4010: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add((new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x4011: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add((new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x4012: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))), R1[1])))];
        case 0x4013: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))), R1[1])))];
        case 0x4018: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add((new Add($0, (new Neg(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i8(R1[1]))))))];
        case 0x4019: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Add((new Add($0, (new Neg(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i32(R1[1]))))))];
        case 0x401a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))), (new Neg(new i8(R1[1]))))))];
        case 0x401b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))), (new Neg(new i32(R1[1]))))))];
        case 0x4020: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new And($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4021: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new And($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4022: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x4023: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x4028: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x4029: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x402a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x402b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x4030: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Xor($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4031: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), (new Xor($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x4032: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x4033: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))];
        case 0x4038: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x4039: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x403a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x403b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x4069: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))))];
        case 0x406b: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), new i32(new i8(new u8(b[i+3]))))))];
        case 0x4084: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x4085: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x4086: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($2 = (new Register8)), ($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))), new Mov($0, ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x4087: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(($2 = (new Register32)), ($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))), new Mov($0, ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x4088: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x4089: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x408a: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))];
        case 0x408b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))];
        case 0x408c: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        case 0x408d: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2])))))];
        case 0x408e: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)], new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))];
        case 0x40c4: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[16], new Mem16(($0 = (new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0x40c5: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R16[19], new Mem16(($0 = (new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i8(new u8(b[i+2]))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0x8000: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8001: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8002: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0x8003: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0x8008: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8009: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Or($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x800a: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0x800b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0x8010: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add((new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x8011: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add((new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0x8012: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))), R1[1])))];
        case 0x8013: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))), R1[1])))];
        case 0x8018: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add((new Add($0, (new Neg(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i8(R1[1]))))))];
        case 0x8019: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Add((new Add($0, (new Neg(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i32(R1[1]))))))];
        case 0x801a: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))), (new Neg(new i8(R1[1]))))))];
        case 0x801b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))), (new Neg(new i32(R1[1]))))))];
        case 0x8020: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new And($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8021: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new And($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8022: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0x8023: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0x8028: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x8029: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x802a: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x802b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0x8030: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Xor($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8031: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), (new Xor($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0x8032: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0x8033: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))];
        case 0x8038: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x8039: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x803a: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0x803b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0x8069: return [((((_pfxLength) & 0xff) + 10) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new i32(new u32(((((b[i+6] | ((b[i+7] << 8) >>> 0)) >>> 0) | ((b[i+8] << 16) >>> 0)) >>> 0) | ((b[i+9] << 24) >>> 0))))))];
        case 0x806b: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), new i32(new i8(new u8(b[i+6]))))))];
        case 0x8084: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x8085: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R1[2], (new Eq((new And(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0x8086: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($2 = (new Register8)), ($0 = new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))), new Mov($0, ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x8087: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(($2 = (new Register32)), ($0 = new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))), new Mov($0, ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0x8088: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x8089: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0x808a: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem8((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x808b: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x808c: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(new Mem32((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))), R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        case 0x808d: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))];
        case 0x808e: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)], new Mem16((new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))];
        case 0x80c4: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[16], new Mem16(($0 = (new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0x80c5: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R16[19], new Mem16(($0 = (new Add(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0)))))))), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], new Mem32((new Add($0, new u8(2)))))];
        case 0xc000: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0xc001: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0xc002: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, R8[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
        case 0xc003: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add($0, R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
        case 0xc008: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0xc009: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Or($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0xc00a: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, R8[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
        case 0xc00b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Or($0, R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
        case 0xc010: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add((new Add($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0xc011: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add((new Add($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), R1[1])))];
        case 0xc012: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, R8[((((b[i+1] & 7) & 0xff)) & 0xff)])), R1[1])))];
        case 0xc013: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), R1[1])))];
        case 0xc018: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i8(R1[1]))))))];
        case 0xc019: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), (new Neg(new i32(R1[1]))))))];
        case 0xc01a: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(R8[((((b[i+1] & 7) & 0xff)) & 0xff)])))), (new Neg(new i8(R1[1]))))))];
        case 0xc01b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Add((new Add($0, (new Neg(R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))), (new Neg(new i32(R1[1]))))))];
        case 0xc020: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new And($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0xc021: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new And($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0xc022: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, R8[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
        case 0xc023: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new And($0, R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
        case 0xc028: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0xc029: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0xc02a: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0xc02b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1)))), new Mov($0, (new Add($0, (new Neg($1)))))];
        case 0xc030: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Xor($0, R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0xc031: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), (new Xor($0, R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))];
        case 0xc032: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, R8[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
        case 0xc033: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), (new Xor($0, R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))];
        case 0xc038: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)]), ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0xc039: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)]), ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0xc03a: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0xc03b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)]), ($1 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)])))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0xc069: return [((((_pfxLength) & 0xff) + 6) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new u32(((((b[i+2] | ((b[i+3] << 8) >>> 0)) >>> 0) | ((b[i+4] << 16) >>> 0)) >>> 0) | ((b[i+5] << 24) >>> 0))))))];
        case 0xc06b: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], (new Mul(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], new i32(new i8(new u8(b[i+2]))))))];
        case 0xc084: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq((new And(R8[((((b[i+1] & 7) & 0xff)) & 0xff)], R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0xc085: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq((new And(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0xc086: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($2 = (new Register8)), ($0 = R8[((((b[i+1] & 7) & 0xff)) & 0xff)])), new Mov($0, ($1 = R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0xc087: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($2 = (new Register32)), ($0 = R32[((((b[i+1] & 7) & 0xff)) & 0xff)])), new Mov($0, ($1 = R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])), new Mov($1, $2)];
        case 0xc088: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R8[((((b[i+1] & 7) & 0xff)) & 0xff)], R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0xc089: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)])];
        case 0xc08a: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R8[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R8[((((b[i+1] & 7) & 0xff)) & 0xff)])];
        case 0xc08b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R32[((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff)], R32[((((b[i+1] & 7) & 0xff)) & 0xff)])];
        case 0xc08c: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R32[((((b[i+1] & 7) & 0xff)) & 0xff)], R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)])];
        case 0xc08e: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R16[((((((((b[i+1] & 56) & 0xff) >>> 3) & 0xff)) & 0xff) + 16) & 0xff)], R16[((((b[i+1] & 7) & 0xff)) & 0xff)])];
    }

    switch(b[i] & 0xff) {
        case 0x4: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[0]), (new Add($0, new i8(new u8(b[i+1])))))];
        case 0x5: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = R32[0]), (new Add($0, new i32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))))))];
        case 0x6: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), R16[16])];
        case 0x7: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R16[16], new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
        case 0xc: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[0]), (new Or($0, new i8(new u8(b[i+1])))))];
        case 0xd: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = R32[0]), (new Or($0, new i32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))))))];
        case 0xe: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), R16[17])];
        case 0x14: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[0]), (new Add((new Add($0, new i8(new u8(b[i+1])))), R1[1])))];
        case 0x15: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = R32[0]), (new Add((new Add($0, new i32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))))), R1[1])))];
        case 0x16: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), R16[21])];
        case 0x17: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R16[21], new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
        case 0x1c: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[0]), (new Add((new Add($0, new i8(-((b[i+1]) << 24 >> 24)))), (new Neg(new i8(R1[1]))))))];
        case 0x1d: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = R32[0]), (new Add((new Add($0, new i32(-((((((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0)) >>> 0)) >> 0)))), (new Neg(new i32(R1[1]))))))];
        case 0x1e: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), R16[19])];
        case 0x1f: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R16[19], new Mem16(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(2))))];
        case 0x24: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[0]), (new And($0, new i8(new u8(b[i+1])))))];
        case 0x25: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = R32[0]), (new And($0, new i32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))))))];
        case 0x2c: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[0]), new i8(new u8(b[i+1]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+1]))))), new Mov($0, (new Add($0, new i8(-((b[i+1]) << 24 >> 24)))))];
        case 0x2d: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[0]), new i32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0)))))), new Mov($0, (new Add($0, new i32(-((((((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0)) >>> 0)) >> 0)))))];
        case 0x34: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R8[0]), (new Xor($0, new i8(new u8(b[i+1])))))];
        case 0x35: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = R32[0]), (new Xor($0, new i32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))))))];
        case 0x3c: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[0]), new i8(new u8(b[i+1]))))), new Mov(R1[1], (new Lt(new u8($0), new u8(new u8(b[i+1])))))];
        case 0x3d: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[0]), new i32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0)))))), new Mov(R1[1], (new Lt(new u32($0), new u32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))))))];
        case 0x40: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[0]), (new Add($0, new u8(1))))];
        case 0x41: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[1]), (new Add($0, new u8(1))))];
        case 0x42: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[2]), (new Add($0, new u8(1))))];
        case 0x43: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[3]), (new Add($0, new u8(1))))];
        case 0x44: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new u8(1))))];
        case 0x45: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[5]), (new Add($0, new u8(1))))];
        case 0x46: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[6]), (new Add($0, new u8(1))))];
        case 0x47: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[7]), (new Add($0, new u8(1))))];
        case 0x48: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[0]), (new Add($0, new i32(-1))))];
        case 0x49: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[1]), (new Add($0, new i32(-1))))];
        case 0x4a: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[2]), (new Add($0, new i32(-1))))];
        case 0x4b: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[3]), (new Add($0, new i32(-1))))];
        case 0x4c: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-1))))];
        case 0x4d: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[5]), (new Add($0, new i32(-1))))];
        case 0x4e: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[6]), (new Add($0, new i32(-1))))];
        case 0x4f: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[7]), (new Add($0, new i32(-1))))];
        case 0x50: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[0])];
        case 0x51: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[1])];
        case 0x52: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[2])];
        case 0x53: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[3])];
        case 0x54: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), $0)];
        case 0x55: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[5])];
        case 0x56: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[6])];
        case 0x57: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[7])];
        case 0x58: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[0], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x59: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[1], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x5a: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[2], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x5b: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[3], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x5c: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), new Mem32($0)), new Mov($0, (new Add($0, new u8(4))))];
        case 0x5d: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[5], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x5e: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[6], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x5f: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[7], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0x60: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($1 = (new Register32)), ($0 = R32[4])), new Mov($0, (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[7]), new Mov($0, (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[6]), new Mov($0, (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[5]), new Mov($0, (new Add($0, new i32(-4)))), new Mov(new Mem32($0), $1), new Mov($0, (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[3]), new Mov($0, (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[2]), new Mov($0, (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[0])];
        case 0x61: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[7], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4)))), new Mov(R32[6], new Mem32($0)), new Mov($0, (new Add($0, new u8(4)))), new Mov(R32[5], new Mem32($0)), new Mov($0, (new Add($0, new u8(4)))), new Mov($0, (new Add($0, new u8(4)))), new Mov(R32[3], new Mem32($0)), new Mov($0, (new Add($0, new u8(4)))), new Mov(R32[2], new Mem32($0)), new Mov($0, (new Add($0, new u8(4)))), new Mov(R32[0], new Mem32($0)), new Mov($0, (new Add($0, new u8(4))))];
        case 0x68: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), new i32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))))];
        case 0x6a: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), new i32(new i8(new u8(b[i+1]))))];
        case 0x70: return [((((_pfxLength) & 0xff) + 2) & 0xff), new If(R1[0], new Mov(($0 = R32[8]), (new Add($0, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
        case 0x71: return [((((_pfxLength) & 0xff) + 2) & 0xff), new If((new Not(R1[0])), new Mov(($0 = R32[8]), (new Add($0, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
        case 0x72: return [((((_pfxLength) & 0xff) + 2) & 0xff), new If(R1[1], new Mov(($0 = R32[8]), (new Add($0, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
        case 0x73: return [((((_pfxLength) & 0xff) + 2) & 0xff), new If((new Not(R1[1])), new Mov(($0 = R32[8]), (new Add($0, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
        case 0x74: return [((((_pfxLength) & 0xff) + 2) & 0xff), new If(R1[2], new Mov(($0 = R32[8]), (new Add($0, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
        case 0x75: return [((((_pfxLength) & 0xff) + 2) & 0xff), new If((new Not(R1[2])), new Mov(($0 = R32[8]), (new Add($0, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
        case 0x76: return [((((_pfxLength) & 0xff) + 2) & 0xff), new If((new Or(R1[1], R1[2])), new Mov(($0 = R32[8]), (new Add($0, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
        case 0x77: return [((((_pfxLength) & 0xff) + 2) & 0xff), new If((new And((new Not(R1[1])), (new Not(R1[2])))), new Mov(($0 = R32[8]), (new Add($0, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
        case 0x78: return [((((_pfxLength) & 0xff) + 2) & 0xff), new If(R1[3], new Mov(($0 = R32[8]), (new Add($0, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
        case 0x79: return [((((_pfxLength) & 0xff) + 2) & 0xff), new If((new Not(R1[3])), new Mov(($0 = R32[8]), (new Add($0, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
        case 0x7a: return [((((_pfxLength) & 0xff) + 2) & 0xff), new If(R1[4], new Mov(($0 = R32[8]), (new Add($0, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
        case 0x7b: return [((((_pfxLength) & 0xff) + 2) & 0xff), new If((new Not(R1[4])), new Mov(($0 = R32[8]), (new Add($0, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
        case 0x7c: return [((((_pfxLength) & 0xff) + 2) & 0xff), new If((new Not((new Eq(R1[0], R1[3])))), new Mov(($0 = R32[8]), (new Add($0, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
        case 0x7d: return [((((_pfxLength) & 0xff) + 2) & 0xff), new If((new Eq(R1[0], R1[3])), new Mov(($0 = R32[8]), (new Add($0, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
        case 0x7e: return [((((_pfxLength) & 0xff) + 2) & 0xff), new If((new Or((new Not((new Eq(R1[0], R1[3])))), R1[2])), new Mov(($0 = R32[8]), (new Add($0, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
        case 0x7f: return [((((_pfxLength) & 0xff) + 2) & 0xff), new If((new And((new Eq(R1[0], R1[3])), (new Not(R1[2])))), new Mov(($0 = R32[8]), (new Add($0, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
        case 0x90: return [((((_pfxLength) & 0xff) + 1) & 0xff), new FnCall('Nop')];
        case 0x91: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($2 = (new Register32)), ($0 = R32[0])), new Mov($0, ($1 = R32[1])), new Mov($1, $2)];
        case 0x92: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($2 = (new Register32)), ($0 = R32[0])), new Mov($0, ($1 = R32[2])), new Mov($1, $2)];
        case 0x93: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($2 = (new Register32)), ($0 = R32[0])), new Mov($0, ($1 = R32[3])), new Mov($1, $2)];
        case 0x94: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($2 = (new Register32)), ($0 = R32[0])), new Mov($0, ($1 = R32[4])), new Mov($1, $2)];
        case 0x95: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($2 = (new Register32)), ($0 = R32[0])), new Mov($0, ($1 = R32[5])), new Mov($1, $2)];
        case 0x96: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($2 = (new Register32)), ($0 = R32[0])), new Mov($0, ($1 = R32[6])), new Mov($1, $2)];
        case 0x97: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($2 = (new Register32)), ($0 = R32[0])), new Mov($0, ($1 = R32[7])), new Mov($1, $2)];
        case 0x98: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[0], new i32(R16[0]))];
        case 0x99: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[2], (new Neg(new i32((new Lt(R32[0], new i8(0)))))))];
        case 0x9a: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-2)))), new Mov(new Mem16($0), ($1 = R16[17])), new Mov($1, new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff)))), new Mov($0, (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($2 = R32[8]), new i8(_pfxLength + 7)))), new Mov($2, new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))];
        case 0x9c: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), R32[32])];
        case 0x9d: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[32], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0xa0: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R8[0], new Mem8(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))))];
        case 0xa1: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[0], new Mem32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))))];
        case 0xa2: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem8(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))), R8[0])];
        case 0xa3: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(new Mem32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))), R32[0])];
        case 0xa4: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(new Mem8(R32[6]), new Mem8(R32[7]))];
        case 0xa5: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(new Mem32(R32[6]), new Mem32(R32[7]))];
        case 0xa6: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem8(R32[6])), ($1 = new Mem8(R32[7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0xa7: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R1[2], (new Eq(($0 = new Mem32(R32[6])), ($1 = new Mem32(R32[7]))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0xa8: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R1[2], (new Eq((new And(R8[0], new i8(new u8(b[i+1])))), new i8(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0xa9: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R1[2], (new Eq((new And(R32[0], new i32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))))), new i32(0)))), new Mov(R1[1], new u1(0)), new Mov(R1[0], new u1(0))];
        case 0xaa: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(new Mem8(R32[7]), R8[0])];
        case 0xab: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(new Mem32(R32[7]), R32[0])];
        case 0xac: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R8[0], new Mem8(R32[6]))];
        case 0xad: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[0], new Mem32(R32[6]))];
        case 0xae: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R1[2], (new Eq(($0 = R8[0]), ($1 = new Mem8(R32[7]))))), new Mov(R1[1], (new Lt(new u8($0), new u8($1))))];
        case 0xaf: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R1[2], (new Eq(($0 = R32[0]), ($1 = new Mem32(R32[6]))))), new Mov(R1[1], (new Lt(new u32($0), new u32($1))))];
        case 0xb0: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R8[0], new i8(new u8(b[i+1])))];
        case 0xb1: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R8[1], new i8(new u8(b[i+1])))];
        case 0xb2: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R8[2], new i8(new u8(b[i+1])))];
        case 0xb3: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R8[3], new i8(new u8(b[i+1])))];
        case 0xb4: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R8[4], new i8(new u8(b[i+1])))];
        case 0xb5: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R8[5], new i8(new u8(b[i+1])))];
        case 0xb6: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R8[6], new i8(new u8(b[i+1])))];
        case 0xb7: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(R8[7], new i8(new u8(b[i+1])))];
        case 0xb8: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[0], new i32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))))];
        case 0xb9: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[1], new i32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))))];
        case 0xba: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[2], new i32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))))];
        case 0xbb: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[3], new i32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))))];
        case 0xbc: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[4], new i32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))))];
        case 0xbd: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[5], new i32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))))];
        case 0xbe: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[6], new i32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))))];
        case 0xbf: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(R32[7], new i32(new u32(((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0))))];
        case 0xc2: return [((((_pfxLength) & 0xff) + 3) & 0xff), new Mov(R32[8], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4)))), new Mov($0, (new Add($0, new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff))))))];
        case 0xc3: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[8], new Mem32(($0 = R32[4]))), new Mov($0, (new Add($0, new u8(4))))];
        case 0xc8: return [((((_pfxLength) & 0xff) + 4) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), ($1 = R32[5])), new Mov(($2 = (new Register32)), $0), (((~((((b[i+3] & 31) & 0xff) < 2) & 0x1)) & 0x1)?new FnCall('ENTER.loop', new u8(b[i+3] & 31)):null), (((~((((b[i+3] & 31) & 0xff) < 2) & 0x1)) & 0x1)?new Mov($1, (new Add($1, new i32(-((((((((b[i+3] & 31) & 0xff) + -2) & 0xff) << 2) & 0xff)) >> 0))))):null), (((~((((b[i+3] & 31) & 0xff) == 0) & 0x1)) & 0x1)?new Mov($0, (new Add($0, new i32(-4)))):null), (((~((((b[i+3] & 31) & 0xff) == 0) & 0x1)) & 0x1)?new Mov(new Mem32($0), $2):null), new Mov($1, $2), new Mov($0, (new Add($0, new i32(-((((((b[i+1] | ((b[i+2] << 8) & 0xffff)) & 0xffff)) << 16 >> 16)) >> 0)))))];
        case 0xc9: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(($1 = R32[4]), ($0 = R32[5])), new Mov($0, new Mem32($1)), new Mov($1, (new Add($1, new u8(4))))];
        case 0xcc: return [((((_pfxLength) & 0xff) + 1) & 0xff), new FnCall('Interrupt', new u8(3))];
        case 0xcd: return [((((_pfxLength) & 0xff) + 2) & 0xff), new FnCall('Interrupt', new u8(new u8(b[i+1])))];
        case 0xce: return [((((_pfxLength) & 0xff) + 1) & 0xff), new If(R1[0], new FnCall('Interrupt', new u8(4)))];
        case 0xe0: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[1]), (new Add($0, new i32(-1)))), new If((new And((new Not((new Eq($0, new i32(0))))), (new Not(R1[2])))), new Mov(($1 = R32[8]), (new Add($1, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
        case 0xe1: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[1]), (new Add($0, new i32(-1)))), new If((new And((new Not((new Eq($0, new i32(0))))), R1[2])), new Mov(($1 = R32[8]), (new Add($1, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
        case 0xe2: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[1]), (new Add($0, new i32(-1)))), new If((new Not((new Eq($0, new i32(0))))), new Mov(($1 = R32[8]), (new Add($1, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24))))))];
        case 0xe8: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = R32[4]), (new Add($0, new i32(-4)))), new Mov(new Mem32($0), (new Add(($1 = R32[8]), new i8(_pfxLength + 5)))), new Mov($1, (new Add($1, new i32(((((((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0)) >>> 0)) >> 0) + ((_pfxLength + 5) << 24 >> 24)))))];
        case 0xe9: return [((((_pfxLength) & 0xff) + 5) & 0xff), new Mov(($0 = R32[8]), (new Add($0, new i32(((((((((b[i+1] | ((b[i+2] << 8) >>> 0)) >>> 0) | ((b[i+3] << 16) >>> 0)) >>> 0) | ((b[i+4] << 24) >>> 0)) >>> 0)) >> 0) + ((_pfxLength + 5) << 24 >> 24)))))];
        case 0xea: return [((((_pfxLength) & 0xff) + 7) & 0xff), new Mov(R16[17], new i16(new u16(b[i+1] | ((b[i+2] << 8) & 0xffff)))), new Mov(R32[8], new i32(new u32(((((b[i+3] | ((b[i+4] << 8) >>> 0)) >>> 0) | ((b[i+5] << 16) >>> 0)) >>> 0) | ((b[i+6] << 24) >>> 0))))];
        case 0xeb: return [((((_pfxLength) & 0xff) + 2) & 0xff), new Mov(($0 = R32[8]), (new Add($0, new i8(((b[i+1]) << 24 >> 24) + ((_pfxLength + 2) << 24 >> 24)))))];
        case 0xec: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R8[0], new FnCall('INPORT', R16[2]))];
        case 0xed: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R32[0], new FnCall('INPORT', R16[2]))];
        case 0xee: return [((((_pfxLength) & 0xff) + 1) & 0xff), new FnCall('OUTPORT', R16[2], R8[0])];
        case 0xef: return [((((_pfxLength) & 0xff) + 1) & 0xff), new FnCall('OUTPORT', R16[2], R32[0])];
        case 0xf1: return [((((_pfxLength) & 0xff) + 1) & 0xff), new FnCall('Interrupt', new u8(1))];
        case 0xf4: return [((((_pfxLength) & 0xff) + 1) & 0xff), new FnCall('HLT')];
        case 0xf8: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R1[1], new u1(0))];
        case 0xf9: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R1[1], new u1(1))];
        case 0xfa: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R1[7], new u1(0))];
        case 0xfb: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R1[7], new u1(1))];
        case 0xfc: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R1[6], new u1(0))];
        case 0xfd: return [((((_pfxLength) & 0xff) + 1) & 0xff), new Mov(R1[6], new u1(1))];
    }

}
exports.PC = R.EIP;
exports.SP = R.ESP;
exports.FP = R.EBP;
exports.returnPC = Mem32(exports.SP);

exports.paddingLength = function(b, i) {
    var l;
    for(l = 0; i < b.length && (b[i] === 0x90 /*NOP*/ || b[i] === 0xCC /*INT3*/); i++, l++);
    return l;
};
exports.skipUnknownInstruction = function(b, i) {
    // HACK skip the entire function, if possible.
    var l;
    for(l = 0; i < b.length && (i % 16 || b[i - 1] !== 0x90 /*NOP*/ && b[i - 1] !== 0xCC /*INT3*/); i++, l++);
    return l;
};
